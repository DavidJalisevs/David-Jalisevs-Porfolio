
StarterKit.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001c  00800100  00004108  00004208  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00004108  00000000  00000000  00000100  2**8
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000008ac  0080011c  0080011c  00004224  2**1
                  ALLOC
  3 .comment      00000011  00000000  00000000  00004224  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00004238  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000420  00000000  00000000  00004278  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003d02  00000000  00000000  00004698  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001108  00000000  00000000  0000839a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002c11  00000000  00000000  000094a2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000008dc  00000000  00000000  0000c0b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000f23  00000000  00000000  0000c990  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000034f9  00000000  00000000  0000d8b3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000428  00000000  00000000  00010db0  2**3
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 ed 0d 	jmp	0x1bda	; 0x1bda <__ctors_end>
       4:	0c 94 66 0e 	jmp	0x1ccc	; 0x1ccc <__bad_interrupt>
       8:	0c 94 66 0e 	jmp	0x1ccc	; 0x1ccc <__bad_interrupt>
       c:	0c 94 66 0e 	jmp	0x1ccc	; 0x1ccc <__bad_interrupt>
      10:	0c 94 66 0e 	jmp	0x1ccc	; 0x1ccc <__bad_interrupt>
      14:	0c 94 66 0e 	jmp	0x1ccc	; 0x1ccc <__bad_interrupt>
      18:	0c 94 66 0e 	jmp	0x1ccc	; 0x1ccc <__bad_interrupt>
      1c:	0c 94 66 0e 	jmp	0x1ccc	; 0x1ccc <__bad_interrupt>
      20:	0c 94 66 0e 	jmp	0x1ccc	; 0x1ccc <__bad_interrupt>
      24:	0c 94 66 0e 	jmp	0x1ccc	; 0x1ccc <__bad_interrupt>
      28:	0c 94 66 0e 	jmp	0x1ccc	; 0x1ccc <__bad_interrupt>
      2c:	0c 94 66 0e 	jmp	0x1ccc	; 0x1ccc <__bad_interrupt>
      30:	0c 94 66 0e 	jmp	0x1ccc	; 0x1ccc <__bad_interrupt>
      34:	0c 94 c1 0e 	jmp	0x1d82	; 0x1d82 <__vector_13>
      38:	0c 94 00 0f 	jmp	0x1e00	; 0x1e00 <__vector_14>
      3c:	0c 94 66 0e 	jmp	0x1ccc	; 0x1ccc <__bad_interrupt>
      40:	0c 94 66 0e 	jmp	0x1ccc	; 0x1ccc <__bad_interrupt>
      44:	0c 94 66 0e 	jmp	0x1ccc	; 0x1ccc <__bad_interrupt>
      48:	0c 94 66 0e 	jmp	0x1ccc	; 0x1ccc <__bad_interrupt>
      4c:	0c 94 66 0e 	jmp	0x1ccc	; 0x1ccc <__bad_interrupt>
      50:	0c 94 66 0e 	jmp	0x1ccc	; 0x1ccc <__bad_interrupt>
      54:	0c 94 66 0e 	jmp	0x1ccc	; 0x1ccc <__bad_interrupt>
      58:	0c 94 66 0e 	jmp	0x1ccc	; 0x1ccc <__bad_interrupt>
      5c:	0c 94 66 0e 	jmp	0x1ccc	; 0x1ccc <__bad_interrupt>
      60:	0c 94 66 0e 	jmp	0x1ccc	; 0x1ccc <__bad_interrupt>
      64:	0c 94 66 0e 	jmp	0x1ccc	; 0x1ccc <__bad_interrupt>
      68:	0c 94 66 0e 	jmp	0x1ccc	; 0x1ccc <__bad_interrupt>
      6c:	0c 94 66 0e 	jmp	0x1ccc	; 0x1ccc <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	5a 55       	subi	r21, 0x5A	; 90
      72:	01 20       	and	r0, r1
      74:	01 01       	movw	r0, r2
      76:	00 38       	cpi	r16, 0x80	; 128
      78:	08 00       	.word	0x0008	; ????
	...

00000090 <io_table>:
      90:	81 00 45 00 5d ff 5e 10 27 ff 2a d2 2b 7d 21 0c     ..E.].^.'.*.+}!.
      a0:	22 fb 85 00 84 00 89 03 88 8d 81 09 6f 02 44 42     "...........o.DB
      b0:	47 00 45 01 b0 83 b3 00 b1 01 24 b9 25 57 8a 1d     G.E.......$.%W..
      c0:	8b 03                                               ..

000000c2 <patchCommands>:
      c2:	8d 11 90 11 98 11 9c 11 a3 11 ab 11 b0 11 b5 11     ................
      d2:	b8 11 c8 11 cb 11 ce 11 09 12 0c 12 0f 12           ..............

000000e0 <fader>:
      e0:	00 40 88 91 d2 e4 ad b5 b6 be bf ff                 .@..........

000000ec <font>:
	...
     140:	00 00 ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00     ................
     150:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
     160:	00 00 00 00 00 00 ff 00 00 00 00 00 00 00 00 00     ................
	...
     180:	00 00 00 ff 00 ff 00 00 00 ff 00 ff 00 00 00 ff     ................
     190:	00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     1d4:	00 00 00 ff 00 ff 00 00 ff ff ff ff ff 00 00 ff     ................
     1e4:	00 ff 00 00 00 ff 00 ff 00 00 ff ff ff ff ff 00     ................
     1f4:	00 ff 00 ff 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     214:	ff 00 00 00 00 ff ff ff 00 00 ff 00 ff 00 ff 00     ................
     224:	ff 00 ff 00 00 00 00 ff ff ff 00 00 00 00 ff 00     ................
     234:	ff 00 ff 00 ff 00 ff 00 00 ff ff ff 00 00 00 00     ................
     244:	ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     260:	ff ff 00 00 ff 00 ff ff 00 00 ff 00 00 00 00 ff     ................
     270:	00 00 00 00 ff 00 00 00 00 ff 00 00 00 00 ff 00     ................
     280:	00 ff ff 00 ff 00 00 ff ff 00 00 00 00 00 00 00     ................
	...
     2a8:	00 ff 00 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00     ................
     2b8:	00 00 00 ff 00 00 00 00 ff 00 ff 00 ff 00 ff 00     ................
     2c8:	00 ff 00 00 00 ff ff 00 ff 00 00 00 00 00 00 00     ................
	...
     2ec:	ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00     ................
	...
     334:	00 ff 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00     ................
     344:	00 ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00 00     ................
     354:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
     364:	00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
     374:	00 00 00 00 00 00 00 ff 00 00 00 00 00 00 ff 00     ................
     384:	00 00 00 00 ff 00 00 00 00 00 00 ff 00 00 00 00     ................
     394:	00 ff 00 00 00 00 00 ff 00 00 00 00 ff 00 00 00     ................
     3a4:	00 00 ff 00 00 00 00 ff 00 00 00 00 00 00 00 00     ................
	...
     3c8:	00 00 ff 00 00 00 ff 00 ff 00 ff 00 00 ff ff ff     ................
     3d8:	00 00 00 00 ff 00 00 00 00 ff ff ff 00 00 ff 00     ................
     3e8:	ff 00 ff 00 00 00 ff 00 00 00 00 00 00 00 00 00     ................
	...
     418:	ff 00 00 00 00 00 ff 00 00 00 ff ff ff ff ff 00     ................
     428:	00 00 ff 00 00 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
     474:	00 00 00 ff ff 00 00 00 00 ff ff 00 00 00 ff ff     ................
	...
     4b0:	00 00 ff ff ff ff ff 00 00 00 00 00 00 00 00 00     ................
	...
     504:	00 00 00 ff ff 00 00 00 00 ff ff 00 00 00 00 00     ................
	...
     534:	ff 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00     ................
     544:	ff 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00     ................
     554:	ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     578:	00 00 ff ff 00 00 00 ff 00 00 ff 00 00 ff 00 00     ................
     588:	ff 00 00 ff 00 00 ff 00 00 ff 00 00 ff 00 00 ff     ................
     598:	00 00 ff 00 00 00 ff ff 00 00 00 00 00 00 00 00     ................
	...
     5c0:	00 00 ff 00 00 00 00 ff ff 00 00 00 00 00 ff 00     ................
     5d0:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
     5e0:	ff 00 00 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     608:	00 ff ff ff 00 00 ff 00 00 00 ff 00 00 00 00 00     ................
     618:	ff 00 00 00 00 ff 00 00 00 00 ff 00 00 00 00 ff     ................
     628:	00 00 00 00 ff ff ff ff ff 00 00 00 00 00 00 00     ................
	...
     650:	ff ff ff ff ff 00 00 00 00 00 ff 00 00 00 00 ff     ................
     660:	00 00 00 00 ff ff 00 00 00 00 00 00 ff 00 ff 00     ................
     670:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     698:	00 00 00 ff 00 00 00 00 ff ff 00 00 00 ff 00 ff     ................
     6a8:	00 00 ff 00 00 ff 00 00 ff ff ff ff ff 00 00 00     ................
     6b8:	00 ff 00 00 00 00 00 ff 00 00 00 00 00 00 00 00     ................
	...
     6e0:	ff ff ff ff ff 00 ff 00 00 00 00 00 ff ff ff ff     ................
     6f0:	00 00 00 00 00 00 ff 00 00 00 00 00 ff 00 ff 00     ................
     700:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     728:	00 00 ff ff 00 00 00 ff 00 00 00 00 ff 00 00 00     ................
     738:	00 00 ff ff ff ff 00 00 ff 00 00 00 ff 00 ff 00     ................
     748:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     770:	ff ff ff ff ff 00 00 00 00 00 ff 00 00 00 00 ff     ................
     780:	00 00 00 00 00 ff 00 00 00 00 ff 00 00 00 00 00     ................
     790:	ff 00 00 00 00 00 ff 00 00 00 00 00 00 00 00 00     ................
	...
     7b8:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     7c8:	ff 00 00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00     ................
     7d8:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     800:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     810:	ff 00 00 ff ff ff ff 00 00 00 00 00 ff 00 00 00     ................
     820:	00 ff 00 00 00 ff ff 00 00 00 00 00 00 00 00 00     ................
	...
     854:	00 ff ff 00 00 00 00 ff ff 00 00 00 00 00 00 00     ................
     864:	00 00 00 ff ff 00 00 00 00 ff ff 00 00 00 00 00     ................
	...
     89c:	00 ff ff 00 00 00 00 ff ff 00 00 00 00 00 00 00     ................
     8ac:	00 00 00 ff ff 00 00 00 00 ff ff 00 00 00 ff ff     ................
	...
     8e0:	00 ff 00 00 00 00 ff 00 00 00 00 ff 00 00 00 00     ................
     8f0:	00 00 ff 00 00 00 00 00 00 ff 00 00 00 00 00 00     ................
	...
     92c:	ff ff ff ff ff 00 00 00 00 00 00 00 ff ff ff ff     ................
     93c:	ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     96c:	00 00 00 ff 00 00 00 00 00 00 ff 00 00 00 00 00     ................
     97c:	00 ff 00 00 00 00 ff 00 00 00 00 ff 00 00 00 00     ................
	...
     9b0:	00 ff ff ff 00 00 ff 00 00 00 ff 00 00 00 00 ff     ................
     9c0:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
     9d0:	00 00 00 00 00 00 ff 00 00 00 00 00 00 00 00 00     ................
	...
     9f8:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 ff ff     ................
     a08:	ff 00 ff 00 ff 00 ff 00 ff 00 ff ff ff 00 ff 00     ................
     a18:	00 00 00 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     a40:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     a50:	ff 00 ff ff ff ff ff 00 ff 00 00 00 ff 00 ff 00     ................
     a60:	00 00 ff 00 ff 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
     a88:	ff ff ff ff 00 00 00 ff 00 00 ff 00 00 ff 00 00     ................
     a98:	ff 00 00 ff ff ff 00 00 00 ff 00 00 ff 00 00 ff     ................
     aa8:	00 00 ff 00 ff ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     ad0:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     ae0:	00 00 ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00     ................
     af0:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     b18:	ff ff ff ff 00 00 00 ff 00 00 ff 00 00 ff 00 00     ................
     b28:	ff 00 00 ff 00 00 ff 00 00 ff 00 00 ff 00 00 ff     ................
     b38:	00 00 ff 00 ff ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     b60:	ff ff ff ff ff 00 ff 00 00 00 00 00 ff 00 00 00     ................
     b70:	00 00 ff ff ff ff 00 00 ff 00 00 00 00 00 ff 00     ................
     b80:	00 00 00 00 ff ff ff ff ff 00 00 00 00 00 00 00     ................
	...
     ba8:	ff ff ff ff ff 00 ff 00 00 00 00 00 ff 00 00 00     ................
     bb8:	00 00 ff ff ff ff 00 00 ff 00 00 00 00 00 ff 00     ................
     bc8:	00 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     bf0:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     c00:	00 00 ff 00 00 00 00 00 ff 00 00 ff ff 00 ff 00     ................
     c10:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     c38:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     c48:	ff 00 ff ff ff ff ff 00 ff 00 00 00 ff 00 ff 00     ................
     c58:	00 00 ff 00 ff 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
     c80:	00 ff ff ff 00 00 00 00 ff 00 00 00 00 00 ff 00     ................
     c90:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
     ca0:	ff 00 00 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     cc8:	00 00 ff ff ff 00 00 00 00 ff 00 00 00 00 00 ff     ................
     cd8:	00 00 00 00 00 ff 00 00 00 00 00 ff 00 00 ff 00     ................
     ce8:	00 ff 00 00 00 ff ff 00 00 00 00 00 00 00 00 00     ................
	...
     d10:	ff 00 00 00 ff 00 ff 00 00 ff 00 00 ff 00 ff 00     ................
     d20:	00 00 ff ff 00 00 00 00 ff 00 ff 00 00 00 ff 00     ................
     d30:	00 ff 00 00 ff 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
     d58:	ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00     ................
     d68:	00 00 ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00     ................
     d78:	00 00 00 00 ff ff ff ff ff 00 00 00 00 00 00 00     ................
	...
     da0:	ff 00 00 00 ff 00 ff ff 00 ff ff 00 ff 00 ff 00     ................
     db0:	ff 00 ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00     ................
     dc0:	00 00 ff 00 ff 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
     de8:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff ff 00 00     ................
     df8:	ff 00 ff 00 ff 00 ff 00 ff 00 00 ff ff 00 ff 00     ................
     e08:	00 00 ff 00 ff 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
     e30:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     e40:	ff 00 ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00     ................
     e50:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     e78:	ff ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     e88:	ff 00 ff ff ff ff 00 00 ff 00 00 00 00 00 ff 00     ................
     e98:	00 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     ec0:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     ed0:	ff 00 ff 00 00 00 ff 00 ff 00 ff 00 ff 00 ff 00     ................
     ee0:	00 ff 00 00 00 ff ff 00 ff 00 00 00 00 00 00 00     ................
	...
     f08:	ff ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     f18:	ff 00 ff ff ff ff 00 00 ff 00 ff 00 00 00 ff 00     ................
     f28:	00 ff 00 00 ff 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
     f50:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     f60:	00 00 00 ff ff ff 00 00 00 00 00 00 ff 00 ff 00     ................
     f70:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
     f98:	ff ff ff ff ff 00 00 00 ff 00 00 00 00 00 ff 00     ................
     fa8:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
     fb8:	ff 00 00 00 00 00 ff 00 00 00 00 00 00 00 00 00     ................
	...
     fe0:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00 00 00     ................
     ff0:	ff 00 ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00     ................
    1000:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
    1028:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    1038:	ff 00 ff 00 00 00 ff 00 00 ff 00 ff 00 00 00 ff     ................
    1048:	00 ff 00 00 00 00 ff 00 00 00 00 00 00 00 00 00     ................
	...
    1070:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    1080:	ff 00 ff 00 00 00 ff 00 ff 00 ff 00 ff 00 ff 00     ................
    1090:	ff 00 ff 00 00 ff 00 ff 00 00 00 00 00 00 00 00     ................
	...
    10b8:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 00 ff 00 ff     ................
    10c8:	00 00 00 00 ff 00 00 00 00 ff 00 ff 00 00 ff 00     ................
    10d8:	00 00 ff 00 ff 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
    1100:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 00 ff 00 ff     ................
    1110:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
    1120:	ff 00 00 00 00 00 ff 00 00 00 00 00 00 00 00 00     ................
	...
    1148:	ff ff ff ff ff 00 00 00 00 00 ff 00 00 00 00 ff     ................
    1158:	00 00 00 00 ff 00 00 00 00 ff 00 00 00 00 ff 00     ................
    1168:	00 00 00 00 ff ff ff ff ff 00 00 00 00 00 00 00     ................
	...
    1188:	00 00 00 ff ff ff 00 00 00 ff 00 00 00 00 00 ff     ................
    1198:	00 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00     ................
    11a8:	00 ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00 00     ................
    11b8:	00 00 00 ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
	...
    11d8:	ff 00 00 00 00 00 00 ff 00 00 00 00 00 ff 00 00     ................
    11e8:	00 00 00 00 ff 00 00 00 00 00 00 ff 00 00 00 00     ................
    11f8:	00 ff 00 00 00 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
    1218:	00 00 00 ff ff ff 00 00 00 00 00 ff 00 00 00 00     ................
    1228:	00 ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00 00     ................
    1238:	00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00 ff     ................
    1248:	00 00 00 ff ff ff 00 00 00 00 00 00 00 00 00 00     ................
	...
    1264:	ff 00 00 00 00 ff 00 ff 00 00 ff 00 00 00 ff 00     ................
	...
    12e0:	ff ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
    12f0:	00 00 00 ff 00 00 00 00 00 00 ff 00 00 00 00 00     ................
    1300:	00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    134c:	00 ff ff ff 00 00 00 00 00 00 ff 00 00 ff ff ff     ................
    135c:	ff 00 ff 00 00 00 ff 00 00 ff ff ff ff 00 00 00     ................
	...
    1388:	ff 00 00 00 00 00 ff 00 00 00 00 00 ff ff ff ff     ................
    1398:	00 00 ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00     ................
    13a8:	00 00 ff 00 ff ff ff ff 00 00 00 00 00 00 00 00     ................
	...
    13dc:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    13ec:	00 00 ff 00 00 00 ff 00 00 ff ff ff 00 00 00 00     ................
	...
    141c:	ff 00 00 00 00 00 ff 00 00 ff ff ff ff 00 ff 00     ................
    142c:	00 00 ff 00 ff 00 00 00 ff 00 ff 00 00 00 ff 00     ................
    143c:	00 ff ff ff ff 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    146c:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff ff ff ff     ................
    147c:	00 00 ff 00 00 00 00 00 00 ff ff ff 00 00 00 00     ................
	...
    14a8:	00 00 ff ff 00 00 00 ff 00 00 ff 00 00 ff 00 00     ................
    14b8:	00 00 ff ff ff 00 00 00 00 ff 00 00 00 00 00 ff     ................
    14c8:	00 00 00 00 00 ff 00 00 00 00 00 00 00 00 00 00     ................
	...
    14fc:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    150c:	ff 00 ff 00 00 00 ff 00 00 ff ff ff ff 00 00 00     ................
    151c:	00 00 ff 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
    1538:	ff 00 00 00 00 00 ff 00 00 00 00 00 ff ff ff ff     ................
    1548:	00 00 ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00     ................
    1558:	00 00 ff 00 ff 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
    1580:	00 00 ff 00 00 00 00 00 00 00 00 00 00 ff ff 00     ................
    1590:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
    15a0:	ff 00 00 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
    15cc:	ff 00 00 00 00 00 00 00 00 00 00 ff ff 00 00 00     ................
    15dc:	00 00 ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00     ................
    15ec:	00 00 00 00 ff 00 00 ff 00 00 ff 00 00 00 ff ff     ................
	...
    1610:	ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00     ................
    1620:	ff 00 ff 00 00 ff 00 00 ff ff ff 00 00 00 ff 00     ................
    1630:	00 ff 00 00 ff 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
    1658:	00 ff ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00     ................
    1668:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
    1678:	ff 00 00 00 00 ff ff ff 00 00 00 00 00 00 00 00     ................
	...
    16ac:	ff ff 00 ff 00 00 ff 00 ff 00 ff 00 ff 00 ff 00     ................
    16bc:	ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 ff 00 00 00     ................
	...
    16f4:	ff 00 ff ff 00 00 ff ff 00 00 ff 00 ff 00 00 00     ................
    1704:	ff 00 ff 00 00 00 ff 00 ff 00 00 00 ff 00 00 00     ................
	...
    173c:	00 ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    174c:	ff 00 ff 00 00 00 ff 00 00 ff ff ff 00 00 00 00     ................
	...
    1784:	ff ff ff ff 00 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    1794:	ff 00 ff 00 00 00 ff 00 ff ff ff ff 00 00 ff 00     ................
    17a4:	00 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    17cc:	00 ff ff ff ff 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    17dc:	ff 00 ff 00 00 00 ff 00 00 ff ff ff ff 00 00 00     ................
    17ec:	00 00 ff 00 00 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
    1814:	ff 00 ff ff 00 00 ff ff 00 00 ff 00 ff 00 00 00     ................
    1824:	00 00 ff 00 00 00 00 00 ff 00 00 00 00 00 00 00     ................
	...
    185c:	00 ff ff ff ff 00 ff 00 00 00 00 00 00 ff ff ff     ................
    186c:	00 00 00 00 00 00 ff 00 ff ff ff ff 00 00 00 00     ................
	...
    1898:	00 00 ff 00 00 00 00 00 ff 00 00 00 ff ff ff ff     ................
    18a8:	ff 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
    18b8:	ff 00 00 00 00 00 00 ff ff 00 00 00 00 00 00 00     ................
	...
    18ec:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    18fc:	ff 00 ff 00 00 ff ff 00 00 ff ff 00 ff 00 00 00     ................
	...
    1934:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    1944:	ff 00 00 ff 00 ff 00 00 00 00 ff 00 00 00 00 00     ................
	...
    197c:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00 ff 00     ................
    198c:	ff 00 ff 00 ff 00 ff 00 00 ff 00 ff 00 00 00 00     ................
	...
    19c4:	ff 00 00 00 ff 00 00 ff 00 ff 00 00 00 00 ff 00     ................
    19d4:	00 00 00 ff 00 ff 00 00 ff 00 00 00 ff 00 00 00     ................
	...
    1a0c:	ff 00 00 00 ff 00 ff 00 00 00 ff 00 ff 00 00 00     ................
    1a1c:	ff 00 00 ff 00 ff 00 00 00 00 ff 00 00 00 00 ff     ................
    1a2c:	00 00 00 00 ff 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1a54:	ff ff ff ff ff 00 00 00 00 ff 00 00 00 00 ff 00     ................
    1a64:	00 00 00 ff 00 00 00 00 ff ff ff ff ff 00 00 00     ................
	...
    1a8c:	00 ff 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00     ................
    1a9c:	00 00 ff 00 00 00 00 ff 00 00 00 00 00 00 ff 00     ................
    1aac:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
    1abc:	00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1ad4:	ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00     ................
    1ae4:	00 00 ff 00 00 00 00 00 ff 00 00 00 00 00 ff 00     ................
    1af4:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
    1b04:	ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    1b14:	00 00 00 00 00 00 00 ff 00 00 00 00 00 00 ff 00     ................
    1b24:	00 00 00 00 ff 00 00 00 00 00 ff 00 00 00 00 00     ................
    1b34:	00 ff 00 00 00 00 ff 00 00 00 00 00 ff 00 00 00     ................
    1b44:	00 00 ff 00 00 00 00 ff 00 00 00 00 00 00 00 00     ................
	...
    1b74:	00 ff 00 00 ff 00 ff 00 ff 00 ff 00 ff 00 00 ff     ................
	...

00001ba4 <__c.2360>:
    1ba4:	53 63 6f 72 65 00                                   Score.

00001baa <__c.2362>:
    1baa:	48 65 61 6c 74 68 00                                Health.

00001bb1 <__c.2364>:
    1bb1:	48 69 74 20 62 79 20 53 74 6f 72 6d 74 72 6f 6f     Hit by Stormtroo
    1bc1:	70 65 72 00                                         per.

00001bc5 <__c.2366>:
    1bc5:	46 72 75 69 74 73 00                                Fruits.

00001bcc <__c.2368>:
    1bcc:	59 4f 55 20 4c 4f 53 54 20 48 41 48 41 00           YOU LOST HAHA.

00001bda <__ctors_end>:
    1bda:	11 24       	eor	r1, r1
    1bdc:	1f be       	out	0x3f, r1	; 63
    1bde:	cf ef       	ldi	r28, 0xFF	; 255
    1be0:	d0 e1       	ldi	r29, 0x10	; 16
    1be2:	de bf       	out	0x3e, r29	; 62
    1be4:	cd bf       	out	0x3d, r28	; 61

00001be6 <__do_copy_data>:
    1be6:	11 e0       	ldi	r17, 0x01	; 1
    1be8:	a0 e0       	ldi	r26, 0x00	; 0
    1bea:	b1 e0       	ldi	r27, 0x01	; 1
    1bec:	e8 e0       	ldi	r30, 0x08	; 8
    1bee:	f1 e4       	ldi	r31, 0x41	; 65
    1bf0:	02 c0       	rjmp	.+4      	; 0x1bf6 <__do_copy_data+0x10>
    1bf2:	05 90       	lpm	r0, Z+
    1bf4:	0d 92       	st	X+, r0
    1bf6:	ac 31       	cpi	r26, 0x1C	; 28
    1bf8:	b1 07       	cpc	r27, r17
    1bfa:	d9 f7       	brne	.-10     	; 0x1bf2 <__do_copy_data+0xc>

00001bfc <__do_clear_bss>:
    1bfc:	29 e0       	ldi	r18, 0x09	; 9
    1bfe:	ac e1       	ldi	r26, 0x1C	; 28
    1c00:	b1 e0       	ldi	r27, 0x01	; 1
    1c02:	01 c0       	rjmp	.+2      	; 0x1c06 <.do_clear_bss_start>

00001c04 <.do_clear_bss_loop>:
    1c04:	1d 92       	st	X+, r1

00001c06 <.do_clear_bss_start>:
    1c06:	a8 3c       	cpi	r26, 0xC8	; 200
    1c08:	b2 07       	cpc	r27, r18
    1c0a:	e1 f7       	brne	.-8      	; 0x1c04 <.do_clear_bss_loop>

00001c0c <wdt_init>:
	  if (j == count) {
		 WriteEeprom(i*EEPROM_BLOCK_SIZE,(u8)EEPROM_FREE_BLOCK);
		 WriteEeprom(i*EEPROM_BLOCK_SIZE+1,(u8)(EEPROM_FREE_BLOCK>>8));
	  }
   }
}
    1c0c:	14 be       	out	0x34, r1	; 52
    1c0e:	0f b6       	in	r0, 0x3f	; 63
    1c10:	f8 94       	cli
    1c12:	a8 95       	wdr
    1c14:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
    1c18:	88 61       	ori	r24, 0x18	; 24
    1c1a:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
    1c1e:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
    1c22:	0f be       	out	0x3f, r0	; 63

00001c24 <Initialize>:
    1c24:	f8 94       	cli
    1c26:	80 e9       	ldi	r24, 0x90	; 144
    1c28:	90 e0       	ldi	r25, 0x00	; 0
    1c2a:	42 ec       	ldi	r20, 0xC2	; 194
    1c2c:	50 e0       	ldi	r21, 0x00	; 0
    1c2e:	fc 01       	movw	r30, r24
    1c30:	25 91       	lpm	r18, Z+
    1c32:	34 91       	lpm	r19, Z
    1c34:	f9 01       	movw	r30, r18
    1c36:	ff 27       	eor	r31, r31
    1c38:	30 83       	st	Z, r19
    1c3a:	02 96       	adiw	r24, 0x02	; 2
    1c3c:	48 17       	cp	r20, r24
    1c3e:	59 07       	cpc	r21, r25
    1c40:	b1 f7       	brne	.-20     	; 0x1c2e <Initialize+0xa>
    1c42:	0e 94 76 11 	call	0x22ec	; 0x22ec <isEepromFormatted>
    1c46:	81 11       	cpse	r24, r1
    1c48:	02 c0       	rjmp	.+4      	; 0x1c4e <Initialize+0x2a>
    1c4a:	0e 94 54 11 	call	0x22a8	; 0x22a8 <FormatEeprom>
    1c4e:	e9 e0       	ldi	r30, 0x09	; 9
    1c50:	f7 e0       	ldi	r31, 0x07	; 7
    1c52:	80 e8       	ldi	r24, 0x80	; 128
    1c54:	81 93       	st	Z+, r24
    1c56:	99 e0       	ldi	r25, 0x09	; 9
    1c58:	e5 31       	cpi	r30, 0x15	; 21
    1c5a:	f9 07       	cpc	r31, r25
    1c5c:	d9 f7       	brne	.-10     	; 0x1c54 <Initialize+0x30>
    1c5e:	89 e0       	ldi	r24, 0x09	; 9
    1c60:	97 e0       	ldi	r25, 0x07	; 7
    1c62:	90 93 16 09 	sts	0x0916, r25	; 0x800916 <mix_pos+0x1>
    1c66:	80 93 15 09 	sts	0x0915, r24	; 0x800915 <mix_pos>
    1c6a:	10 92 17 09 	sts	0x0917, r1	; 0x800917 <mix_bank>
    1c6e:	81 e0       	ldi	r24, 0x01	; 1
    1c70:	80 93 2e 09 	sts	0x092E, r24	; 0x80092e <tr4_barrel_lo>
    1c74:	80 93 2f 09 	sts	0x092F, r24	; 0x80092f <tr4_barrel_hi>
    1c78:	80 93 2d 09 	sts	0x092D, r24	; 0x80092d <tr4_params>
    1c7c:	10 92 1a 09 	sts	0x091A, r1	; 0x80091a <mixer>
    1c80:	10 92 20 09 	sts	0x0920, r1	; 0x800920 <tr2_vol>
    1c84:	10 92 26 09 	sts	0x0926, r1	; 0x800926 <tr3_vol>
    1c88:	10 92 2c 09 	sts	0x092C, r1	; 0x80092c <tr4_vol>
    1c8c:	10 92 f4 06 	sts	0x06F4, r1	; 0x8006f4 <sync_phase>
    1c90:	10 92 f6 06 	sts	0x06F6, r1	; 0x8006f6 <sync_flags>
    1c94:	92 e1       	ldi	r25, 0x12	; 18
    1c96:	90 93 f5 06 	sts	0x06F5, r25	; 0x8006f5 <sync_pulse>
    1c9a:	98 ed       	ldi	r25, 0xD8	; 216
    1c9c:	90 93 fc 06 	sts	0x06FC, r25	; 0x8006fc <render_lines_count>
    1ca0:	94 e1       	ldi	r25, 0x14	; 20
    1ca2:	90 93 fb 06 	sts	0x06FB, r25	; 0x8006fb <first_render_line>
    1ca6:	10 92 00 07 	sts	0x0700, r1	; 0x800700 <joypad1_status_hi+0x1>
    1caa:	10 92 ff 06 	sts	0x06FF, r1	; 0x8006ff <joypad1_status_hi>
    1cae:	10 92 04 07 	sts	0x0704, r1	; 0x800704 <joypad2_status_hi+0x1>
    1cb2:	10 92 03 07 	sts	0x0703, r1	; 0x800703 <joypad2_status_hi>
    1cb6:	80 93 19 09 	sts	0x0919, r24	; 0x800919 <sound_enabled>
    1cba:	0e 94 81 1a 	call	0x3502	; 0x3502 <InitializeVideoMode>
    1cbe:	78 94       	sei
    1cc0:	0e 94 80 1a 	call	0x3500	; 0x3500 <DisplayLogo>
    1cc4:	0e 94 2b 1b 	call	0x3656	; 0x3656 <main>
    1cc8:	0c 94 82 20 	jmp	0x4104	; 0x4104 <_exit>

00001ccc <__bad_interrupt>:
    1ccc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00001cd0 <sub_video_mode1>:
	brne .-4 ;~1 us
	nop
	sbiw r24,1
	brne WaitUs

	ret
    1cd0:	30 e0       	ldi	r19, 0x00	; 0
    1cd2:	3a 95       	dec	r19
    1cd4:	f1 f7       	brne	.-4      	; 0x1cd2 <sub_video_mode1+0x2>
    1cd6:	31 ec       	ldi	r19, 0xC1	; 193
    1cd8:	3a 95       	dec	r19
    1cda:	f1 f7       	brne	.-4      	; 0x1cd8 <sub_video_mode1+0x8>
    1cdc:	cc e1       	ldi	r28, 0x1C	; 28
    1cde:	d1 e0       	ldi	r29, 0x01	; 1
    1ce0:	08 ed       	ldi	r16, 0xD8	; 216
    1ce2:	a0 2e       	mov	r10, r16
    1ce4:	66 27       	eor	r22, r22
    1ce6:	76 e0       	ldi	r23, 0x06	; 6

00001ce8 <next_tile_line>:
    1ce8:	2d d1       	rcall	.+602    	; 0x1f44 <hsync_pulse>
    1cea:	3b e2       	ldi	r19, 0x2B	; 43
    1cec:	3a 95       	dec	r19
    1cee:	f1 f7       	brne	.-4      	; 0x1cec <next_tile_line+0x4>
    1cf0:	0e 94 a0 0e 	call	0x1d40	; 0x1d40 <render_tile_line>
    1cf4:	31 e1       	ldi	r19, 0x11	; 17
    1cf6:	3a 95       	dec	r19
    1cf8:	f1 f7       	brne	.-4      	; 0x1cf6 <next_tile_line+0xe>
    1cfa:	aa 94       	dec	r10
    1cfc:	89 f0       	breq	.+34     	; 0x1d20 <frame_end>
    1cfe:	c8 95       	lpm
    1d00:	63 95       	inc	r22
    1d02:	6c 30       	cpi	r22, 0x0C	; 12
    1d04:	29 f0       	breq	.+10     	; 0x1d10 <next_tile_row>
    1d06:	33 e0       	ldi	r19, 0x03	; 3
    1d08:	3a 95       	dec	r19
    1d0a:	f1 f7       	brne	.-4      	; 0x1d08 <next_tile_line+0x20>
    1d0c:	00 00       	nop
    1d0e:	ec cf       	rjmp	.-40     	; 0x1ce8 <next_tile_line>

00001d10 <next_tile_row>:
    1d10:	66 27       	eor	r22, r22
    1d12:	00 24       	eor	r0, r0
    1d14:	30 e5       	ldi	r19, 0x50	; 80
    1d16:	c3 0f       	add	r28, r19
    1d18:	d0 1d       	adc	r29, r0
    1d1a:	c8 95       	lpm
    1d1c:	00 00       	nop
    1d1e:	e4 cf       	rjmp	.-56     	; 0x1ce8 <next_tile_line>

00001d20 <frame_end>:
    1d20:	35 e0       	ldi	r19, 0x05	; 5
    1d22:	3a 95       	dec	r19
    1d24:	f1 f7       	brne	.-4      	; 0x1d22 <frame_end+0x2>
    1d26:	00 c0       	rjmp	.+0      	; 0x1d28 <frame_end+0x8>
    1d28:	0d d1       	rcall	.+538    	; 0x1f44 <hsync_pulse>
    1d2a:	e0 91 f6 06 	lds	r30, 0x06F6	; 0x8006f6 <sync_flags>
    1d2e:	42 e0       	ldi	r20, 0x02	; 2
    1d30:	e4 27       	eor	r30, r20
    1d32:	e1 60       	ori	r30, 0x01	; 1
    1d34:	e0 93 f6 06 	sts	0x06F6, r30	; 0x8006f6 <sync_flags>
    1d38:	e2 e0       	ldi	r30, 0x02	; 2
    1d3a:	e0 93 36 00 	sts	0x0036, r30	; 0x800036 <__TEXT_REGION_LENGTH__+0x7e0036>
    1d3e:	08 95       	ret

00001d40 <render_tile_line>:
    1d40:	de 01       	movw	r26, r28
    1d42:	4d 91       	ld	r20, X+
    1d44:	5d 91       	ld	r21, X+
    1d46:	67 9f       	mul	r22, r23
    1d48:	c0 01       	movw	r24, r0
    1d4a:	48 0f       	add	r20, r24
    1d4c:	59 1f       	adc	r21, r25
    1d4e:	fa 01       	movw	r30, r20
    1d50:	28 e2       	ldi	r18, 0x28	; 40

00001d52 <mode1_loop>:
    1d52:	05 91       	lpm	r16, Z+
    1d54:	08 b9       	out	0x08, r16	; 8
    1d56:	4d 91       	ld	r20, X+
    1d58:	05 91       	lpm	r16, Z+
    1d5a:	08 b9       	out	0x08, r16	; 8
    1d5c:	5d 91       	ld	r21, X+
    1d5e:	05 91       	lpm	r16, Z+
    1d60:	08 b9       	out	0x08, r16	; 8
    1d62:	00 c0       	rjmp	.+0      	; 0x1d64 <mode1_loop+0x12>
    1d64:	05 91       	lpm	r16, Z+
    1d66:	08 b9       	out	0x08, r16	; 8
    1d68:	48 0f       	add	r20, r24
    1d6a:	59 1f       	adc	r21, r25
    1d6c:	05 91       	lpm	r16, Z+
    1d6e:	08 b9       	out	0x08, r16	; 8
    1d70:	05 91       	lpm	r16, Z+
    1d72:	fa 01       	movw	r30, r20
    1d74:	2a 95       	dec	r18
    1d76:	08 b9       	out	0x08, r16	; 8
    1d78:	61 f7       	brne	.-40     	; 0x1d52 <mode1_loop>
    1d7a:	c8 95       	lpm
    1d7c:	00 27       	eor	r16, r16
    1d7e:	08 b9       	out	0x08, r16	; 8
    1d80:	08 95       	ret

00001d82 <__vector_13>:
    1d82:	0f 92       	push	r0
    1d84:	1f 92       	push	r1
    1d86:	ef 93       	push	r30
    1d88:	ff 93       	push	r31
    1d8a:	ff b7       	in	r31, 0x3f	; 63
    1d8c:	e0 91 84 00 	lds	r30, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1d90:	ff 93       	push	r31
    1d92:	e2 fd       	sbrc	r30, 2
    1d94:	04 c0       	rjmp	.+8      	; 0x1d9e <__vector_13+0x1c>
    1d96:	e1 fd       	sbrc	r30, 1
    1d98:	02 c0       	rjmp	.+4      	; 0x1d9e <__vector_13+0x1c>
    1d9a:	00 00       	nop
    1d9c:	00 c0       	rjmp	.+0      	; 0x1d9e <__vector_13+0x1c>
    1d9e:	e0 ff       	sbrs	r30, 0
    1da0:	00 c0       	rjmp	.+0      	; 0x1da2 <__vector_13+0x20>
    1da2:	e0 91 f5 06 	lds	r30, 0x06F5	; 0x8006f5 <sync_pulse>
    1da6:	ea 95       	dec	r30
    1da8:	e0 93 f5 06 	sts	0x06F5, r30	; 0x8006f5 <sync_pulse>
    1dac:	f0 91 f4 06 	lds	r31, 0x06F4	; 0x8006f4 <sync_phase>
    1db0:	f0 fd       	sbrc	r31, 0
    1db2:	51 c0       	rjmp	.+162    	; 0x1e56 <sync_hsync>
    1db4:	ec 30       	cpi	r30, 0x0C	; 12
    1db6:	98 f0       	brcs	.+38     	; 0x1dde <sync_eq>
    1db8:	f3 e0       	ldi	r31, 0x03	; 3
    1dba:	f0 93 89 00 	sts	0x0089, r31	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
    1dbe:	fd e8       	ldi	r31, 0x8D	; 141
    1dc0:	f0 93 88 00 	sts	0x0088, r31	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
    1dc4:	e0 fb       	bst	r30, 0
    1dc6:	28 98       	cbi	0x05, 0	; 5
    1dc8:	26 f4       	brtc	.+8      	; 0x1dd2 <sync_pre_eq_no_sound_update>
    1dca:	e1 e0       	ldi	r30, 0x01	; 1
    1dcc:	0e 94 83 10 	call	0x2106	; 0x2106 <update_sound>
    1dd0:	b2 c0       	rjmp	.+356    	; 0x1f36 <sync_end>

00001dd2 <sync_pre_eq_no_sound_update>:
    1dd2:	e5 e1       	ldi	r30, 0x15	; 21
    1dd4:	ea 95       	dec	r30
    1dd6:	f1 f7       	brne	.-4      	; 0x1dd4 <sync_pre_eq_no_sound_update+0x2>
    1dd8:	00 00       	nop
    1dda:	28 9a       	sbi	0x05, 0	; 5
    1ddc:	ac c0       	rjmp	.+344    	; 0x1f36 <sync_end>

00001dde <sync_eq>:
    1dde:	e6 30       	cpi	r30, 0x06	; 6
    1de0:	08 f1       	brcs	.+66     	; 0x1e24 <sync_post_eq>
    1de2:	00 c0       	rjmp	.+0      	; 0x1de4 <sync_eq+0x6>
    1de4:	00 c0       	rjmp	.+0      	; 0x1de6 <sync_eq+0x8>
    1de6:	28 98       	cbi	0x05, 0	; 5
    1de8:	e0 fb       	bst	r30, 0
    1dea:	e4 e0       	ldi	r30, 0x04	; 4
    1dec:	16 f4       	brtc	.+4      	; 0x1df2 <sync_eq_skip>
    1dee:	0e 94 83 10 	call	0x2106	; 0x2106 <update_sound>

00001df2 <sync_eq_skip>:
    1df2:	e4 e0       	ldi	r30, 0x04	; 4
    1df4:	e0 93 36 00 	sts	0x0036, r30	; 0x800036 <__TEXT_REGION_LENGTH__+0x7e0036>
    1df8:	e6 e0       	ldi	r30, 0x06	; 6
    1dfa:	e0 93 6f 00 	sts	0x006F, r30	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
    1dfe:	9b c0       	rjmp	.+310    	; 0x1f36 <sync_end>

00001e00 <__vector_14>:
    1e00:	ef 93       	push	r30
    1e02:	e0 91 84 00 	lds	r30, 0x0084	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
    1e06:	e2 fd       	sbrc	r30, 2
    1e08:	04 c0       	rjmp	.+8      	; 0x1e12 <__vector_14+0x12>
    1e0a:	e1 fd       	sbrc	r30, 1
    1e0c:	02 c0       	rjmp	.+4      	; 0x1e12 <__vector_14+0x12>
    1e0e:	00 00       	nop
    1e10:	00 c0       	rjmp	.+0      	; 0x1e12 <__vector_14+0x12>
    1e12:	e0 ff       	sbrs	r30, 0
    1e14:	00 c0       	rjmp	.+0      	; 0x1e16 <__vector_14+0x16>
    1e16:	e2 e0       	ldi	r30, 0x02	; 2
    1e18:	00 00       	nop
    1e1a:	28 9a       	sbi	0x05, 0	; 5
    1e1c:	e0 93 6f 00 	sts	0x006F, r30	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
    1e20:	ef 91       	pop	r30
    1e22:	18 95       	reti

00001e24 <sync_post_eq>:
    1e24:	00 c0       	rjmp	.+0      	; 0x1e26 <sync_post_eq+0x2>
    1e26:	e0 fb       	bst	r30, 0
    1e28:	28 98       	cbi	0x05, 0	; 5
    1e2a:	26 f4       	brtc	.+8      	; 0x1e34 <sync_post_eq_no_sound_update>
    1e2c:	e1 e0       	ldi	r30, 0x01	; 1
    1e2e:	0e 94 83 10 	call	0x2106	; 0x2106 <update_sound>
    1e32:	05 c0       	rjmp	.+10     	; 0x1e3e <sync_pre_eq_cont>

00001e34 <sync_post_eq_no_sound_update>:
    1e34:	e5 e1       	ldi	r30, 0x15	; 21
    1e36:	ea 95       	dec	r30
    1e38:	f1 f7       	brne	.-4      	; 0x1e36 <sync_post_eq_no_sound_update+0x2>
    1e3a:	00 00       	nop
    1e3c:	28 9a       	sbi	0x05, 0	; 5

00001e3e <sync_pre_eq_cont>:
    1e3e:	e0 91 f5 06 	lds	r30, 0x06F5	; 0x8006f5 <sync_pulse>
    1e42:	e0 30       	cpi	r30, 0x00	; 0
    1e44:	09 f0       	breq	.+2      	; 0x1e48 <sync_pre_eq_cont+0xa>
    1e46:	77 c0       	rjmp	.+238    	; 0x1f36 <sync_end>
    1e48:	ed ef       	ldi	r30, 0xFD	; 253
    1e4a:	e0 93 f5 06 	sts	0x06F5, r30	; 0x8006f5 <sync_pulse>
    1e4e:	e1 e0       	ldi	r30, 0x01	; 1
    1e50:	e0 93 f4 06 	sts	0x06F4, r30	; 0x8006f4 <sync_phase>
    1e54:	70 c0       	rjmp	.+224    	; 0x1f36 <sync_end>

00001e56 <sync_hsync>:
    1e56:	e7 e0       	ldi	r30, 0x07	; 7
    1e58:	e0 93 89 00 	sts	0x0089, r30	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
    1e5c:	eb e1       	ldi	r30, 0x1B	; 27
    1e5e:	e0 93 88 00 	sts	0x0088, r30	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
    1e62:	00 c0       	rjmp	.+0      	; 0x1e64 <sync_hsync+0xe>
    1e64:	28 98       	cbi	0x05, 0	; 5
    1e66:	e2 e0       	ldi	r30, 0x02	; 2
    1e68:	00 c0       	rjmp	.+0      	; 0x1e6a <sync_hsync+0x14>
    1e6a:	0e 94 83 10 	call	0x2106	; 0x2106 <update_sound>
    1e6e:	fd ef       	ldi	r31, 0xFD	; 253
    1e70:	00 90 fb 06 	lds	r0, 0x06FB	; 0x8006fb <first_render_line>
    1e74:	f0 19       	sub	r31, r0
    1e76:	e0 91 f5 06 	lds	r30, 0x06F5	; 0x8006f5 <sync_pulse>
    1e7a:	ef 17       	cp	r30, r31
    1e7c:	d8 f4       	brcc	.+54     	; 0x1eb4 <no_render>
    1e7e:	fd ef       	ldi	r31, 0xFD	; 253
    1e80:	00 90 fb 06 	lds	r0, 0x06FB	; 0x8006fb <first_render_line>
    1e84:	f0 19       	sub	r31, r0
    1e86:	00 90 fc 06 	lds	r0, 0x06FC	; 0x8006fc <render_lines_count>
    1e8a:	f0 19       	sub	r31, r0
    1e8c:	ef 17       	cp	r30, r31
    1e8e:	90 f0       	brcs	.+36     	; 0x1eb4 <no_render>
    1e90:	ed e1       	ldi	r30, 0x1D	; 29
    1e92:	ff 27       	eor	r31, r31

00001e94 <push_loop>:
    1e94:	00 80       	ld	r0, Z
    1e96:	0f 92       	push	r0
    1e98:	ea 95       	dec	r30
    1e9a:	e1 f7       	brne	.-8      	; 0x1e94 <push_loop>
    1e9c:	0f e1       	ldi	r16, 0x1F	; 31
    1e9e:	0a 95       	dec	r16
    1ea0:	f1 f7       	brne	.-4      	; 0x1e9e <push_loop+0xa>
    1ea2:	00 c0       	rjmp	.+0      	; 0x1ea4 <push_loop+0x10>
    1ea4:	0e 94 68 0e 	call	0x1cd0	; 0x1cd0 <sub_video_mode1>
    1ea8:	e1 e0       	ldi	r30, 0x01	; 1
    1eaa:	ff 27       	eor	r31, r31

00001eac <pop_loop>:
    1eac:	0f 90       	pop	r0
    1eae:	01 92       	st	Z+, r0
    1eb0:	ee 31       	cpi	r30, 0x1E	; 30
    1eb2:	e0 f3       	brcs	.-8      	; 0x1eac <pop_loop>

00001eb4 <no_render>:
    1eb4:	e0 91 f5 06 	lds	r30, 0x06F5	; 0x8006f5 <sync_pulse>
    1eb8:	e0 30       	cpi	r30, 0x00	; 0
    1eba:	09 f0       	breq	.+2      	; 0x1ebe <no_render+0xa>
    1ebc:	3c c0       	rjmp	.+120    	; 0x1f36 <sync_end>
    1ebe:	2f 93       	push	r18
    1ec0:	3f 93       	push	r19
    1ec2:	4f 93       	push	r20
    1ec4:	5f 93       	push	r21
    1ec6:	6f 93       	push	r22
    1ec8:	7f 93       	push	r23
    1eca:	8f 93       	push	r24
    1ecc:	9f 93       	push	r25
    1ece:	af 93       	push	r26
    1ed0:	bf 93       	push	r27
    1ed2:	78 94       	sei
    1ed4:	11 24       	eor	r1, r1
    1ed6:	ee 27       	eor	r30, r30
    1ed8:	e0 93 f4 06 	sts	0x06F4, r30	; 0x8006f4 <sync_phase>
    1edc:	e2 e1       	ldi	r30, 0x12	; 18
    1ede:	e0 93 f5 06 	sts	0x06F5, r30	; 0x8006f5 <sync_pulse>
    1ee2:	80 91 05 07 	lds	r24, 0x0705	; 0x800705 <vsync_counter>
    1ee6:	90 91 06 07 	lds	r25, 0x0706	; 0x800706 <vsync_counter+0x1>
    1eea:	01 96       	adiw	r24, 0x01	; 1
    1eec:	80 93 05 07 	sts	0x0705, r24	; 0x800705 <vsync_counter>
    1ef0:	90 93 06 07 	sts	0x0706, r25	; 0x800706 <vsync_counter+0x1>
    1ef4:	e0 91 f7 06 	lds	r30, 0x06F7	; 0x8006f7 <pre_vsync_user_callback>
    1ef8:	f0 91 f8 06 	lds	r31, 0x06F8	; 0x8006f8 <pre_vsync_user_callback+0x1>
    1efc:	e1 15       	cp	r30, r1
    1efe:	f1 05       	cpc	r31, r1
    1f00:	09 f0       	breq	.+2      	; 0x1f04 <no_render+0x50>
    1f02:	09 95       	icall
    1f04:	0e 94 44 11 	call	0x2288	; 0x2288 <ReadControllers>
    1f08:	0e 94 82 1a 	call	0x3504	; 0x3504 <VideoModeVsync>
    1f0c:	0e 94 ad 0f 	call	0x1f5a	; 0x1f5a <process_music>
    1f10:	11 24       	eor	r1, r1
    1f12:	e0 91 f9 06 	lds	r30, 0x06F9	; 0x8006f9 <post_vsync_user_callback>
    1f16:	f0 91 fa 06 	lds	r31, 0x06FA	; 0x8006fa <post_vsync_user_callback+0x1>
    1f1a:	e1 15       	cp	r30, r1
    1f1c:	f1 05       	cpc	r31, r1
    1f1e:	09 f0       	breq	.+2      	; 0x1f22 <no_render+0x6e>
    1f20:	09 95       	icall
    1f22:	bf 91       	pop	r27
    1f24:	af 91       	pop	r26
    1f26:	9f 91       	pop	r25
    1f28:	8f 91       	pop	r24
    1f2a:	7f 91       	pop	r23
    1f2c:	6f 91       	pop	r22
    1f2e:	5f 91       	pop	r21
    1f30:	4f 91       	pop	r20
    1f32:	3f 91       	pop	r19
    1f34:	2f 91       	pop	r18

00001f36 <sync_end>:
    1f36:	ef 91       	pop	r30
    1f38:	ef bf       	out	0x3f, r30	; 63
    1f3a:	ff 91       	pop	r31
    1f3c:	ef 91       	pop	r30
    1f3e:	1f 90       	pop	r1
    1f40:	0f 90       	pop	r0
    1f42:	18 95       	reti

00001f44 <hsync_pulse>:
    1f44:	28 98       	cbi	0x05, 0	; 5
    1f46:	e2 e0       	ldi	r30, 0x02	; 2
    1f48:	00 c0       	rjmp	.+0      	; 0x1f4a <hsync_pulse+0x6>
    1f4a:	0e 94 83 10 	call	0x2106	; 0x2106 <update_sound>
    1f4e:	e0 91 f5 06 	lds	r30, 0x06F5	; 0x8006f5 <sync_pulse>
    1f52:	ea 95       	dec	r30
    1f54:	e0 93 f5 06 	sts	0x06F5, r30	; 0x8006f5 <sync_pulse>
    1f58:	08 95       	ret

00001f5a <process_music>:
	andi r25,1
	lsl r24
	or r24,r25

	sts tr4_params,r24	
	ret
    1f5a:	e0 91 19 09 	lds	r30, 0x0919	; 0x800919 <sound_enabled>
    1f5e:	e0 fd       	sbrc	r30, 0
    1f60:	0e 94 39 12 	call	0x2472	; 0x2472 <ProcessMusic>
    1f64:	00 90 17 09 	lds	r0, 0x0917	; 0x800917 <mix_bank>
    1f68:	00 20       	and	r0, r0
    1f6a:	19 f4       	brne	.+6      	; 0x1f72 <set_hi_bank>
    1f6c:	a9 e0       	ldi	r26, 0x09	; 9
    1f6e:	b7 e0       	ldi	r27, 0x07	; 7
    1f70:	02 c0       	rjmp	.+4      	; 0x1f76 <end_set_bank>

00001f72 <set_hi_bank>:
    1f72:	af e0       	ldi	r26, 0x0F	; 15
    1f74:	b8 e0       	ldi	r27, 0x08	; 8

00001f76 <end_set_bank>:
    1f76:	21 e0       	ldi	r18, 0x01	; 1
    1f78:	02 26       	eor	r0, r18
    1f7a:	00 92 17 09 	sts	0x0917, r0	; 0x800917 <mix_bank>
    1f7e:	22 e0       	ldi	r18, 0x02	; 2
    1f80:	20 93 18 09 	sts	0x0918, r18	; 0x800918 <mix_block>
    1f84:	e0 91 19 09 	lds	r30, 0x0919	; 0x800919 <sound_enabled>
    1f88:	e0 ff       	sbrs	r30, 0
    1f8a:	08 95       	ret
    1f8c:	2f 92       	push	r2
    1f8e:	3f 92       	push	r3
    1f90:	4f 92       	push	r4
    1f92:	5f 92       	push	r5
    1f94:	6f 92       	push	r6
    1f96:	7f 92       	push	r7
    1f98:	8f 92       	push	r8
    1f9a:	9f 92       	push	r9
    1f9c:	af 92       	push	r10
    1f9e:	bf 92       	push	r11
    1fa0:	cf 92       	push	r12
    1fa2:	df 92       	push	r13
    1fa4:	ef 92       	push	r14
    1fa6:	ff 92       	push	r15
    1fa8:	0f 93       	push	r16
    1faa:	1f 93       	push	r17
    1fac:	cf 93       	push	r28
    1fae:	df 93       	push	r29
    1fb0:	50 91 2c 09 	lds	r21, 0x092C	; 0x80092c <tr4_vol>
    1fb4:	60 91 2e 09 	lds	r22, 0x092E	; 0x80092e <tr4_barrel_lo>
    1fb8:	70 91 2f 09 	lds	r23, 0x092F	; 0x80092f <tr4_barrel_hi>
    1fbc:	80 91 30 09 	lds	r24, 0x0930	; 0x800930 <tr4_divider>
    1fc0:	20 90 1b 09 	lds	r2, 0x091B	; 0x80091b <tr1_step_lo>
    1fc4:	30 90 1c 09 	lds	r3, 0x091C	; 0x80091c <tr1_step_hi>
    1fc8:	40 90 1e 09 	lds	r4, 0x091E	; 0x80091e <tr1_pos_lo>
    1fcc:	50 90 1f 09 	lds	r5, 0x091F	; 0x80091f <tr1_pos_hi>
    1fd0:	60 90 1d 09 	lds	r6, 0x091D	; 0x80091d <tr1_pos_frac>
    1fd4:	10 91 1a 09 	lds	r17, 0x091A	; 0x80091a <mixer>
    1fd8:	70 90 21 09 	lds	r7, 0x0921	; 0x800921 <tr2_step_lo>
    1fdc:	80 90 22 09 	lds	r8, 0x0922	; 0x800922 <tr2_step_hi>
    1fe0:	90 90 23 09 	lds	r9, 0x0923	; 0x800923 <tr2_pos_frac>
    1fe4:	a0 90 24 09 	lds	r10, 0x0924	; 0x800924 <tr2_pos_lo>
    1fe8:	b0 90 25 09 	lds	r11, 0x0925	; 0x800925 <tr2_pos_hi>
    1fec:	20 91 20 09 	lds	r18, 0x0920	; 0x800920 <tr2_vol>
    1ff0:	c0 90 27 09 	lds	r12, 0x0927	; 0x800927 <tr3_step_lo>
    1ff4:	d0 90 28 09 	lds	r13, 0x0928	; 0x800928 <tr3_step_hi>
    1ff8:	e0 90 2a 09 	lds	r14, 0x092A	; 0x80092a <tr3_pos_lo>
    1ffc:	f0 90 2b 09 	lds	r15, 0x092B	; 0x80092b <tr3_pos_hi>
    2000:	00 91 29 09 	lds	r16, 0x0929	; 0x800929 <tr3_pos_frac>
    2004:	30 91 26 09 	lds	r19, 0x0926	; 0x800926 <tr3_vol>
    2008:	9f ef       	ldi	r25, 0xFF	; 255

0000200a <mix_loop>:
    200a:	62 0c       	add	r6, r2
    200c:	43 1c       	adc	r4, r3
    200e:	f2 01       	movw	r30, r4
    2010:	44 91       	lpm	r20, Z
    2012:	41 03       	mulsu	r20, r17
    2014:	00 08       	sbc	r0, r0
    2016:	c1 2d       	mov	r28, r1
    2018:	d0 2d       	mov	r29, r0
    201a:	97 0c       	add	r9, r7
    201c:	a8 1c       	adc	r10, r8
    201e:	f5 01       	movw	r30, r10
    2020:	44 91       	lpm	r20, Z
    2022:	42 03       	mulsu	r20, r18
    2024:	00 08       	sbc	r0, r0
    2026:	c1 0d       	add	r28, r1
    2028:	d0 1d       	adc	r29, r0
    202a:	0c 0d       	add	r16, r12
    202c:	ed 1c       	adc	r14, r13
    202e:	f7 01       	movw	r30, r14
    2030:	44 91       	lpm	r20, Z
    2032:	43 03       	mulsu	r20, r19
    2034:	00 08       	sbc	r0, r0
    2036:	c1 0d       	add	r28, r1
    2038:	d0 1d       	adc	r29, r0
    203a:	8a 95       	dec	r24
    203c:	6a f4       	brpl	.+26     	; 0x2058 <no_shift>
    203e:	40 91 2d 09 	lds	r20, 0x092D	; 0x80092d <tr4_params>
    2042:	84 2f       	mov	r24, r20
    2044:	86 95       	lsr	r24
    2046:	06 2e       	mov	r0, r22
    2048:	06 94       	lsr	r0
    204a:	06 26       	eor	r0, r22
    204c:	00 fa       	bst	r0, 0
    204e:	76 95       	lsr	r23
    2050:	67 95       	ror	r22
    2052:	76 f9       	bld	r23, 6
    2054:	40 ff       	sbrs	r20, 0
    2056:	66 f9       	bld	r22, 6

00002058 <no_shift>:
    2058:	40 e8       	ldi	r20, 0x80	; 128
    205a:	60 fd       	sbrc	r22, 0
    205c:	4f e7       	ldi	r20, 0x7F	; 127
    205e:	45 03       	mulsu	r20, r21
    2060:	00 08       	sbc	r0, r0
    2062:	c1 0d       	add	r28, r1
    2064:	d0 1d       	adc	r29, r0
    2066:	00 24       	eor	r0, r0
    2068:	c0 38       	cpi	r28, 0x80	; 128
    206a:	d0 05       	cpc	r29, r0
    206c:	0c f0       	brlt	.+2      	; 0x2070 <no_shift+0x18>
    206e:	cf e7       	ldi	r28, 0x7F	; 127
    2070:	0a 94       	dec	r0
    2072:	c0 38       	cpi	r28, 0x80	; 128
    2074:	d0 05       	cpc	r29, r0
    2076:	0c f4       	brge	.+2      	; 0x207a <no_shift+0x22>
    2078:	c0 e8       	ldi	r28, 0x80	; 128
    207a:	c0 58       	subi	r28, 0x80	; 128
    207c:	cd 93       	st	X+, r28
    207e:	9a 95       	dec	r25
    2080:	09 f0       	breq	.+2      	; 0x2084 <no_shift+0x2c>
    2082:	c3 cf       	rjmp	.-122    	; 0x200a <mix_loop>
    2084:	40 91 18 09 	lds	r20, 0x0918	; 0x800918 <mix_block>
    2088:	4a 95       	dec	r20
    208a:	40 93 18 09 	sts	0x0918, r20	; 0x800918 <mix_block>
    208e:	97 e0       	ldi	r25, 0x07	; 7
    2090:	09 f0       	breq	.+2      	; 0x2094 <no_shift+0x3c>
    2092:	bb cf       	rjmp	.-138    	; 0x200a <mix_loop>
    2094:	60 92 1d 09 	sts	0x091D, r6	; 0x80091d <tr1_pos_frac>
    2098:	40 92 1e 09 	sts	0x091E, r4	; 0x80091e <tr1_pos_lo>
    209c:	90 92 23 09 	sts	0x0923, r9	; 0x800923 <tr2_pos_frac>
    20a0:	a0 92 24 09 	sts	0x0924, r10	; 0x800924 <tr2_pos_lo>
    20a4:	00 93 29 09 	sts	0x0929, r16	; 0x800929 <tr3_pos_frac>
    20a8:	e0 92 2a 09 	sts	0x092A, r14	; 0x80092a <tr3_pos_lo>
    20ac:	60 93 2e 09 	sts	0x092E, r22	; 0x80092e <tr4_barrel_lo>
    20b0:	70 93 2f 09 	sts	0x092F, r23	; 0x80092f <tr4_barrel_hi>
    20b4:	80 93 30 09 	sts	0x0930, r24	; 0x800930 <tr4_divider>
    20b8:	df 91       	pop	r29
    20ba:	cf 91       	pop	r28
    20bc:	1f 91       	pop	r17
    20be:	0f 91       	pop	r16
    20c0:	ff 90       	pop	r15
    20c2:	ef 90       	pop	r14
    20c4:	df 90       	pop	r13
    20c6:	cf 90       	pop	r12
    20c8:	bf 90       	pop	r11
    20ca:	af 90       	pop	r10
    20cc:	9f 90       	pop	r9
    20ce:	8f 90       	pop	r8
    20d0:	7f 90       	pop	r7
    20d2:	6f 90       	pop	r6
    20d4:	5f 90       	pop	r5
    20d6:	4f 90       	pop	r4
    20d8:	3f 90       	pop	r3
    20da:	2f 90       	pop	r2
    20dc:	08 95       	ret

000020de <update_sound_buffer_fast>:
    20de:	e0 91 15 09 	lds	r30, 0x0915	; 0x800915 <mix_pos>
    20e2:	f0 91 16 09 	lds	r31, 0x0916	; 0x800916 <mix_pos+0x1>
    20e6:	01 91       	ld	r16, Z+
    20e8:	00 00       	nop
    20ea:	00 93 b3 00 	sts	0x00B3, r16	; 0x8000b3 <__DATA_REGION_ORIGIN__+0x53>
    20ee:	09 e0       	ldi	r16, 0x09	; 9
    20f0:	e5 31       	cpi	r30, 0x15	; 21
    20f2:	f0 07       	cpc	r31, r16
    20f4:	09 e0       	ldi	r16, 0x09	; 9
    20f6:	17 e0       	ldi	r17, 0x07	; 7
    20f8:	08 f0       	brcs	.+2      	; 0x20fc <update_sound_buffer_fast+0x1e>
    20fa:	f8 01       	movw	r30, r16
    20fc:	e0 93 15 09 	sts	0x0915, r30	; 0x800915 <mix_pos>
    2100:	f0 93 16 09 	sts	0x0916, r31	; 0x800916 <mix_pos+0x1>
    2104:	08 95       	ret

00002106 <update_sound>:
    2106:	0f 93       	push	r16
    2108:	1f 93       	push	r17
    210a:	2f 93       	push	r18
    210c:	ef 93       	push	r30
    210e:	e0 91 15 09 	lds	r30, 0x0915	; 0x800915 <mix_pos>
    2112:	f0 91 16 09 	lds	r31, 0x0916	; 0x800916 <mix_pos+0x1>
    2116:	01 91       	ld	r16, Z+
    2118:	00 93 b3 00 	sts	0x00B3, r16	; 0x8000b3 <__DATA_REGION_ORIGIN__+0x53>
    211c:	09 e0       	ldi	r16, 0x09	; 9
    211e:	e5 31       	cpi	r30, 0x15	; 21
    2120:	f0 07       	cpc	r31, r16
    2122:	09 e0       	ldi	r16, 0x09	; 9
    2124:	17 e0       	ldi	r17, 0x07	; 7
    2126:	08 f0       	brcs	.+2      	; 0x212a <update_sound+0x24>
    2128:	f8 01       	movw	r30, r16
    212a:	e0 93 15 09 	sts	0x0915, r30	; 0x800915 <mix_pos>
    212e:	f0 93 16 09 	sts	0x0916, r31	; 0x800916 <mix_pos+0x1>
    2132:	e8 e0       	ldi	r30, 0x08	; 8
    2134:	ea 95       	dec	r30
    2136:	f1 f7       	brne	.-4      	; 0x2134 <update_sound+0x2e>
    2138:	ef 91       	pop	r30
    213a:	2f 91       	pop	r18
    213c:	1f 91       	pop	r17
    213e:	0f 91       	pop	r16
    2140:	e0 fd       	sbrc	r30, 0
    2142:	28 9a       	sbi	0x05, 0	; 5
    2144:	e0 ff       	sbrs	r30, 0
    2146:	01 c0       	rjmp	.+2      	; 0x214a <update_sound+0x44>
    2148:	08 95       	ret
    214a:	f4 e1       	ldi	r31, 0x14	; 20
    214c:	fa 95       	dec	r31
    214e:	f1 f7       	brne	.-4      	; 0x214c <update_sound+0x46>
    2150:	00 c0       	rjmp	.+0      	; 0x2152 <update_sound+0x4c>
    2152:	e1 fd       	sbrc	r30, 1
    2154:	28 9a       	sbi	0x05, 0	; 5
    2156:	e1 ff       	sbrs	r30, 1
    2158:	00 c0       	rjmp	.+0      	; 0x215a <update_sound+0x54>
    215a:	08 95       	ret

0000215c <ClearVram>:
    215c:	ea ee       	ldi	r30, 0xEA	; 234
    215e:	f2 e0       	ldi	r31, 0x02	; 2
    2160:	ac e1       	ldi	r26, 0x1C	; 28
    2162:	b1 e0       	ldi	r27, 0x01	; 1
    2164:	60 91 f0 06 	lds	r22, 0x06F0	; 0x8006f0 <font_table_lo>
    2168:	70 91 f1 06 	lds	r23, 0x06F1	; 0x8006f1 <font_table_hi>

0000216c <fill_vram_loop>:
    216c:	6d 93       	st	X+, r22
    216e:	7d 93       	st	X+, r23
    2170:	31 97       	sbiw	r30, 0x01	; 1
    2172:	e1 f7       	brne	.-8      	; 0x216c <fill_vram_loop>
    2174:	11 24       	eor	r1, r1
    2176:	08 95       	ret

00002178 <SetFont>:
    2178:	99 27       	eor	r25, r25
    217a:	55 27       	eor	r21, r21
    217c:	28 e2       	ldi	r18, 0x28	; 40
    217e:	22 0f       	add	r18, r18
    2180:	62 9f       	mul	r22, r18
    2182:	88 0f       	add	r24, r24
    2184:	08 0e       	add	r0, r24
    2186:	19 1e       	adc	r1, r25
    2188:	ac e1       	ldi	r26, 0x1C	; 28
    218a:	b1 e0       	ldi	r27, 0x01	; 1
    218c:	a0 0d       	add	r26, r0
    218e:	b1 1d       	adc	r27, r1
    2190:	60 91 f0 06 	lds	r22, 0x06F0	; 0x8006f0 <font_table_lo>
    2194:	70 91 f1 06 	lds	r23, 0x06F1	; 0x8006f1 <font_table_hi>
    2198:	28 e4       	ldi	r18, 0x48	; 72
    219a:	42 9f       	mul	r20, r18
    219c:	60 0d       	add	r22, r0
    219e:	71 1d       	adc	r23, r1
    21a0:	6d 93       	st	X+, r22
    21a2:	7c 93       	st	X, r23
    21a4:	11 24       	eor	r1, r1
    21a6:	08 95       	ret

000021a8 <SetFontTable>:
    21a8:	80 93 f0 06 	sts	0x06F0, r24	; 0x8006f0 <font_table_lo>
    21ac:	90 93 f1 06 	sts	0x06F1, r25	; 0x8006f1 <font_table_hi>
    21b0:	08 95       	ret

000021b2 <GetVsyncFlag>:
    21b2:	80 91 f6 06 	lds	r24, 0x06F6	; 0x8006f6 <sync_flags>
    21b6:	81 70       	andi	r24, 0x01	; 1
    21b8:	08 95       	ret

000021ba <ClearVsyncFlag>:
    21ba:	20 91 f6 06 	lds	r18, 0x06F6	; 0x8006f6 <sync_flags>
    21be:	2e 7f       	andi	r18, 0xFE	; 254
    21c0:	20 93 f6 06 	sts	0x06F6, r18	; 0x8006f6 <sync_flags>
    21c4:	08 95       	ret

000021c6 <ReadJoypad>:
    21c6:	88 23       	and	r24, r24
    21c8:	29 f4       	brne	.+10     	; 0x21d4 <rj_p2>
    21ca:	80 91 fd 06 	lds	r24, 0x06FD	; 0x8006fd <joypad1_status_lo>
    21ce:	90 91 fe 06 	lds	r25, 0x06FE	; 0x8006fe <joypad1_status_lo+0x1>
    21d2:	08 95       	ret

000021d4 <rj_p2>:
    21d4:	80 91 01 07 	lds	r24, 0x0701	; 0x800701 <joypad2_status_lo>
    21d8:	90 91 02 07 	lds	r25, 0x0702	; 0x800702 <joypad2_status_lo+0x1>
    21dc:	08 95       	ret

000021de <SoftReset>:
    21de:	e0 e6       	ldi	r30, 0x60	; 96
    21e0:	f0 e0       	ldi	r31, 0x00	; 0
    21e2:	80 81       	ld	r24, Z
    21e4:	83 fd       	sbrc	r24, 3
    21e6:	08 95       	ret
    21e8:	88 e1       	ldi	r24, 0x18	; 24
    21ea:	98 e0       	ldi	r25, 0x08	; 8
    21ec:	f8 94       	cli
    21ee:	80 83       	st	Z, r24
    21f0:	90 83       	st	Z, r25
    21f2:	78 94       	sei
    21f4:	ff cf       	rjmp	.-2      	; 0x21f4 <SoftReset+0x16>

000021f6 <WriteEeprom>:
;****************************

.section .text.WriteEeprom
WriteEeprom:
   ; Wait for completion of previous write
   sbic _SFR_IO_ADDR(EECR),EEPE
    21f6:	f9 99       	sbic	0x1f, 1	; 31
   rjmp WriteEeprom
    21f8:	fe cf       	rjmp	.-4      	; 0x21f6 <WriteEeprom>
   ; Set up address (r25:r24) in address register
   out _SFR_IO_ADDR(EEARH), r25
    21fa:	92 bd       	out	0x22, r25	; 34
   out _SFR_IO_ADDR(EEARL), r24
    21fc:	81 bd       	out	0x21, r24	; 33
   ; Write data (r22) to Data Register
   out _SFR_IO_ADDR(EEDR),r22
    21fe:	60 bd       	out	0x20, r22	; 32
   cli
    2200:	f8 94       	cli
   ; Write logical one to EEMPE
   sbi _SFR_IO_ADDR(EECR),EEMPE
    2202:	fa 9a       	sbi	0x1f, 2	; 31
   ; Start eeprom write by setting EEPE
   sbi _SFR_IO_ADDR(EECR),EEPE
    2204:	f9 9a       	sbi	0x1f, 1	; 31
   sei
    2206:	78 94       	sei
   ret
    2208:	08 95       	ret

0000220a <ReadEeprom>:
; r24 - value read
;****************************
.section .text.ReadEeprom
ReadEeprom:
   ; Wait for completion of previous write
   sbic _SFR_IO_ADDR(EECR),EEPE
    220a:	f9 99       	sbic	0x1f, 1	; 31
   rjmp ReadEeprom
    220c:	fe cf       	rjmp	.-4      	; 0x220a <ReadEeprom>
   ; Set up address (r25:r24) in address register
   out _SFR_IO_ADDR(EEARH), r25
    220e:	92 bd       	out	0x22, r25	; 34
   out _SFR_IO_ADDR(EEARL), r24
    2210:	81 bd       	out	0x21, r24	; 33
   ; Start eeprom read by writing EERE
   cli
    2212:	f8 94       	cli
   sbi _SFR_IO_ADDR(EECR),EERE
    2214:	f8 9a       	sbi	0x1f, 0	; 31
   ; Read data from Data Register
   in r24,_SFR_IO_ADDR(EEDR)
    2216:	80 b5       	in	r24, 0x20	; 32
   sei
    2218:	78 94       	sei
   ret
    221a:	08 95       	ret

0000221c <ReadButtons>:
    221c:	12 9a       	sbi	0x02, 2	; 2
    221e:	c8 95       	lpm
    2220:	c8 95       	lpm
    2222:	c8 95       	lpm
    2224:	c8 95       	lpm
    2226:	12 98       	cbi	0x02, 2	; 2
    2228:	40 e1       	ldi	r20, 0x10	; 16
    222a:	80 e0       	ldi	r24, 0x00	; 0
    222c:	90 e0       	ldi	r25, 0x00	; 0
    222e:	20 e0       	ldi	r18, 0x00	; 0
    2230:	30 e0       	ldi	r19, 0x00	; 0
    2232:	36 95       	lsr	r19
    2234:	27 95       	ror	r18
    2236:	96 95       	lsr	r25
    2238:	87 95       	ror	r24
    223a:	c8 95       	lpm
    223c:	c8 95       	lpm
    223e:	c8 95       	lpm
    2240:	c8 95       	lpm
    2242:	13 98       	cbi	0x02, 3	; 2
    2244:	00 9b       	sbis	0x00, 0	; 0
    2246:	30 68       	ori	r19, 0x80	; 128
    2248:	01 9b       	sbis	0x00, 1	; 0
    224a:	90 68       	ori	r25, 0x80	; 128
    224c:	13 9a       	sbi	0x02, 3	; 2
    224e:	c8 95       	lpm
    2250:	c8 95       	lpm
    2252:	c8 95       	lpm
    2254:	c8 95       	lpm
    2256:	41 50       	subi	r20, 0x01	; 1
    2258:	61 f7       	brne	.-40     	; 0x2232 <ReadButtons+0x16>
    225a:	30 93 fe 06 	sts	0x06FE, r19	; 0x8006fe <joypad1_status_lo+0x1>
    225e:	20 93 fd 06 	sts	0x06FD, r18	; 0x8006fd <joypad1_status_lo>
    2262:	90 93 02 07 	sts	0x0702, r25	; 0x800702 <joypad2_status_lo+0x1>
    2266:	80 93 01 07 	sts	0x0701, r24	; 0x800701 <joypad2_status_lo>
    226a:	80 91 fd 06 	lds	r24, 0x06FD	; 0x8006fd <joypad1_status_lo>
    226e:	90 91 fe 06 	lds	r25, 0x06FE	; 0x8006fe <joypad1_status_lo+0x1>
    2272:	0f 97       	sbiw	r24, 0x0f	; 15
    2274:	31 f0       	breq	.+12     	; 0x2282 <ReadButtons+0x66>
    2276:	80 91 01 07 	lds	r24, 0x0701	; 0x800701 <joypad2_status_lo>
    227a:	90 91 02 07 	lds	r25, 0x0702	; 0x800702 <joypad2_status_lo+0x1>
    227e:	0f 97       	sbiw	r24, 0x0f	; 15
    2280:	11 f4       	brne	.+4      	; 0x2286 <ReadButtons+0x6a>
    2282:	0c 94 ef 10 	jmp	0x21de	; 0x21de <SoftReset>
    2286:	08 95       	ret

00002288 <ReadControllers>:
    2288:	10 92 56 09 	sts	0x0956, r1	; 0x800956 <joypadsConnectionStatus>
    228c:	00 99       	sbic	0x00, 0	; 0
    228e:	03 c0       	rjmp	.+6      	; 0x2296 <ReadControllers+0xe>
    2290:	81 e0       	ldi	r24, 0x01	; 1
    2292:	80 93 56 09 	sts	0x0956, r24	; 0x800956 <joypadsConnectionStatus>
    2296:	01 99       	sbic	0x00, 1	; 0
    2298:	05 c0       	rjmp	.+10     	; 0x22a4 <ReadControllers+0x1c>
    229a:	80 91 56 09 	lds	r24, 0x0956	; 0x800956 <joypadsConnectionStatus>
    229e:	82 60       	ori	r24, 0x02	; 2
    22a0:	80 93 56 09 	sts	0x0956, r24	; 0x800956 <joypadsConnectionStatus>
    22a4:	0c 94 0e 11 	jmp	0x221c	; 0x221c <ReadButtons>

000022a8 <FormatEeprom>:
    22a8:	cf 93       	push	r28
    22aa:	df 93       	push	r29
    22ac:	c0 e0       	ldi	r28, 0x00	; 0
    22ae:	d0 e0       	ldi	r29, 0x00	; 0
    22b0:	fe 01       	movw	r30, r28
    22b2:	e0 59       	subi	r30, 0x90	; 144
    22b4:	ff 4f       	sbci	r31, 0xFF	; 255
    22b6:	64 91       	lpm	r22, Z
    22b8:	ce 01       	movw	r24, r28
    22ba:	0e 94 fb 10 	call	0x21f6	; 0x21f6 <WriteEeprom>
    22be:	21 96       	adiw	r28, 0x01	; 1
    22c0:	c0 32       	cpi	r28, 0x20	; 32
    22c2:	d1 05       	cpc	r29, r1
    22c4:	a9 f7       	brne	.-22     	; 0x22b0 <FormatEeprom+0x8>
    22c6:	c0 e2       	ldi	r28, 0x20	; 32
    22c8:	d0 e0       	ldi	r29, 0x00	; 0
    22ca:	6f ef       	ldi	r22, 0xFF	; 255
    22cc:	ce 01       	movw	r24, r28
    22ce:	0e 94 fb 10 	call	0x21f6	; 0x21f6 <WriteEeprom>
    22d2:	6f ef       	ldi	r22, 0xFF	; 255
    22d4:	ce 01       	movw	r24, r28
    22d6:	01 96       	adiw	r24, 0x01	; 1
    22d8:	0e 94 fb 10 	call	0x21f6	; 0x21f6 <WriteEeprom>
    22dc:	a0 96       	adiw	r28, 0x20	; 32
    22de:	c1 15       	cp	r28, r1
    22e0:	88 e0       	ldi	r24, 0x08	; 8
    22e2:	d8 07       	cpc	r29, r24
    22e4:	91 f7       	brne	.-28     	; 0x22ca <FormatEeprom+0x22>
    22e6:	df 91       	pop	r29
    22e8:	cf 91       	pop	r28
    22ea:	08 95       	ret

000022ec <isEepromFormatted>:
	
//returns true if the EEPROM has been setup to work with the kernel.
bool isEepromFormatted(){
    22ec:	cf 93       	push	r28
	unsigned id;
	id=ReadEeprom(0)+(ReadEeprom(1)<<8);
    22ee:	80 e0       	ldi	r24, 0x00	; 0
    22f0:	90 e0       	ldi	r25, 0x00	; 0
    22f2:	0e 94 05 11 	call	0x220a	; 0x220a <ReadEeprom>
    22f6:	c8 2f       	mov	r28, r24
    22f8:	81 e0       	ldi	r24, 0x01	; 1
    22fa:	90 e0       	ldi	r25, 0x00	; 0
    22fc:	0e 94 05 11 	call	0x220a	; 0x220a <ReadEeprom>
	return (id==EEPROM_SIGNATURE);
    2300:	28 2f       	mov	r18, r24
    2302:	30 e0       	ldi	r19, 0x00	; 0
    2304:	32 2f       	mov	r19, r18
    2306:	22 27       	eor	r18, r18
    2308:	2c 0f       	add	r18, r28
    230a:	31 1d       	adc	r19, r1
    230c:	81 e0       	ldi	r24, 0x01	; 1
    230e:	2a 35       	cpi	r18, 0x5A	; 90
    2310:	35 45       	sbci	r19, 0x55	; 85
    2312:	09 f0       	breq	.+2      	; 0x2316 <isEepromFormatted+0x2a>
    2314:	80 e0       	ldi	r24, 0x00	; 0
}
    2316:	cf 91       	pop	r28
    2318:	08 95       	ret

0000231a <PatchCommand00>:
	Track* track=&tracks[channel];
	track->flags=TRACK_FLAGS_PRIORITY; //priority=1;
	track->patchCommandStreamPos = NULL;
	TriggerCommon(track,patch,volume,80);
	track->flags|=TRACK_FLAGS_PLAYING;
}
    231a:	fc 01       	movw	r30, r24
    231c:	67 87       	std	Z+15, r22	; 0x0f
    231e:	08 95       	ret

00002320 <PatchCommand01>:
    2320:	ea e1       	ldi	r30, 0x1A	; 26
    2322:	f9 e0       	ldi	r31, 0x09	; 9
    2324:	81 e0       	ldi	r24, 0x01	; 1
    2326:	91 e0       	ldi	r25, 0x01	; 1
    2328:	95 8b       	std	Z+21, r25	; 0x15
    232a:	84 8b       	std	Z+20, r24	; 0x14
    232c:	63 8b       	std	Z+19, r22	; 0x13
    232e:	08 95       	ret

00002330 <PatchCommand02>:
    2330:	fc 01       	movw	r30, r24
    2332:	82 81       	ldd	r24, Z+2	; 0x02
    2334:	0c 94 dd 14 	jmp	0x29ba	; 0x29ba <SetMixerWave>

00002338 <PatchCommand03>:
    2338:	fc 01       	movw	r30, r24
    233a:	91 81       	ldd	r25, Z+1	; 0x01
    233c:	69 0f       	add	r22, r25
    233e:	61 83       	std	Z+1, r22	; 0x01
    2340:	82 81       	ldd	r24, Z+2	; 0x02
    2342:	0c 94 c6 14 	jmp	0x298c	; 0x298c <SetMixerNote>

00002346 <PatchCommand04>:
    2346:	fc 01       	movw	r30, r24
    2348:	91 81       	ldd	r25, Z+1	; 0x01
    234a:	96 1b       	sub	r25, r22
    234c:	69 2f       	mov	r22, r25
    234e:	91 83       	std	Z+1, r25	; 0x01
    2350:	82 81       	ldd	r24, Z+2	; 0x02
    2352:	0c 94 c6 14 	jmp	0x298c	; 0x298c <SetMixerNote>

00002356 <PatchCommand05>:
    2356:	fc 01       	movw	r30, r24
    2358:	90 81       	ld	r25, Z
    235a:	9f 75       	andi	r25, 0x5F	; 95
    235c:	90 83       	st	Z, r25
    235e:	08 95       	ret

00002360 <PatchCommand06>:
    2360:	fc 01       	movw	r30, r24
    2362:	90 81       	ld	r25, Z
    2364:	90 64       	ori	r25, 0x40	; 64
    2366:	90 83       	st	Z, r25
    2368:	08 95       	ret

0000236a <PatchCommand07>:
    236a:	fc 01       	movw	r30, r24
    236c:	66 87       	std	Z+14, r22	; 0x0e
    236e:	08 95       	ret

00002370 <PatchCommand08>:
    2370:	1f 93       	push	r17
    2372:	cf 93       	push	r28
    2374:	df 93       	push	r29
    2376:	ec 01       	movw	r28, r24
    2378:	16 2f       	mov	r17, r22
    237a:	8a 81       	ldd	r24, Y+2	; 0x02
    237c:	0e 94 c6 14 	call	0x298c	; 0x298c <SetMixerNote>
    2380:	19 83       	std	Y+1, r17	; 0x01
    2382:	88 81       	ld	r24, Y
    2384:	87 7f       	andi	r24, 0xF7	; 247
    2386:	88 83       	st	Y, r24
    2388:	df 91       	pop	r29
    238a:	cf 91       	pop	r28
    238c:	1f 91       	pop	r17
    238e:	08 95       	ret

00002390 <PatchCommand09>:
    2390:	fc 01       	movw	r30, r24
    2392:	62 87       	std	Z+10, r22	; 0x0a
    2394:	08 95       	ret

00002396 <PatchCommand10>:
    2396:	fc 01       	movw	r30, r24
    2398:	63 87       	std	Z+11, r22	; 0x0b
    239a:	08 95       	ret

0000239c <PatchCommand11>:
    239c:	cf 93       	push	r28
    239e:	df 93       	push	r29
    23a0:	ec 01       	movw	r28, r24
    23a2:	26 2f       	mov	r18, r22
    23a4:	89 81       	ldd	r24, Y+1	; 0x01
    23a6:	90 e0       	ldi	r25, 0x00	; 0
    23a8:	fc 01       	movw	r30, r24
    23aa:	ee 0f       	add	r30, r30
    23ac:	ff 1f       	adc	r31, r31
    23ae:	ec 50       	subi	r30, 0x0C	; 12
    23b0:	f6 4d       	sbci	r31, 0xD6	; 214
    23b2:	45 91       	lpm	r20, Z+
    23b4:	54 91       	lpm	r21, Z
    23b6:	fc 01       	movw	r30, r24
    23b8:	e6 0f       	add	r30, r22
    23ba:	f1 1d       	adc	r31, r1
    23bc:	67 fd       	sbrc	r22, 7
    23be:	fa 95       	dec	r31
    23c0:	ee 0f       	add	r30, r30
    23c2:	ff 1f       	adc	r31, r31
    23c4:	ec 50       	subi	r30, 0x0C	; 12
    23c6:	f6 4d       	sbci	r31, 0xD6	; 214
    23c8:	85 91       	lpm	r24, Z+
    23ca:	94 91       	lpm	r25, Z
    23cc:	84 1b       	sub	r24, r20
    23ce:	95 0b       	sbc	r25, r21
    23d0:	68 85       	ldd	r22, Y+8	; 0x08
    23d2:	70 e0       	ldi	r23, 0x00	; 0
    23d4:	0e 94 af 1f 	call	0x3f5e	; 0x3f5e <__divmodhi4>
    23d8:	61 15       	cp	r22, r1
    23da:	71 05       	cpc	r23, r1
    23dc:	11 f4       	brne	.+4      	; 0x23e2 <PatchCommand11+0x46>
    23de:	61 e0       	ldi	r22, 0x01	; 1
    23e0:	70 e0       	ldi	r23, 0x00	; 0
    23e2:	ea 81       	ldd	r30, Y+2	; 0x02
    23e4:	86 e0       	ldi	r24, 0x06	; 6
    23e6:	e8 9f       	mul	r30, r24
    23e8:	f0 01       	movw	r30, r0
    23ea:	11 24       	eor	r1, r1
    23ec:	e6 5e       	subi	r30, 0xE6	; 230
    23ee:	f6 4f       	sbci	r31, 0xF6	; 246
    23f0:	81 81       	ldd	r24, Z+1	; 0x01
    23f2:	92 81       	ldd	r25, Z+2	; 0x02
    23f4:	86 0f       	add	r24, r22
    23f6:	97 1f       	adc	r25, r23
    23f8:	92 83       	std	Z+2, r25	; 0x02
    23fa:	81 83       	std	Z+1, r24	; 0x01
    23fc:	7e 83       	std	Y+6, r23	; 0x06
    23fe:	6d 83       	std	Y+5, r22	; 0x05
    2400:	88 81       	ld	r24, Y
    2402:	88 60       	ori	r24, 0x08	; 8
    2404:	88 83       	st	Y, r24
    2406:	89 81       	ldd	r24, Y+1	; 0x01
    2408:	28 0f       	add	r18, r24
    240a:	2f 83       	std	Y+7, r18	; 0x07
    240c:	df 91       	pop	r29
    240e:	cf 91       	pop	r28
    2410:	08 95       	ret

00002412 <PatchCommand12>:
    2412:	fc 01       	movw	r30, r24
    2414:	60 87       	std	Z+8, r22	; 0x08
    2416:	08 95       	ret

00002418 <PatchCommand13>:
    2418:	fc 01       	movw	r30, r24
    241a:	64 83       	std	Z+4, r22	; 0x04
    241c:	08 95       	ret

0000241e <PatchCommand14>:
    241e:	dc 01       	movw	r26, r24
    2420:	14 96       	adiw	r26, 0x04	; 4
    2422:	8c 91       	ld	r24, X
    2424:	14 97       	sbiw	r26, 0x04	; 4
    2426:	88 23       	and	r24, r24
    2428:	19 f1       	breq	.+70     	; 0x2470 <PatchCommand14+0x52>
    242a:	55 96       	adiw	r26, 0x15	; 21
    242c:	2d 91       	ld	r18, X+
    242e:	3c 91       	ld	r19, X
    2430:	56 97       	sbiw	r26, 0x16	; 22
    2432:	66 23       	and	r22, r22
    2434:	79 f0       	breq	.+30     	; 0x2454 <PatchCommand14+0x36>
    2436:	06 2e       	mov	r0, r22
    2438:	00 0c       	add	r0, r0
    243a:	77 0b       	sbc	r23, r23
    243c:	6f 5f       	subi	r22, 0xFF	; 255
    243e:	7f 4f       	sbci	r23, 0xFF	; 255
    2440:	ab 01       	movw	r20, r22
    2442:	44 0f       	add	r20, r20
    2444:	55 1f       	adc	r21, r21
    2446:	64 0f       	add	r22, r20
    2448:	75 1f       	adc	r23, r21
    244a:	26 1b       	sub	r18, r22
    244c:	37 0b       	sbc	r19, r23
    244e:	09 c0       	rjmp	.+18     	; 0x2462 <PatchCommand14+0x44>
    2450:	ef 3f       	cpi	r30, 0xFF	; 255
    2452:	39 f0       	breq	.+14     	; 0x2462 <PatchCommand14+0x44>
    2454:	23 50       	subi	r18, 0x03	; 3
    2456:	31 09       	sbc	r19, r1
    2458:	f9 01       	movw	r30, r18
    245a:	32 97       	sbiw	r30, 0x02	; 2
    245c:	e4 91       	lpm	r30, Z
    245e:	ed 30       	cpi	r30, 0x0D	; 13
    2460:	b9 f7       	brne	.-18     	; 0x2450 <PatchCommand14+0x32>
    2462:	56 96       	adiw	r26, 0x16	; 22
    2464:	3c 93       	st	X, r19
    2466:	2e 93       	st	-X, r18
    2468:	55 97       	sbiw	r26, 0x15	; 21
    246a:	81 50       	subi	r24, 0x01	; 1
    246c:	14 96       	adiw	r26, 0x04	; 4
    246e:	8c 93       	st	X, r24
    2470:	08 95       	ret

00002472 <ProcessMusic>:
    2472:	ef 92       	push	r14
    2474:	ff 92       	push	r15
    2476:	0f 93       	push	r16
    2478:	1f 93       	push	r17
    247a:	cf 93       	push	r28
    247c:	df 93       	push	r29
    247e:	c9 e5       	ldi	r28, 0x59	; 89
    2480:	d9 e0       	ldi	r29, 0x09	; 9
    2482:	0a e1       	ldi	r16, 0x1A	; 26
    2484:	19 e0       	ldi	r17, 0x09	; 9
    2486:	98 01       	movw	r18, r16
    2488:	de 01       	movw	r26, r28
    248a:	1f 96       	adiw	r26, 0x0f	; 15
    248c:	8c 91       	ld	r24, X
    248e:	1f 97       	sbiw	r26, 0x0f	; 15
    2490:	88 23       	and	r24, r24
    2492:	a9 f0       	breq	.+42     	; 0x24be <ProcessMusic+0x4c>
    2494:	1e 96       	adiw	r26, 0x0e	; 14
    2496:	4c 91       	ld	r20, X
    2498:	1e 97       	sbiw	r26, 0x0e	; 14
    249a:	08 2e       	mov	r0, r24
    249c:	00 0c       	add	r0, r0
    249e:	99 0b       	sbc	r25, r25
    24a0:	84 0f       	add	r24, r20
    24a2:	91 1d       	adc	r25, r1
    24a4:	8f 3f       	cpi	r24, 0xFF	; 255
    24a6:	91 05       	cpc	r25, r1
    24a8:	19 f0       	breq	.+6      	; 0x24b0 <ProcessMusic+0x3e>
    24aa:	14 f0       	brlt	.+4      	; 0x24b0 <ProcessMusic+0x3e>
    24ac:	8f ef       	ldi	r24, 0xFF	; 255
    24ae:	90 e0       	ldi	r25, 0x00	; 0
    24b0:	97 ff       	sbrs	r25, 7
    24b2:	02 c0       	rjmp	.+4      	; 0x24b8 <ProcessMusic+0x46>
    24b4:	80 e0       	ldi	r24, 0x00	; 0
    24b6:	90 e0       	ldi	r25, 0x00	; 0
    24b8:	1e 96       	adiw	r26, 0x0e	; 14
    24ba:	8c 93       	st	X, r24
    24bc:	1e 97       	sbiw	r26, 0x0e	; 14
    24be:	6c 91       	ld	r22, X
    24c0:	63 ff       	sbrs	r22, 3
    24c2:	26 c0       	rjmp	.+76     	; 0x2510 <ProcessMusic+0x9e>
    24c4:	15 96       	adiw	r26, 0x05	; 5
    24c6:	4d 91       	ld	r20, X+
    24c8:	5c 91       	ld	r21, X
    24ca:	16 97       	sbiw	r26, 0x06	; 6
    24cc:	f9 01       	movw	r30, r18
    24ce:	81 81       	ldd	r24, Z+1	; 0x01
    24d0:	92 81       	ldd	r25, Z+2	; 0x02
    24d2:	84 0f       	add	r24, r20
    24d4:	95 1f       	adc	r25, r21
    24d6:	92 83       	std	Z+2, r25	; 0x02
    24d8:	81 83       	std	Z+1, r24	; 0x01
    24da:	17 96       	adiw	r26, 0x07	; 7
    24dc:	ec 91       	ld	r30, X
    24de:	17 97       	sbiw	r26, 0x07	; 7
    24e0:	f0 e0       	ldi	r31, 0x00	; 0
    24e2:	ee 0f       	add	r30, r30
    24e4:	ff 1f       	adc	r31, r31
    24e6:	ec 50       	subi	r30, 0x0C	; 12
    24e8:	f6 4d       	sbci	r31, 0xD6	; 214
    24ea:	e5 90       	lpm	r14, Z+
    24ec:	f4 90       	lpm	r15, Z
    24ee:	14 16       	cp	r1, r20
    24f0:	15 06       	cpc	r1, r21
    24f2:	24 f4       	brge	.+8      	; 0x24fc <ProcessMusic+0x8a>
    24f4:	8e 15       	cp	r24, r14
    24f6:	9f 05       	cpc	r25, r15
    24f8:	30 f4       	brcc	.+12     	; 0x2506 <ProcessMusic+0x94>
    24fa:	0a c0       	rjmp	.+20     	; 0x2510 <ProcessMusic+0x9e>
    24fc:	45 2b       	or	r20, r21
    24fe:	41 f0       	breq	.+16     	; 0x2510 <ProcessMusic+0x9e>
    2500:	e8 16       	cp	r14, r24
    2502:	f9 06       	cpc	r15, r25
    2504:	28 f0       	brcs	.+10     	; 0x2510 <ProcessMusic+0x9e>
    2506:	f9 01       	movw	r30, r18
    2508:	f2 82       	std	Z+2, r15	; 0x02
    250a:	e1 82       	std	Z+1, r14	; 0x01
    250c:	67 7f       	andi	r22, 0xF7	; 247
    250e:	6c 93       	st	X, r22
    2510:	57 96       	adiw	r26, 0x17	; 23
    2512:	2a 5f       	subi	r18, 0xFA	; 250
    2514:	3f 4f       	sbci	r19, 0xFF	; 255
    2516:	f9 e0       	ldi	r31, 0x09	; 9
    2518:	a5 3b       	cpi	r26, 0xB5	; 181
    251a:	bf 07       	cpc	r27, r31
    251c:	09 f0       	breq	.+2      	; 0x2520 <ProcessMusic+0xae>
    251e:	b5 cf       	rjmp	.-150    	; 0x248a <ProcessMusic+0x18>
    2520:	80 91 08 07 	lds	r24, 0x0708	; 0x800708 <playSong>
    2524:	88 23       	and	r24, r24
    2526:	09 f4       	brne	.+2      	; 0x252a <ProcessMusic+0xb8>
    2528:	cc c0       	rjmp	.+408    	; 0x26c2 <ProcessMusic+0x250>
    252a:	87 e1       	ldi	r24, 0x17	; 23
    252c:	f8 2e       	mov	r15, r24
    252e:	80 91 b5 09 	lds	r24, 0x09B5	; 0x8009b5 <currDeltaTime>
    2532:	90 91 b6 09 	lds	r25, 0x09B6	; 0x8009b6 <currDeltaTime+0x1>
    2536:	20 91 bb 09 	lds	r18, 0x09BB	; 0x8009bb <nextDeltaTime>
    253a:	30 91 bc 09 	lds	r19, 0x09BC	; 0x8009bc <nextDeltaTime+0x1>
    253e:	82 17       	cp	r24, r18
    2540:	93 07       	cpc	r25, r19
    2542:	09 f0       	breq	.+2      	; 0x2546 <ProcessMusic+0xd4>
    2544:	b9 c0       	rjmp	.+370    	; 0x26b8 <ProcessMusic+0x246>
    2546:	20 91 be 09 	lds	r18, 0x09BE	; 0x8009be <songPos>
    254a:	30 91 bf 09 	lds	r19, 0x09BF	; 0x8009bf <songPos+0x1>
    254e:	b9 01       	movw	r22, r18
    2550:	6f 5f       	subi	r22, 0xFF	; 255
    2552:	7f 4f       	sbci	r23, 0xFF	; 255
    2554:	70 93 bf 09 	sts	0x09BF, r23	; 0x8009bf <songPos+0x1>
    2558:	60 93 be 09 	sts	0x09BE, r22	; 0x8009be <songPos>
    255c:	f9 01       	movw	r30, r18
    255e:	44 91       	lpm	r20, Z
    2560:	4f 3f       	cpi	r20, 0xFF	; 255
    2562:	79 f5       	brne	.+94     	; 0x25c2 <ProcessMusic+0x150>
    2564:	a9 01       	movw	r20, r18
    2566:	4e 5f       	subi	r20, 0xFE	; 254
    2568:	5f 4f       	sbci	r21, 0xFF	; 255
    256a:	50 93 bf 09 	sts	0x09BF, r21	; 0x8009bf <songPos+0x1>
    256e:	40 93 be 09 	sts	0x09BE, r20	; 0x8009be <songPos>
    2572:	fb 01       	movw	r30, r22
    2574:	64 91       	lpm	r22, Z
    2576:	6f 32       	cpi	r22, 0x2F	; 47
    2578:	19 f4       	brne	.+6      	; 0x2580 <ProcessMusic+0x10e>
    257a:	10 92 08 07 	sts	0x0708, r1	; 0x800708 <playSong>
    257e:	9c c0       	rjmp	.+312    	; 0x26b8 <ProcessMusic+0x246>
    2580:	66 30       	cpi	r22, 0x06	; 6
    2582:	09 f0       	breq	.+2      	; 0x2586 <ProcessMusic+0x114>
    2584:	8c c0       	rjmp	.+280    	; 0x269e <ProcessMusic+0x22c>
    2586:	fa 01       	movw	r30, r20
    2588:	44 91       	lpm	r20, Z
    258a:	c9 01       	movw	r24, r18
    258c:	04 96       	adiw	r24, 0x04	; 4
    258e:	90 93 bf 09 	sts	0x09BF, r25	; 0x8009bf <songPos+0x1>
    2592:	80 93 be 09 	sts	0x09BE, r24	; 0x8009be <songPos>
    2596:	f9 01       	movw	r30, r18
    2598:	33 96       	adiw	r30, 0x03	; 3
    259a:	e4 91       	lpm	r30, Z
    259c:	e3 35       	cpi	r30, 0x53	; 83
    259e:	29 f4       	brne	.+10     	; 0x25aa <ProcessMusic+0x138>
    25a0:	90 93 c1 09 	sts	0x09C1, r25	; 0x8009c1 <loopStart+0x1>
    25a4:	80 93 c0 09 	sts	0x09C0, r24	; 0x8009c0 <loopStart>
    25a8:	7a c0       	rjmp	.+244    	; 0x269e <ProcessMusic+0x22c>
    25aa:	e5 34       	cpi	r30, 0x45	; 69
    25ac:	09 f0       	breq	.+2      	; 0x25b0 <ProcessMusic+0x13e>
    25ae:	77 c0       	rjmp	.+238    	; 0x269e <ProcessMusic+0x22c>
    25b0:	80 91 c0 09 	lds	r24, 0x09C0	; 0x8009c0 <loopStart>
    25b4:	90 91 c1 09 	lds	r25, 0x09C1	; 0x8009c1 <loopStart+0x1>
    25b8:	90 93 bf 09 	sts	0x09BF, r25	; 0x8009bf <songPos+0x1>
    25bc:	80 93 be 09 	sts	0x09BE, r24	; 0x8009be <songPos>
    25c0:	6e c0       	rjmp	.+220    	; 0x269e <ProcessMusic+0x22c>
    25c2:	47 fd       	sbrc	r20, 7
    25c4:	40 93 b9 09 	sts	0x09B9, r20	; 0x8009b9 <lastStatus>
    25c8:	90 91 b9 09 	lds	r25, 0x09B9	; 0x8009b9 <lastStatus>
    25cc:	89 2f       	mov	r24, r25
    25ce:	8f 70       	andi	r24, 0x0F	; 15
    25d0:	47 ff       	sbrs	r20, 7
    25d2:	08 c0       	rjmp	.+16     	; 0x25e4 <ProcessMusic+0x172>
    25d4:	2e 5f       	subi	r18, 0xFE	; 254
    25d6:	3f 4f       	sbci	r19, 0xFF	; 255
    25d8:	30 93 bf 09 	sts	0x09BF, r19	; 0x8009bf <songPos+0x1>
    25dc:	20 93 be 09 	sts	0x09BE, r18	; 0x8009be <songPos>
    25e0:	fb 01       	movw	r30, r22
    25e2:	44 91       	lpm	r20, Z
    25e4:	90 7f       	andi	r25, 0xF0	; 240
    25e6:	90 3b       	cpi	r25, 0xB0	; 176
    25e8:	e1 f0       	breq	.+56     	; 0x2622 <ProcessMusic+0x1b0>
    25ea:	90 3c       	cpi	r25, 0xC0	; 192
    25ec:	09 f4       	brne	.+2      	; 0x25f0 <ProcessMusic+0x17e>
    25ee:	51 c0       	rjmp	.+162    	; 0x2692 <ProcessMusic+0x220>
    25f0:	90 39       	cpi	r25, 0x90	; 144
    25f2:	09 f0       	breq	.+2      	; 0x25f6 <ProcessMusic+0x184>
    25f4:	54 c0       	rjmp	.+168    	; 0x269e <ProcessMusic+0x22c>
    25f6:	e0 91 be 09 	lds	r30, 0x09BE	; 0x8009be <songPos>
    25fa:	f0 91 bf 09 	lds	r31, 0x09BF	; 0x8009bf <songPos+0x1>
    25fe:	9f 01       	movw	r18, r30
    2600:	2f 5f       	subi	r18, 0xFF	; 255
    2602:	3f 4f       	sbci	r19, 0xFF	; 255
    2604:	30 93 bf 09 	sts	0x09BF, r19	; 0x8009bf <songPos+0x1>
    2608:	20 93 be 09 	sts	0x09BE, r18	; 0x8009be <songPos>
    260c:	24 91       	lpm	r18, Z
    260e:	22 0f       	add	r18, r18
    2610:	f8 9e       	mul	r15, r24
    2612:	f0 01       	movw	r30, r0
    2614:	11 24       	eor	r1, r1
    2616:	e7 5a       	subi	r30, 0xA7	; 167
    2618:	f6 4f       	sbci	r31, 0xF6	; 246
    261a:	60 89       	ldd	r22, Z+16	; 0x10
    261c:	0e 94 86 14 	call	0x290c	; 0x290c <TriggerNote>
    2620:	3e c0       	rjmp	.+124    	; 0x269e <ProcessMusic+0x22c>
    2622:	e0 91 be 09 	lds	r30, 0x09BE	; 0x8009be <songPos>
    2626:	f0 91 bf 09 	lds	r31, 0x09BF	; 0x8009bf <songPos+0x1>
    262a:	9f 01       	movw	r18, r30
    262c:	2f 5f       	subi	r18, 0xFF	; 255
    262e:	3f 4f       	sbci	r19, 0xFF	; 255
    2630:	30 93 bf 09 	sts	0x09BF, r19	; 0x8009bf <songPos+0x1>
    2634:	20 93 be 09 	sts	0x09BE, r18	; 0x8009be <songPos>
    2638:	e4 91       	lpm	r30, Z
    263a:	47 30       	cpi	r20, 0x07	; 7
    263c:	49 f4       	brne	.+18     	; 0x2650 <ProcessMusic+0x1de>
    263e:	f8 9e       	mul	r15, r24
    2640:	d0 01       	movw	r26, r0
    2642:	11 24       	eor	r1, r1
    2644:	a7 5a       	subi	r26, 0xA7	; 167
    2646:	b6 4f       	sbci	r27, 0xF6	; 246
    2648:	ee 0f       	add	r30, r30
    264a:	1c 96       	adiw	r26, 0x0c	; 12
    264c:	ec 93       	st	X, r30
    264e:	27 c0       	rjmp	.+78     	; 0x269e <ProcessMusic+0x22c>
    2650:	4b 30       	cpi	r20, 0x0B	; 11
    2652:	49 f4       	brne	.+18     	; 0x2666 <ProcessMusic+0x1f4>
    2654:	f8 9e       	mul	r15, r24
    2656:	d0 01       	movw	r26, r0
    2658:	11 24       	eor	r1, r1
    265a:	a7 5a       	subi	r26, 0xA7	; 167
    265c:	b6 4f       	sbci	r27, 0xF6	; 246
    265e:	ee 0f       	add	r30, r30
    2660:	13 96       	adiw	r26, 0x03	; 3
    2662:	ec 93       	st	X, r30
    2664:	1c c0       	rjmp	.+56     	; 0x269e <ProcessMusic+0x22c>
    2666:	4c 35       	cpi	r20, 0x5C	; 92
    2668:	49 f4       	brne	.+18     	; 0x267c <ProcessMusic+0x20a>
    266a:	f8 9e       	mul	r15, r24
    266c:	d0 01       	movw	r26, r0
    266e:	11 24       	eor	r1, r1
    2670:	a7 5a       	subi	r26, 0xA7	; 167
    2672:	b6 4f       	sbci	r27, 0xF6	; 246
    2674:	ee 0f       	add	r30, r30
    2676:	1a 96       	adiw	r26, 0x0a	; 10
    2678:	ec 93       	st	X, r30
    267a:	11 c0       	rjmp	.+34     	; 0x269e <ProcessMusic+0x22c>
    267c:	44 36       	cpi	r20, 0x64	; 100
    267e:	79 f4       	brne	.+30     	; 0x269e <ProcessMusic+0x22c>
    2680:	f8 9e       	mul	r15, r24
    2682:	d0 01       	movw	r26, r0
    2684:	11 24       	eor	r1, r1
    2686:	a7 5a       	subi	r26, 0xA7	; 167
    2688:	b6 4f       	sbci	r27, 0xF6	; 246
    268a:	ee 0f       	add	r30, r30
    268c:	1b 96       	adiw	r26, 0x0b	; 11
    268e:	ec 93       	st	X, r30
    2690:	06 c0       	rjmp	.+12     	; 0x269e <ProcessMusic+0x22c>
    2692:	f8 9e       	mul	r15, r24
    2694:	f0 01       	movw	r30, r0
    2696:	11 24       	eor	r1, r1
    2698:	e7 5a       	subi	r30, 0xA7	; 167
    269a:	f6 4f       	sbci	r31, 0xF6	; 246
    269c:	40 8b       	std	Z+16, r20	; 0x10
    269e:	8e eb       	ldi	r24, 0xBE	; 190
    26a0:	99 e0       	ldi	r25, 0x09	; 9
    26a2:	0e 94 12 14 	call	0x2824	; 0x2824 <ReadVarLen>
    26a6:	90 93 bc 09 	sts	0x09BC, r25	; 0x8009bc <nextDeltaTime+0x1>
    26aa:	80 93 bb 09 	sts	0x09BB, r24	; 0x8009bb <nextDeltaTime>
    26ae:	10 92 b6 09 	sts	0x09B6, r1	; 0x8009b6 <currDeltaTime+0x1>
    26b2:	10 92 b5 09 	sts	0x09B5, r1	; 0x8009b5 <currDeltaTime>
    26b6:	3b cf       	rjmp	.-394    	; 0x252e <ProcessMusic+0xbc>
    26b8:	01 96       	adiw	r24, 0x01	; 1
    26ba:	90 93 b6 09 	sts	0x09B6, r25	; 0x8009b6 <currDeltaTime+0x1>
    26be:	80 93 b5 09 	sts	0x09B5, r24	; 0x8009b5 <currDeltaTime>
    26c2:	ee 24       	eor	r14, r14
    26c4:	ea 94       	dec	r14
    26c6:	f1 2c       	mov	r15, r1
    26c8:	88 81       	ld	r24, Y
    26ca:	85 ff       	sbrs	r24, 5
    26cc:	37 c0       	rjmp	.+110    	; 0x273c <ProcessMusic+0x2ca>
    26ce:	2d 89       	ldd	r18, Y+21	; 0x15
    26d0:	3e 89       	ldd	r19, Y+22	; 0x16
    26d2:	23 2b       	or	r18, r19
    26d4:	09 f4       	brne	.+2      	; 0x26d8 <ProcessMusic+0x266>
    26d6:	32 c0       	rjmp	.+100    	; 0x273c <ProcessMusic+0x2ca>
    26d8:	86 fd       	sbrc	r24, 6
    26da:	30 c0       	rjmp	.+96     	; 0x273c <ProcessMusic+0x2ca>
    26dc:	9b 89       	ldd	r25, Y+19	; 0x13
    26de:	8a 89       	ldd	r24, Y+18	; 0x12
    26e0:	98 13       	cpse	r25, r24
    26e2:	2a c0       	rjmp	.+84     	; 0x2738 <ProcessMusic+0x2c6>
    26e4:	ed 89       	ldd	r30, Y+21	; 0x15
    26e6:	fe 89       	ldd	r31, Y+22	; 0x16
    26e8:	bf 01       	movw	r22, r30
    26ea:	6f 5f       	subi	r22, 0xFF	; 255
    26ec:	7f 4f       	sbci	r23, 0xFF	; 255
    26ee:	7e 8b       	std	Y+22, r23	; 0x16
    26f0:	6d 8b       	std	Y+21, r22	; 0x15
    26f2:	84 91       	lpm	r24, Z
    26f4:	8f 3f       	cpi	r24, 0xFF	; 255
    26f6:	31 f4       	brne	.+12     	; 0x2704 <ProcessMusic+0x292>
    26f8:	88 81       	ld	r24, Y
    26fa:	8f 77       	andi	r24, 0x7F	; 127
    26fc:	88 83       	st	Y, r24
    26fe:	1e 8a       	std	Y+22, r1	; 0x16
    2700:	1d 8a       	std	Y+21, r1	; 0x15
    2702:	1a c0       	rjmp	.+52     	; 0x2738 <ProcessMusic+0x2c6>
    2704:	32 96       	adiw	r30, 0x02	; 2
    2706:	fe 8b       	std	Y+22, r31	; 0x16
    2708:	ed 8b       	std	Y+21, r30	; 0x15
    270a:	fb 01       	movw	r30, r22
    270c:	64 91       	lpm	r22, Z
    270e:	e8 2f       	mov	r30, r24
    2710:	f0 e0       	ldi	r31, 0x00	; 0
    2712:	ee 0f       	add	r30, r30
    2714:	ff 1f       	adc	r31, r31
    2716:	ee 53       	subi	r30, 0x3E	; 62
    2718:	ff 4f       	sbci	r31, 0xFF	; 255
    271a:	25 91       	lpm	r18, Z+
    271c:	34 91       	lpm	r19, Z
    271e:	ce 01       	movw	r24, r28
    2720:	f9 01       	movw	r30, r18
    2722:	09 95       	icall
    2724:	ed 89       	ldd	r30, Y+21	; 0x15
    2726:	fe 89       	ldd	r31, Y+22	; 0x16
    2728:	cf 01       	movw	r24, r30
    272a:	01 96       	adiw	r24, 0x01	; 1
    272c:	9e 8b       	std	Y+22, r25	; 0x16
    272e:	8d 8b       	std	Y+21, r24	; 0x15
    2730:	e4 91       	lpm	r30, Z
    2732:	ea 8b       	std	Y+18, r30	; 0x12
    2734:	1b 8a       	std	Y+19, r1	; 0x13
    2736:	d2 cf       	rjmp	.-92     	; 0x26dc <ProcessMusic+0x26a>
    2738:	9f 5f       	subi	r25, 0xFF	; 255
    273a:	9b 8b       	std	Y+19, r25	; 0x13
    273c:	98 81       	ld	r25, Y
    273e:	95 ff       	sbrs	r25, 5
    2740:	5e c0       	rjmp	.+188    	; 0x27fe <ProcessMusic+0x38c>
    2742:	8c 89       	ldd	r24, Y+20	; 0x14
    2744:	8f 3f       	cpi	r24, 0xFF	; 255
    2746:	11 f0       	breq	.+4      	; 0x274c <ProcessMusic+0x2da>
    2748:	8f 5f       	subi	r24, 0xFF	; 255
    274a:	8c 8b       	std	Y+20, r24	; 0x14
    274c:	97 fd       	sbrc	r25, 7
    274e:	02 c0       	rjmp	.+4      	; 0x2754 <ProcessMusic+0x2e2>
    2750:	9c 85       	ldd	r25, Y+12	; 0x0c
    2752:	01 c0       	rjmp	.+2      	; 0x2756 <ProcessMusic+0x2e4>
    2754:	9f ef       	ldi	r25, 0xFF	; 255
    2756:	8d 85       	ldd	r24, Y+13	; 0x0d
    2758:	49 85       	ldd	r20, Y+9	; 0x09
    275a:	88 23       	and	r24, r24
    275c:	09 f4       	brne	.+2      	; 0x2760 <ProcessMusic+0x2ee>
    275e:	49 c0       	rjmp	.+146    	; 0x27f2 <ProcessMusic+0x380>
    2760:	6e 85       	ldd	r22, Y+14	; 0x0e
    2762:	66 23       	and	r22, r22
    2764:	09 f4       	brne	.+2      	; 0x2768 <ProcessMusic+0x2f6>
    2766:	45 c0       	rjmp	.+138    	; 0x27f2 <ProcessMusic+0x380>
    2768:	99 23       	and	r25, r25
    276a:	09 f4       	brne	.+2      	; 0x276e <ProcessMusic+0x2fc>
    276c:	42 c0       	rjmp	.+132    	; 0x27f2 <ProcessMusic+0x380>
    276e:	50 91 ba 09 	lds	r21, 0x09BA	; 0x8009ba <masterVolume>
    2772:	55 23       	and	r21, r21
    2774:	09 f4       	brne	.+2      	; 0x2778 <ProcessMusic+0x306>
    2776:	3d c0       	rjmp	.+122    	; 0x27f2 <ProcessMusic+0x380>
    2778:	89 9f       	mul	r24, r25
    277a:	c0 01       	movw	r24, r0
    277c:	11 24       	eor	r1, r1
    277e:	93 95       	inc	r25
    2780:	89 2f       	mov	r24, r25
    2782:	99 27       	eor	r25, r25
    2784:	68 9f       	mul	r22, r24
    2786:	90 01       	movw	r18, r0
    2788:	69 9f       	mul	r22, r25
    278a:	30 0d       	add	r19, r0
    278c:	11 24       	eor	r1, r1
    278e:	33 95       	inc	r19
    2790:	23 2f       	mov	r18, r19
    2792:	33 27       	eor	r19, r19
    2794:	6b 81       	ldd	r22, Y+3	; 0x03
    2796:	62 9f       	mul	r22, r18
    2798:	c0 01       	movw	r24, r0
    279a:	63 9f       	mul	r22, r19
    279c:	90 0d       	add	r25, r0
    279e:	11 24       	eor	r1, r1
    27a0:	93 95       	inc	r25
    27a2:	89 2f       	mov	r24, r25
    27a4:	99 27       	eor	r25, r25
    27a6:	58 9f       	mul	r21, r24
    27a8:	90 01       	movw	r18, r0
    27aa:	59 9f       	mul	r21, r25
    27ac:	30 0d       	add	r19, r0
    27ae:	11 24       	eor	r1, r1
    27b0:	33 95       	inc	r19
    27b2:	23 2f       	mov	r18, r19
    27b4:	33 27       	eor	r19, r19
    27b6:	8a 85       	ldd	r24, Y+10	; 0x0a
    27b8:	88 23       	and	r24, r24
    27ba:	e9 f0       	breq	.+58     	; 0x27f6 <ProcessMusic+0x384>
    27bc:	e4 2f       	mov	r30, r20
    27be:	f0 e0       	ldi	r31, 0x00	; 0
    27c0:	e0 50       	subi	r30, 0x00	; 0
    27c2:	f5 4d       	sbci	r31, 0xD5	; 213
    27c4:	e4 91       	lpm	r30, Z
    27c6:	e0 58       	subi	r30, 0x80	; 128
    27c8:	8e 9f       	mul	r24, r30
    27ca:	f0 01       	movw	r30, r0
    27cc:	11 24       	eor	r1, r1
    27ce:	f3 95       	inc	r31
    27d0:	ef 2f       	mov	r30, r31
    27d2:	ff 27       	eor	r31, r31
    27d4:	b7 01       	movw	r22, r14
    27d6:	6e 1b       	sub	r22, r30
    27d8:	7f 0b       	sbc	r23, r31
    27da:	62 9f       	mul	r22, r18
    27dc:	c0 01       	movw	r24, r0
    27de:	63 9f       	mul	r22, r19
    27e0:	90 0d       	add	r25, r0
    27e2:	72 9f       	mul	r23, r18
    27e4:	90 0d       	add	r25, r0
    27e6:	11 24       	eor	r1, r1
    27e8:	9c 01       	movw	r18, r24
    27ea:	33 95       	inc	r19
    27ec:	23 2f       	mov	r18, r19
    27ee:	33 27       	eor	r19, r19
    27f0:	02 c0       	rjmp	.+4      	; 0x27f6 <ProcessMusic+0x384>
    27f2:	20 e0       	ldi	r18, 0x00	; 0
    27f4:	30 e0       	ldi	r19, 0x00	; 0
    27f6:	8b 85       	ldd	r24, Y+11	; 0x0b
    27f8:	48 0f       	add	r20, r24
    27fa:	49 87       	std	Y+9, r20	; 0x09
    27fc:	02 c0       	rjmp	.+4      	; 0x2802 <ProcessMusic+0x390>
    27fe:	20 e0       	ldi	r18, 0x00	; 0
    2800:	30 e0       	ldi	r19, 0x00	; 0
    2802:	f8 01       	movw	r30, r16
    2804:	20 83       	st	Z, r18
    2806:	67 96       	adiw	r28, 0x17	; 23
    2808:	0a 5f       	subi	r16, 0xFA	; 250
    280a:	1f 4f       	sbci	r17, 0xFF	; 255
    280c:	f9 e0       	ldi	r31, 0x09	; 9
    280e:	c5 3b       	cpi	r28, 0xB5	; 181
    2810:	df 07       	cpc	r29, r31
    2812:	09 f0       	breq	.+2      	; 0x2816 <ProcessMusic+0x3a4>
    2814:	59 cf       	rjmp	.-334    	; 0x26c8 <ProcessMusic+0x256>
    2816:	df 91       	pop	r29
    2818:	cf 91       	pop	r28
    281a:	1f 91       	pop	r17
    281c:	0f 91       	pop	r16
    281e:	ff 90       	pop	r15
    2820:	ef 90       	pop	r14
    2822:	08 95       	ret

00002824 <ReadVarLen>:
    2824:	dc 01       	movw	r26, r24
    2826:	ed 91       	ld	r30, X+
    2828:	fc 91       	ld	r31, X
    282a:	11 97       	sbiw	r26, 0x01	; 1
    282c:	9f 01       	movw	r18, r30
    282e:	2f 5f       	subi	r18, 0xFF	; 255
    2830:	3f 4f       	sbci	r19, 0xFF	; 255
    2832:	11 96       	adiw	r26, 0x01	; 1
    2834:	3c 93       	st	X, r19
    2836:	2e 93       	st	-X, r18
    2838:	e4 91       	lpm	r30, Z
    283a:	e7 fd       	sbrc	r30, 7
    283c:	03 c0       	rjmp	.+6      	; 0x2844 <ReadVarLen+0x20>
    283e:	8e 2f       	mov	r24, r30
    2840:	90 e0       	ldi	r25, 0x00	; 0
    2842:	08 95       	ret
    2844:	ef 77       	andi	r30, 0x7F	; 127
    2846:	8e 2f       	mov	r24, r30
    2848:	90 e0       	ldi	r25, 0x00	; 0
    284a:	96 95       	lsr	r25
    284c:	98 2f       	mov	r25, r24
    284e:	88 27       	eor	r24, r24
    2850:	97 95       	ror	r25
    2852:	87 95       	ror	r24
    2854:	2f 5f       	subi	r18, 0xFF	; 255
    2856:	3f 4f       	sbci	r19, 0xFF	; 255
    2858:	f9 01       	movw	r30, r18
    285a:	31 97       	sbiw	r30, 0x01	; 1
    285c:	e4 91       	lpm	r30, Z
    285e:	4e 2f       	mov	r20, r30
    2860:	4f 77       	andi	r20, 0x7F	; 127
    2862:	84 0f       	add	r24, r20
    2864:	91 1d       	adc	r25, r1
    2866:	e7 fd       	sbrc	r30, 7
    2868:	f0 cf       	rjmp	.-32     	; 0x284a <ReadVarLen+0x26>
    286a:	2d 93       	st	X+, r18
    286c:	3c 93       	st	X, r19
    286e:	08 95       	ret

00002870 <TriggerCommon>:
    2870:	0f 93       	push	r16
    2872:	1f 93       	push	r17
    2874:	cf 93       	push	r28
    2876:	df 93       	push	r29
    2878:	ec 01       	movw	r28, r24
    287a:	16 2f       	mov	r17, r22
    287c:	88 81       	ld	r24, Y
    287e:	08 2f       	mov	r16, r24
    2880:	00 78       	andi	r16, 0x80	; 128
    2882:	1f 86       	std	Y+15, r1	; 0x0f
    2884:	9f ef       	ldi	r25, 0xFF	; 255
    2886:	9e 87       	std	Y+14, r25	; 0x0e
    2888:	4d 87       	std	Y+13, r20	; 0x0d
    288a:	1c 8a       	std	Y+20, r1	; 0x14
    288c:	87 7b       	andi	r24, 0xB7	; 183
    288e:	88 83       	st	Y, r24
    2890:	1a 86       	std	Y+10, r1	; 0x0a
    2892:	19 86       	std	Y+9, r1	; 0x09
    2894:	29 83       	std	Y+1, r18	; 0x01
    2896:	1c 82       	std	Y+4, r1	; 0x04
    2898:	9b 83       	std	Y+3, r25	; 0x03
    289a:	8a 81       	ldd	r24, Y+2	; 0x02
    289c:	83 30       	cpi	r24, 0x03	; 3
    289e:	69 f4       	brne	.+26     	; 0x28ba <TriggerCommon+0x4a>
    28a0:	01 11       	cpse	r16, r1
    28a2:	01 c0       	rjmp	.+2      	; 0x28a6 <TriggerCommon+0x36>
    28a4:	12 2f       	mov	r17, r18
    28a6:	81 e0       	ldi	r24, 0x01	; 1
    28a8:	91 e0       	ldi	r25, 0x01	; 1
    28aa:	90 93 2f 09 	sts	0x092F, r25	; 0x80092f <tr4_barrel_hi>
    28ae:	80 93 2e 09 	sts	0x092E, r24	; 0x80092e <tr4_barrel_lo>
    28b2:	81 e0       	ldi	r24, 0x01	; 1
    28b4:	80 93 2d 09 	sts	0x092D, r24	; 0x80092d <tr4_params>
    28b8:	07 c0       	rjmp	.+14     	; 0x28c8 <TriggerCommon+0x58>
    28ba:	62 2f       	mov	r22, r18
    28bc:	0e 94 c6 14 	call	0x298c	; 0x298c <SetMixerNote>
    28c0:	60 e0       	ldi	r22, 0x00	; 0
    28c2:	8a 81       	ldd	r24, Y+2	; 0x02
    28c4:	0e 94 dd 14 	call	0x29ba	; 0x29ba <SetMixerWave>
    28c8:	00 23       	and	r16, r16
    28ca:	11 f0       	breq	.+4      	; 0x28d0 <TriggerCommon+0x60>
    28cc:	19 8b       	std	Y+17, r17	; 0x11
    28ce:	01 c0       	rjmp	.+2      	; 0x28d2 <TriggerCommon+0x62>
    28d0:	18 8b       	std	Y+16, r17	; 0x10
    28d2:	e0 91 b7 09 	lds	r30, 0x09B7	; 0x8009b7 <patchPointers>
    28d6:	f0 91 b8 09 	lds	r31, 0x09B8	; 0x8009b8 <patchPointers+0x1>
    28da:	89 e0       	ldi	r24, 0x09	; 9
    28dc:	18 9f       	mul	r17, r24
    28de:	e0 0d       	add	r30, r0
    28e0:	f1 1d       	adc	r31, r1
    28e2:	11 24       	eor	r1, r1
    28e4:	33 96       	adiw	r30, 0x03	; 3
    28e6:	85 91       	lpm	r24, Z+
    28e8:	94 91       	lpm	r25, Z
    28ea:	00 97       	sbiw	r24, 0x00	; 0
    28ec:	19 f4       	brne	.+6      	; 0x28f4 <TriggerCommon+0x84>
    28ee:	1e 8a       	std	Y+22, r1	; 0x16
    28f0:	1d 8a       	std	Y+21, r1	; 0x15
    28f2:	07 c0       	rjmp	.+14     	; 0x2902 <TriggerCommon+0x92>
    28f4:	1b 8a       	std	Y+19, r1	; 0x13
    28f6:	fc 01       	movw	r30, r24
    28f8:	24 91       	lpm	r18, Z
    28fa:	2a 8b       	std	Y+18, r18	; 0x12
    28fc:	01 96       	adiw	r24, 0x01	; 1
    28fe:	9e 8b       	std	Y+22, r25	; 0x16
    2900:	8d 8b       	std	Y+21, r24	; 0x15
    2902:	df 91       	pop	r29
    2904:	cf 91       	pop	r28
    2906:	1f 91       	pop	r17
    2908:	0f 91       	pop	r16
    290a:	08 95       	ret

0000290c <TriggerNote>:


void TriggerNote(unsigned char channel,unsigned char patch,unsigned char note,unsigned char volume){
    290c:	cf 93       	push	r28
    290e:	df 93       	push	r29
	Track* track=&tracks[channel];

	//allow only other music notes 
	if((track->flags&TRACK_FLAGS_PLAYING)==0 || (track->flags&TRACK_FLAGS_PRIORITY)==0){
    2910:	a8 2f       	mov	r26, r24
    2912:	b0 e0       	ldi	r27, 0x00	; 0
    2914:	97 e1       	ldi	r25, 0x17	; 23
    2916:	89 9f       	mul	r24, r25
    2918:	f0 01       	movw	r30, r0
    291a:	11 24       	eor	r1, r1
    291c:	e7 5a       	subi	r30, 0xA7	; 167
    291e:	f6 4f       	sbci	r31, 0xF6	; 246
    2920:	80 81       	ld	r24, Z
    2922:	85 ff       	sbrs	r24, 5
    2924:	02 c0       	rjmp	.+4      	; 0x292a <TriggerNote+0x1e>
    2926:	87 fd       	sbrc	r24, 7
    2928:	2e c0       	rjmp	.+92     	; 0x2986 <TriggerNote+0x7a>
			
		if(volume==0){ //note-off received
    292a:	21 11       	cpse	r18, r1
    292c:	18 c0       	rjmp	.+48     	; 0x295e <TriggerNote+0x52>

			
			//cut note if there's no envelope & no note hold
			if(track->envelopeStep==0 && !(track->flags&TRACK_FLAGS_HOLD_ENV)){
    292e:	97 e1       	ldi	r25, 0x17	; 23
    2930:	9a 9f       	mul	r25, r26
    2932:	f0 01       	movw	r30, r0
    2934:	9b 9f       	mul	r25, r27
    2936:	f0 0d       	add	r31, r0
    2938:	11 24       	eor	r1, r1
    293a:	e7 5a       	subi	r30, 0xA7	; 167
    293c:	f6 4f       	sbci	r31, 0xF6	; 246
    293e:	97 85       	ldd	r25, Z+15	; 0x0f
    2940:	91 11       	cpse	r25, r1
    2942:	02 c0       	rjmp	.+4      	; 0x2948 <TriggerNote+0x3c>
    2944:	86 ff       	sbrs	r24, 6
				track->noteVol=0;
    2946:	15 86       	std	Z+13, r1	; 0x0d
			}

			track->flags&=(~TRACK_FLAGS_HOLD_ENV);//patchEnvelopeHold=false;
    2948:	97 e1       	ldi	r25, 0x17	; 23
    294a:	9a 9f       	mul	r25, r26
    294c:	f0 01       	movw	r30, r0
    294e:	9b 9f       	mul	r25, r27
    2950:	f0 0d       	add	r31, r0
    2952:	11 24       	eor	r1, r1
    2954:	e7 5a       	subi	r30, 0xA7	; 167
    2956:	f6 4f       	sbci	r31, 0xF6	; 246
    2958:	8f 7b       	andi	r24, 0xBF	; 191
    295a:	80 83       	st	Z, r24
    295c:	14 c0       	rjmp	.+40     	; 0x2986 <TriggerNote+0x7a>
    295e:	82 2f       	mov	r24, r18
    2960:	24 2f       	mov	r18, r20
		}else{
		
			track->flags=0;//&=(~TRACK_FLAGS_PRIORITY);// priority=0;
    2962:	97 e1       	ldi	r25, 0x17	; 23
    2964:	9a 9f       	mul	r25, r26
    2966:	e0 01       	movw	r28, r0
    2968:	9b 9f       	mul	r25, r27
    296a:	d0 0d       	add	r29, r0
    296c:	11 24       	eor	r1, r1
    296e:	c7 5a       	subi	r28, 0xA7	; 167
    2970:	d6 4f       	sbci	r29, 0xF6	; 246
    2972:	18 82       	st	Y, r1
			track->patchCommandStreamPos = NULL;
    2974:	1e 8a       	std	Y+22, r1	; 0x16
    2976:	1d 8a       	std	Y+21, r1	; 0x15
			TriggerCommon(track,patch,volume,note);
    2978:	48 2f       	mov	r20, r24
    297a:	ce 01       	movw	r24, r28
    297c:	0e 94 38 14 	call	0x2870	; 0x2870 <TriggerCommon>
			track->flags|=TRACK_FLAGS_PLAYING;
    2980:	88 81       	ld	r24, Y
    2982:	80 62       	ori	r24, 0x20	; 32
    2984:	88 83       	st	Y, r24
		}

	}
}
    2986:	df 91       	pop	r29
    2988:	cf 91       	pop	r28
    298a:	08 95       	ret

0000298c <SetMixerNote>:
    298c:	99 27       	eor	r25, r25
    298e:	77 27       	eor	r23, r23
    2990:	83 30       	cpi	r24, 0x03	; 3
    2992:	08 f0       	brcs	.+2      	; 0x2996 <set_note_waves>
    2994:	08 95       	ret

00002996 <set_note_waves>:
    2996:	e4 ef       	ldi	r30, 0xF4	; 244
    2998:	f9 e2       	ldi	r31, 0x29	; 41
    299a:	66 0f       	add	r22, r22
    299c:	77 1f       	adc	r23, r23
    299e:	e6 0f       	add	r30, r22
    29a0:	f7 1f       	adc	r31, r23
    29a2:	a5 91       	lpm	r26, Z+
    29a4:	b4 91       	lpm	r27, Z
    29a6:	ea e1       	ldi	r30, 0x1A	; 26
    29a8:	f9 e0       	ldi	r31, 0x09	; 9
    29aa:	26 e0       	ldi	r18, 0x06	; 6
    29ac:	28 9f       	mul	r18, r24
    29ae:	e0 0d       	add	r30, r0
    29b0:	f1 1d       	adc	r31, r1
    29b2:	a1 83       	std	Z+1, r26	; 0x01
    29b4:	b2 83       	std	Z+2, r27	; 0x02
    29b6:	11 24       	eor	r1, r1
    29b8:	08 95       	ret

000029ba <SetMixerWave>:
;         Noise channel: 0xfe=7 bit lfsr, 0xff=15 bit lfsr
;                 
;***********************
.section .text.SetMixerWave
SetMixerWave:
	clr r25
    29ba:	99 27       	eor	r25, r25
	clr r23
    29bc:	77 27       	eor	r23, r23

#if (INCLUDE_DEFAULT_WAVES != 0)
	ldi ZL,lo8(mixerStruct)
    29be:	ea e1       	ldi	r30, 0x1A	; 26
	ldi ZH,hi8(mixerStruct)
    29c0:	f9 e0       	ldi	r31, 0x09	; 9
	ldi r18,CHANNEL_STRUCT_SIZE
    29c2:	26 e0       	ldi	r18, 0x06	; 6
	mul r18,r24	
    29c4:	28 9f       	mul	r18, r24
	add ZL,r0
    29c6:	e0 0d       	add	r30, r0
	adc ZH,r1
    29c8:	f1 1d       	adc	r31, r1
#endif

#if MIXER_CHAN4_TYPE == 0
	cpi r22,0xfe	;7bit lfsr
    29ca:	6e 3f       	cpi	r22, 0xFE	; 254
	brne smw1
    29cc:	31 f4       	brne	.+12     	; 0x29da <smw1>
	lds r22,tr4_params
    29ce:	60 91 2d 09 	lds	r22, 0x092D	; 0x80092d <tr4_params>
	andi r22,0xfe;
    29d2:	6e 7f       	andi	r22, 0xFE	; 254
	sts tr4_params,r22
    29d4:	60 93 2d 09 	sts	0x092D, r22	; 0x80092d <tr4_params>
	rjmp esmw	
    29d8:	0b c0       	rjmp	.+22     	; 0x29f0 <esmw>

000029da <smw1>:
smw1:
	cpi r22,0xff	;15bit lfsr
    29da:	6f 3f       	cpi	r22, 0xFF	; 255
	brne smw2
    29dc:	31 f4       	brne	.+12     	; 0x29ea <smw2>
	lds r22,tr4_params
    29de:	60 91 2d 09 	lds	r22, 0x092D	; 0x80092d <tr4_params>
	ori r22,0xfe;
    29e2:	6e 6f       	ori	r22, 0xFE	; 254
	sts tr4_params,r22	
    29e4:	60 93 2d 09 	sts	0x092D, r22	; 0x80092d <tr4_params>
	rjmp esmw
    29e8:	03 c0       	rjmp	.+6      	; 0x29f0 <esmw>

000029ea <smw2>:
smw2:
#endif

#if (INCLUDE_DEFAULT_WAVES != 0)
	ldi r23,hi8(waves)
    29ea:	7b e2       	ldi	r23, 0x2B	; 43
	add r23,r22
    29ec:	76 0f       	add	r23, r22
	std Z+samplepos_hi,r23 ;store path No
    29ee:	75 83       	std	Z+5, r23	; 0x05

000029f0 <esmw>:
#endif

esmw:
	clr r1	
    29f0:	11 24       	eor	r1, r1
	ret
    29f2:	08 95       	ret

000029f4 <steptable>:
    29f4:	22 00       	.word	0x0022	; ????
    29f6:	24 00       	.word	0x0024	; ????
    29f8:	26 00       	.word	0x0026	; ????
    29fa:	28 00       	.word	0x0028	; ????
    29fc:	2b 00       	.word	0x002b	; ????
    29fe:	2d 00       	.word	0x002d	; ????
    2a00:	30 00       	.word	0x0030	; ????
    2a02:	33 00       	.word	0x0033	; ????
    2a04:	36 00       	.word	0x0036	; ????
    2a06:	39 00       	.word	0x0039	; ????
    2a08:	3d 00       	.word	0x003d	; ????
    2a0a:	40 00       	.word	0x0040	; ????
    2a0c:	44 00       	.word	0x0044	; ????
    2a0e:	48 00       	.word	0x0048	; ????
    2a10:	4c 00       	.word	0x004c	; ????
    2a12:	51 00       	.word	0x0051	; ????
    2a14:	56 00       	.word	0x0056	; ????
    2a16:	5b 00       	.word	0x005b	; ????
    2a18:	60 00       	.word	0x0060	; ????
    2a1a:	66 00       	.word	0x0066	; ????
    2a1c:	6c 00       	.word	0x006c	; ????
    2a1e:	73 00       	.word	0x0073	; ????
    2a20:	79 00       	.word	0x0079	; ????
    2a22:	81 00       	.word	0x0081	; ????
    2a24:	88 00       	.word	0x0088	; ????
    2a26:	90 00       	.word	0x0090	; ????
    2a28:	99 00       	.word	0x0099	; ????
    2a2a:	a2 00       	.word	0x00a2	; ????
    2a2c:	ac 00       	.word	0x00ac	; ????
    2a2e:	b6 00       	.word	0x00b6	; ????
    2a30:	c1 00       	.word	0x00c1	; ????
    2a32:	cc 00       	.word	0x00cc	; ????
    2a34:	d8 00       	.word	0x00d8	; ????
    2a36:	e5 00       	.word	0x00e5	; ????
    2a38:	f3 00       	.word	0x00f3	; ????
    2a3a:	01 01       	movw	r0, r2
    2a3c:	10 01       	movw	r2, r0
    2a3e:	21 01       	movw	r4, r2
    2a40:	32 01       	movw	r6, r4
    2a42:	44 01       	movw	r8, r8
    2a44:	57 01       	movw	r10, r14
    2a46:	6c 01       	movw	r12, r24
    2a48:	81 01       	movw	r16, r2
    2a4a:	98 01       	movw	r18, r16
    2a4c:	b0 01       	movw	r22, r0
    2a4e:	ca 01       	movw	r24, r20
    2a50:	e5 01       	movw	r28, r10
    2a52:	02 02       	muls	r16, r18
    2a54:	21 02       	muls	r18, r17
    2a56:	41 02       	muls	r20, r17
    2a58:	64 02       	muls	r22, r20
    2a5a:	88 02       	muls	r24, r24
    2a5c:	ae 02       	muls	r26, r30
    2a5e:	d7 02       	muls	r29, r23
    2a60:	03 03       	mulsu	r16, r19
    2a62:	30 03       	mulsu	r19, r16
    2a64:	61 03       	mulsu	r22, r17
    2a66:	94 03       	fmuls	r17, r20
    2a68:	cb 03       	fmulsu	r20, r19
    2a6a:	05 04       	cpc	r0, r5
    2a6c:	42 04       	cpc	r4, r2
    2a6e:	83 04       	cpc	r8, r3
    2a70:	c7 04       	cpc	r12, r7
    2a72:	10 05       	cpc	r17, r0
    2a74:	5d 05       	cpc	r21, r13
    2a76:	af 05       	cpc	r26, r15
    2a78:	05 06       	cpc	r0, r21
    2a7a:	61 06       	cpc	r6, r17
    2a7c:	c2 06       	cpc	r12, r18
    2a7e:	29 07       	cpc	r18, r25
    2a80:	96 07       	cpc	r25, r22
    2a82:	09 08       	sbc	r0, r9
    2a84:	83 08       	sbc	r8, r3
    2a86:	05 09       	sbc	r16, r5
    2a88:	8e 09       	sbc	r24, r14
    2a8a:	20 0a       	sbc	r2, r16
    2a8c:	ba 0a       	sbc	r11, r26
    2a8e:	5d 0b       	sbc	r21, r29
    2a90:	0a 0c       	add	r0, r10
    2a92:	c1 0c       	add	r12, r1
    2a94:	84 0d       	add	r24, r4
    2a96:	51 0e       	add	r5, r17
    2a98:	2b 0f       	add	r18, r27
    2a9a:	12 10       	cpse	r1, r2
    2a9c:	07 11       	cpse	r16, r7
    2a9e:	0a 12       	cpse	r0, r26
    2aa0:	1d 13       	cpse	r17, r29
    2aa2:	40 14       	cp	r4, r0
    2aa4:	74 15       	cp	r23, r4
    2aa6:	ba 16       	cp	r11, r26
    2aa8:	14 18       	sub	r1, r4
    2aaa:	83 19       	sub	r24, r3
    2aac:	07 1b       	sub	r16, r23
    2aae:	a3 1c       	adc	r10, r3
    2ab0:	57 1e       	adc	r5, r23
    2ab2:	24 20       	and	r2, r4
    2ab4:	0e 22       	and	r0, r30
    2ab6:	14 24       	eor	r1, r4
    2ab8:	39 26       	eor	r3, r25
    2aba:	7f 28       	or	r7, r15
    2abc:	e8 2a       	or	r14, r24
    2abe:	75 2d       	mov	r23, r5
    2ac0:	29 30       	cpi	r18, 0x09	; 9
    2ac2:	06 33       	cpi	r16, 0x36	; 54
    2ac4:	0f 36       	cpi	r16, 0x6F	; 111
    2ac6:	45 39       	cpi	r20, 0x95	; 149
    2ac8:	ad 3c       	cpi	r26, 0xCD	; 205
    2aca:	49 40       	sbci	r20, 0x09	; 9
    2acc:	1b 44       	sbci	r17, 0x4B	; 75
    2ace:	28 48       	sbci	r18, 0x88	; 136
    2ad0:	73 4c       	sbci	r23, 0xC3	; 195
    2ad2:	fe 50       	subi	r31, 0x0E	; 14
    2ad4:	cf 55       	subi	r28, 0x5F	; 95
    2ad6:	ea 5a       	subi	r30, 0xAA	; 170
    2ad8:	51 60       	ori	r21, 0x01	; 1
    2ada:	0c 66       	ori	r16, 0x6C	; 108
    2adc:	1d 6c       	ori	r17, 0xCD	; 205
    2ade:	8b 72       	andi	r24, 0x2B	; 43
    2ae0:	5a 79       	andi	r21, 0x9A	; 154
    2ae2:	92 80       	ldd	r9, Z+2	; 0x02
    2ae4:	37 88       	ldd	r3, Z+23	; 0x17
    2ae6:	50 90 e5 98 	lds	r5, 0x98E5	; 0x8098e5 <__bss_end+0x8f1d>
    2aea:	fd a1       	ldd	r31, Y+37	; 0x25
    2aec:	9f ab       	std	Y+55, r25	; 0x37
    2aee:	d3 b5       	in	r29, 0x23	; 35
    2af0:	a3 c0       	rjmp	.+326    	; 0x2c38 <waves+0x138>
	...

00002b00 <waves>:
    2b00:	00 03       	mulsu	r16, r16
    2b02:	06 09       	sbc	r16, r6
    2b04:	0c 10       	cpse	r0, r12
    2b06:	13 16       	cp	r1, r19
    2b08:	19 1c       	adc	r1, r9
    2b0a:	1f 22       	and	r1, r31
    2b0c:	25 28       	or	r2, r5
    2b0e:	2b 2e       	mov	r2, r27
    2b10:	31 33       	cpi	r19, 0x31	; 49
    2b12:	36 39       	cpi	r19, 0x96	; 150
    2b14:	3c 3f       	cpi	r19, 0xFC	; 252
    2b16:	41 44       	sbci	r20, 0x41	; 65
    2b18:	47 49       	sbci	r20, 0x97	; 151
    2b1a:	4c 4e       	sbci	r20, 0xEC	; 236
    2b1c:	51 53       	subi	r21, 0x31	; 49
    2b1e:	55 58       	subi	r21, 0x85	; 133
    2b20:	5a 5c       	subi	r21, 0xCA	; 202
    2b22:	5e 60       	ori	r21, 0x0E	; 14
    2b24:	62 64       	ori	r22, 0x42	; 66
    2b26:	66 68       	ori	r22, 0x86	; 134
    2b28:	6a 6b       	ori	r22, 0xBA	; 186
    2b2a:	6d 6f       	ori	r22, 0xFD	; 253
    2b2c:	70 71       	andi	r23, 0x10	; 16
    2b2e:	73 74       	andi	r23, 0x43	; 67
    2b30:	75 76       	andi	r23, 0x65	; 101
    2b32:	78 79       	andi	r23, 0x98	; 152
    2b34:	7a 7a       	andi	r23, 0xAA	; 170
    2b36:	7b 7c       	andi	r23, 0xCB	; 203
    2b38:	7d 7d       	andi	r23, 0xDD	; 221
    2b3a:	7e 7e       	andi	r23, 0xEE	; 238
    2b3c:	7e 7f       	andi	r23, 0xFE	; 254
    2b3e:	7f 7f       	andi	r23, 0xFF	; 255
    2b40:	7f 7f       	andi	r23, 0xFF	; 255
    2b42:	7f 7f       	andi	r23, 0xFF	; 255
    2b44:	7e 7e       	andi	r23, 0xEE	; 238
    2b46:	7e 7d       	andi	r23, 0xDE	; 222
    2b48:	7d 7c       	andi	r23, 0xCD	; 205
    2b4a:	7b 7a       	andi	r23, 0xAB	; 171
    2b4c:	7a 79       	andi	r23, 0x9A	; 154
    2b4e:	78 76       	andi	r23, 0x68	; 104
    2b50:	75 74       	andi	r23, 0x45	; 69
    2b52:	73 71       	andi	r23, 0x13	; 19
    2b54:	70 6f       	ori	r23, 0xF0	; 240
    2b56:	6d 6b       	ori	r22, 0xBD	; 189
    2b58:	6a 68       	ori	r22, 0x8A	; 138
    2b5a:	66 64       	ori	r22, 0x46	; 70
    2b5c:	62 60       	ori	r22, 0x02	; 2
    2b5e:	5e 5c       	subi	r21, 0xCE	; 206
    2b60:	5a 58       	subi	r21, 0x8A	; 138
    2b62:	55 53       	subi	r21, 0x35	; 53
    2b64:	51 4e       	sbci	r21, 0xE1	; 225
    2b66:	4c 49       	sbci	r20, 0x9C	; 156
    2b68:	47 44       	sbci	r20, 0x47	; 71
    2b6a:	41 3f       	cpi	r20, 0xF1	; 241
    2b6c:	3c 39       	cpi	r19, 0x9C	; 156
    2b6e:	36 33       	cpi	r19, 0x36	; 54
    2b70:	31 2e       	mov	r3, r17
    2b72:	2b 28       	or	r2, r11
    2b74:	25 22       	and	r2, r21
    2b76:	1f 1c       	adc	r1, r15
    2b78:	19 16       	cp	r1, r25
    2b7a:	13 10       	cpse	r1, r3
    2b7c:	0c 09       	sbc	r16, r12
    2b7e:	06 03       	mulsu	r16, r22
    2b80:	00 fd       	sbrc	r16, 0
    2b82:	fa f7       	brpl	.-2      	; 0x2b82 <waves+0x82>
    2b84:	f4 f0       	brlt	.+60     	; 0x2bc2 <waves+0xc2>
    2b86:	ed ea       	ldi	r30, 0xAD	; 173
    2b88:	e7 e4       	ldi	r30, 0x47	; 71
    2b8a:	e1 de       	rcall	.-574    	; 0x294e <TriggerNote+0x42>
    2b8c:	db d8       	rcall	.-3658   	; 0x1d44 <render_tile_line+0x4>
    2b8e:	d5 d2       	rcall	.+1450   	; 0x313a <waves+0x63a>
    2b90:	cf cd       	rjmp	.-1122   	; 0x2730 <ProcessMusic+0x2be>
    2b92:	ca c7       	rjmp	.+3988   	; 0x3b28 <update+0x3ce>
    2b94:	c4 c1       	rjmp	.+904    	; 0x2f1e <waves+0x41e>
    2b96:	bf bc       	out	0x2f, r11	; 47
    2b98:	b9 b7       	in	r27, 0x39	; 57
    2b9a:	b4 b2       	in	r11, 0x14	; 20
    2b9c:	af ad       	ldd	r26, Y+63	; 0x3f
    2b9e:	ab a8       	ldd	r10, Y+51	; 0x33
    2ba0:	a6 a4       	ldd	r10, Z+46	; 0x2e
    2ba2:	a2 a0       	ldd	r10, Z+34	; 0x22
    2ba4:	9e 9c       	mul	r9, r14
    2ba6:	9a 98       	cbi	0x13, 2	; 19
    2ba8:	96 95       	lsr	r25
    2baa:	93 91       	.word	0x9193	; ????
    2bac:	90 8f       	std	Z+24, r25	; 0x18
    2bae:	8d 8c       	ldd	r8, Y+29	; 0x1d
    2bb0:	8b 8a       	std	Y+19, r8	; 0x13
    2bb2:	88 87       	std	Y+8, r24	; 0x08
    2bb4:	86 86       	std	Z+14, r8	; 0x0e
    2bb6:	85 84       	ldd	r8, Z+13	; 0x0d
    2bb8:	83 83       	std	Z+3, r24	; 0x03
    2bba:	82 82       	std	Z+2, r8	; 0x02
    2bbc:	82 81       	ldd	r24, Z+2	; 0x02
    2bbe:	81 81       	ldd	r24, Z+1	; 0x01
    2bc0:	81 81       	ldd	r24, Z+1	; 0x01
    2bc2:	81 81       	ldd	r24, Z+1	; 0x01
    2bc4:	82 82       	std	Z+2, r8	; 0x02
    2bc6:	82 83       	std	Z+2, r24	; 0x02
    2bc8:	83 84       	ldd	r8, Z+11	; 0x0b
    2bca:	85 86       	std	Z+13, r8	; 0x0d
    2bcc:	86 87       	std	Z+14, r24	; 0x0e
    2bce:	88 8a       	std	Y+16, r8	; 0x10
    2bd0:	8b 8c       	ldd	r8, Y+27	; 0x1b
    2bd2:	8d 8f       	std	Y+29, r24	; 0x1d
    2bd4:	90 91 93 95 	lds	r25, 0x9593	; 0x809593 <__bss_end+0x8bcb>
    2bd8:	96 98       	cbi	0x12, 6	; 18
    2bda:	9a 9c       	mul	r9, r10
    2bdc:	9e a0       	ldd	r9, Y+38	; 0x26
    2bde:	a2 a4       	ldd	r10, Z+42	; 0x2a
    2be0:	a6 a8       	ldd	r10, Z+54	; 0x36
    2be2:	ab ad       	ldd	r26, Y+59	; 0x3b
    2be4:	af b2       	in	r10, 0x1f	; 31
    2be6:	b4 b7       	in	r27, 0x34	; 52
    2be8:	b9 bc       	out	0x29, r11	; 41
    2bea:	bf c1       	rjmp	.+894    	; 0x2f6a <waves+0x46a>
    2bec:	c4 c7       	rjmp	.+3976   	; 0x3b76 <update+0x41c>
    2bee:	ca cd       	rjmp	.-1132   	; 0x2784 <ProcessMusic+0x312>
    2bf0:	cf d2       	rcall	.+1438   	; 0x3190 <waves+0x690>
    2bf2:	d5 d8       	rcall	.-3670   	; 0x1d9e <__vector_13+0x1c>
    2bf4:	db de       	rcall	.-586    	; 0x29ac <set_note_waves+0x16>
    2bf6:	e1 e4       	ldi	r30, 0x41	; 65
    2bf8:	e7 ea       	ldi	r30, 0xA7	; 167
    2bfa:	ed f0       	brhs	.+58     	; 0x2c36 <waves+0x136>
    2bfc:	f4 f7       	brge	.-4      	; 0x2bfa <waves+0xfa>
    2bfe:	fa fd       	.word	0xfdfa	; ????
    2c00:	80 81       	ld	r24, Z
    2c02:	82 83       	std	Z+2, r24	; 0x02
    2c04:	84 85       	ldd	r24, Z+12	; 0x0c
    2c06:	86 87       	std	Z+14, r24	; 0x0e
    2c08:	88 89       	ldd	r24, Y+16	; 0x10
    2c0a:	8a 8b       	std	Y+18, r24	; 0x12
    2c0c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    2c0e:	8e 8f       	std	Y+30, r24	; 0x1e
    2c10:	90 91 92 93 	lds	r25, 0x9392	; 0x809392 <__bss_end+0x89ca>
    2c14:	94 95       	.word	0x9594	; ????
    2c16:	96 97       	sbiw	r26, 0x26	; 38
    2c18:	98 99       	sbic	0x13, 0	; 19
    2c1a:	9a 9b       	sbis	0x13, 2	; 19
    2c1c:	9c 9d       	mul	r25, r12
    2c1e:	9e 9f       	mul	r25, r30
    2c20:	a0 a1       	ldd	r26, Z+32	; 0x20
    2c22:	a2 a3       	std	Z+34, r26	; 0x22
    2c24:	a4 a5       	ldd	r26, Z+44	; 0x2c
    2c26:	a6 a7       	std	Z+46, r26	; 0x2e
    2c28:	a8 a9       	ldd	r26, Y+48	; 0x30
    2c2a:	aa ab       	std	Y+50, r26	; 0x32
    2c2c:	ac ad       	ldd	r26, Y+60	; 0x3c
    2c2e:	ae af       	std	Y+62, r26	; 0x3e
    2c30:	b0 b1       	in	r27, 0x00	; 0
    2c32:	b2 b3       	in	r27, 0x12	; 18
    2c34:	b4 b5       	in	r27, 0x24	; 36
    2c36:	b6 b7       	in	r27, 0x36	; 54
    2c38:	b8 b9       	out	0x08, r27	; 8
    2c3a:	ba bb       	out	0x1a, r27	; 26
    2c3c:	bc bd       	out	0x2c, r27	; 44
    2c3e:	be bf       	out	0x3e, r27	; 62
    2c40:	c0 c1       	rjmp	.+896    	; 0x2fc2 <waves+0x4c2>
    2c42:	c2 c3       	rjmp	.+1924   	; 0x33c8 <waves+0x8c8>
    2c44:	c4 c5       	rjmp	.+2952   	; 0x37ce <update+0x74>
    2c46:	c6 c7       	rjmp	.+3980   	; 0x3bd4 <update+0x47a>
    2c48:	c8 c9       	rjmp	.-3184   	; 0x1fda <end_set_bank+0x64>
    2c4a:	ca cb       	rjmp	.-2156   	; 0x23e0 <PatchCommand11+0x44>
    2c4c:	cc cd       	rjmp	.-1128   	; 0x27e6 <ProcessMusic+0x374>
    2c4e:	ce cf       	rjmp	.-100    	; 0x2bec <waves+0xec>
    2c50:	d0 d1       	rcall	.+928    	; 0x2ff2 <waves+0x4f2>
    2c52:	d2 d3       	rcall	.+1956   	; 0x33f8 <waves+0x8f8>
    2c54:	d4 d5       	rcall	.+2984   	; 0x37fe <update+0xa4>
    2c56:	d6 d7       	rcall	.+4012   	; 0x3c04 <update+0x4aa>
    2c58:	d8 d9       	rcall	.-3152   	; 0x200a <mix_loop>
    2c5a:	da db       	rcall	.-2124   	; 0x2410 <PatchCommand11+0x74>
    2c5c:	dc dd       	rcall	.-1096   	; 0x2816 <ProcessMusic+0x3a4>
    2c5e:	de df       	rcall	.-68     	; 0x2c1c <waves+0x11c>
    2c60:	e0 e1       	ldi	r30, 0x10	; 16
    2c62:	e2 e3       	ldi	r30, 0x32	; 50
    2c64:	e4 e5       	ldi	r30, 0x54	; 84
    2c66:	e6 e7       	ldi	r30, 0x76	; 118
    2c68:	e8 e9       	ldi	r30, 0x98	; 152
    2c6a:	ea eb       	ldi	r30, 0xBA	; 186
    2c6c:	ec ed       	ldi	r30, 0xDC	; 220
    2c6e:	ee ef       	ldi	r30, 0xFE	; 254
    2c70:	f0 f1       	brcs	.+124    	; 0x2cee <waves+0x1ee>
    2c72:	f2 f3       	brmi	.-4      	; 0x2c70 <waves+0x170>
    2c74:	f4 f5       	brge	.+124    	; 0x2cf2 <waves+0x1f2>
    2c76:	f6 f7       	brtc	.-4      	; 0x2c74 <waves+0x174>
    2c78:	f8 f9       	.word	0xf9f8	; ????
    2c7a:	fa fb       	.word	0xfbfa	; ????
    2c7c:	fc fd       	.word	0xfdfc	; ????
    2c7e:	fe ff       	.word	0xfffe	; ????
    2c80:	00 01       	movw	r0, r0
    2c82:	02 03       	mulsu	r16, r18
    2c84:	04 05       	cpc	r16, r4
    2c86:	06 07       	cpc	r16, r22
    2c88:	08 09       	sbc	r16, r8
    2c8a:	0a 0b       	sbc	r16, r26
    2c8c:	0c 0d       	add	r16, r12
    2c8e:	0e 0f       	add	r16, r30
    2c90:	10 11       	cpse	r17, r0
    2c92:	12 13       	cpse	r17, r18
    2c94:	14 15       	cp	r17, r4
    2c96:	16 17       	cp	r17, r22
    2c98:	18 19       	sub	r17, r8
    2c9a:	1a 1b       	sub	r17, r26
    2c9c:	1c 1d       	adc	r17, r12
    2c9e:	1e 1f       	adc	r17, r30
    2ca0:	20 21       	and	r18, r0
    2ca2:	22 23       	and	r18, r18
    2ca4:	24 25       	eor	r18, r4
    2ca6:	26 27       	eor	r18, r22
    2ca8:	28 29       	or	r18, r8
    2caa:	2a 2b       	or	r18, r26
    2cac:	2c 2d       	mov	r18, r12
    2cae:	2e 2f       	mov	r18, r30
    2cb0:	30 31       	cpi	r19, 0x10	; 16
    2cb2:	32 33       	cpi	r19, 0x32	; 50
    2cb4:	34 35       	cpi	r19, 0x54	; 84
    2cb6:	36 37       	cpi	r19, 0x76	; 118
    2cb8:	38 39       	cpi	r19, 0x98	; 152
    2cba:	3a 3b       	cpi	r19, 0xBA	; 186
    2cbc:	3c 3d       	cpi	r19, 0xDC	; 220
    2cbe:	3e 3f       	cpi	r19, 0xFE	; 254
    2cc0:	40 41       	sbci	r20, 0x10	; 16
    2cc2:	42 43       	sbci	r20, 0x32	; 50
    2cc4:	44 45       	sbci	r20, 0x54	; 84
    2cc6:	46 47       	sbci	r20, 0x76	; 118
    2cc8:	48 49       	sbci	r20, 0x98	; 152
    2cca:	4a 4b       	sbci	r20, 0xBA	; 186
    2ccc:	4c 4d       	sbci	r20, 0xDC	; 220
    2cce:	4e 4f       	sbci	r20, 0xFE	; 254
    2cd0:	50 51       	subi	r21, 0x10	; 16
    2cd2:	52 53       	subi	r21, 0x32	; 50
    2cd4:	54 55       	subi	r21, 0x54	; 84
    2cd6:	56 57       	subi	r21, 0x76	; 118
    2cd8:	58 59       	subi	r21, 0x98	; 152
    2cda:	5a 5b       	subi	r21, 0xBA	; 186
    2cdc:	5c 5d       	subi	r21, 0xDC	; 220
    2cde:	5e 5f       	subi	r21, 0xFE	; 254
    2ce0:	60 61       	ori	r22, 0x10	; 16
    2ce2:	62 63       	ori	r22, 0x32	; 50
    2ce4:	64 65       	ori	r22, 0x54	; 84
    2ce6:	66 67       	ori	r22, 0x76	; 118
    2ce8:	68 69       	ori	r22, 0x98	; 152
    2cea:	6a 6b       	ori	r22, 0xBA	; 186
    2cec:	6c 6d       	ori	r22, 0xDC	; 220
    2cee:	6e 6f       	ori	r22, 0xFE	; 254
    2cf0:	70 71       	andi	r23, 0x10	; 16
    2cf2:	72 73       	andi	r23, 0x32	; 50
    2cf4:	74 75       	andi	r23, 0x54	; 84
    2cf6:	76 77       	andi	r23, 0x76	; 118
    2cf8:	78 79       	andi	r23, 0x98	; 152
    2cfa:	7a 7b       	andi	r23, 0xBA	; 186
    2cfc:	7c 7d       	andi	r23, 0xDC	; 220
    2cfe:	7e 7f       	andi	r23, 0xFE	; 254
    2d00:	00 02       	muls	r16, r16
    2d02:	04 06       	cpc	r0, r20
    2d04:	08 0a       	sbc	r0, r24
    2d06:	0c 0e       	add	r0, r28
    2d08:	10 12       	cpse	r1, r16
    2d0a:	14 16       	cp	r1, r20
    2d0c:	18 1a       	sub	r1, r24
    2d0e:	1c 1e       	adc	r1, r28
    2d10:	20 22       	and	r2, r16
    2d12:	24 26       	eor	r2, r20
    2d14:	28 2a       	or	r2, r24
    2d16:	2c 2e       	mov	r2, r28
    2d18:	30 32       	cpi	r19, 0x20	; 32
    2d1a:	34 36       	cpi	r19, 0x64	; 100
    2d1c:	38 3a       	cpi	r19, 0xA8	; 168
    2d1e:	3c 3e       	cpi	r19, 0xEC	; 236
    2d20:	40 42       	sbci	r20, 0x20	; 32
    2d22:	44 46       	sbci	r20, 0x64	; 100
    2d24:	48 4a       	sbci	r20, 0xA8	; 168
    2d26:	4c 4e       	sbci	r20, 0xEC	; 236
    2d28:	50 52       	subi	r21, 0x20	; 32
    2d2a:	54 56       	subi	r21, 0x64	; 100
    2d2c:	58 5a       	subi	r21, 0xA8	; 168
    2d2e:	5c 5e       	subi	r21, 0xEC	; 236
    2d30:	60 62       	ori	r22, 0x20	; 32
    2d32:	64 66       	ori	r22, 0x64	; 100
    2d34:	68 6a       	ori	r22, 0xA8	; 168
    2d36:	6c 6e       	ori	r22, 0xEC	; 236
    2d38:	70 72       	andi	r23, 0x20	; 32
    2d3a:	74 76       	andi	r23, 0x64	; 100
    2d3c:	78 7a       	andi	r23, 0xA8	; 168
    2d3e:	7c 7e       	andi	r23, 0xEC	; 236
    2d40:	7f 7d       	andi	r23, 0xDF	; 223
    2d42:	7b 79       	andi	r23, 0x9B	; 155
    2d44:	77 75       	andi	r23, 0x57	; 87
    2d46:	73 71       	andi	r23, 0x13	; 19
    2d48:	6f 6d       	ori	r22, 0xDF	; 223
    2d4a:	6b 69       	ori	r22, 0x9B	; 155
    2d4c:	67 65       	ori	r22, 0x57	; 87
    2d4e:	63 61       	ori	r22, 0x13	; 19
    2d50:	5f 5d       	subi	r21, 0xDF	; 223
    2d52:	5b 59       	subi	r21, 0x9B	; 155
    2d54:	57 55       	subi	r21, 0x57	; 87
    2d56:	53 51       	subi	r21, 0x13	; 19
    2d58:	4f 4d       	sbci	r20, 0xDF	; 223
    2d5a:	4b 49       	sbci	r20, 0x9B	; 155
    2d5c:	47 45       	sbci	r20, 0x57	; 87
    2d5e:	43 41       	sbci	r20, 0x13	; 19
    2d60:	3f 3d       	cpi	r19, 0xDF	; 223
    2d62:	3b 39       	cpi	r19, 0x9B	; 155
    2d64:	37 35       	cpi	r19, 0x57	; 87
    2d66:	33 31       	cpi	r19, 0x13	; 19
    2d68:	2f 2d       	mov	r18, r15
    2d6a:	2b 29       	or	r18, r11
    2d6c:	27 25       	eor	r18, r7
    2d6e:	23 21       	and	r18, r3
    2d70:	1f 1d       	adc	r17, r15
    2d72:	1b 19       	sub	r17, r11
    2d74:	17 15       	cp	r17, r7
    2d76:	13 11       	cpse	r17, r3
    2d78:	0f 0d       	add	r16, r15
    2d7a:	0b 09       	sbc	r16, r11
    2d7c:	07 05       	cpc	r16, r7
    2d7e:	03 01       	movw	r0, r6
    2d80:	ff fd       	.word	0xfdff	; ????
    2d82:	fb f9       	.word	0xf9fb	; ????
    2d84:	f7 f5       	brid	.+124    	; 0x2e02 <waves+0x302>
    2d86:	f3 f1       	brvs	.+124    	; 0x2e04 <waves+0x304>
    2d88:	ef ed       	ldi	r30, 0xDF	; 223
    2d8a:	eb e9       	ldi	r30, 0x9B	; 155
    2d8c:	e7 e5       	ldi	r30, 0x57	; 87
    2d8e:	e3 e1       	ldi	r30, 0x13	; 19
    2d90:	df dd       	rcall	.-1090   	; 0x2950 <TriggerNote+0x44>
    2d92:	db d9       	rcall	.-3146   	; 0x214a <update_sound+0x44>
    2d94:	d7 d5       	rcall	.+2990   	; 0x3944 <update+0x1ea>
    2d96:	d3 d1       	rcall	.+934    	; 0x313e <waves+0x63e>
    2d98:	cf cd       	rjmp	.-1122   	; 0x2938 <TriggerNote+0x2c>
    2d9a:	cb c9       	rjmp	.-3178   	; 0x2132 <update_sound+0x2c>
    2d9c:	c7 c5       	rjmp	.+2958   	; 0x392c <update+0x1d2>
    2d9e:	c3 c1       	rjmp	.+902    	; 0x3126 <waves+0x626>
    2da0:	bf bd       	out	0x2f, r27	; 47
    2da2:	bb b9       	out	0x0b, r27	; 11
    2da4:	b7 b5       	in	r27, 0x27	; 39
    2da6:	b3 b1       	in	r27, 0x03	; 3
    2da8:	af ad       	ldd	r26, Y+63	; 0x3f
    2daa:	ab a9       	ldd	r26, Y+51	; 0x33
    2dac:	a7 a5       	ldd	r26, Z+47	; 0x2f
    2dae:	a3 a1       	ldd	r26, Z+35	; 0x23
    2db0:	9f 9d       	mul	r25, r15
    2db2:	9b 99       	sbic	0x13, 3	; 19
    2db4:	97 95       	ror	r25
    2db6:	93 91       	.word	0x9193	; ????
    2db8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2dba:	8b 89       	ldd	r24, Y+19	; 0x13
    2dbc:	87 85       	ldd	r24, Z+15	; 0x0f
    2dbe:	83 81       	ldd	r24, Z+3	; 0x03
    2dc0:	80 82       	st	Z, r8
    2dc2:	84 86       	std	Z+12, r8	; 0x0c
    2dc4:	88 8a       	std	Y+16, r8	; 0x10
    2dc6:	8c 8e       	std	Y+28, r8	; 0x1c
    2dc8:	90 92 94 96 	sts	0x9694, r9	; 0x809694 <__bss_end+0x8ccc>
    2dcc:	98 9a       	sbi	0x13, 0	; 19
    2dce:	9c 9e       	mul	r9, r28
    2dd0:	a0 a2       	std	Z+32, r10	; 0x20
    2dd2:	a4 a6       	std	Z+44, r10	; 0x2c
    2dd4:	a8 aa       	std	Y+48, r10	; 0x30
    2dd6:	ac ae       	std	Y+60, r10	; 0x3c
    2dd8:	b0 b2       	in	r11, 0x10	; 16
    2dda:	b4 b6       	in	r11, 0x34	; 52
    2ddc:	b8 ba       	out	0x18, r11	; 24
    2dde:	bc be       	out	0x3c, r11	; 60
    2de0:	c0 c2       	rjmp	.+1408   	; 0x3362 <waves+0x862>
    2de2:	c4 c6       	rjmp	.+3464   	; 0x3b6c <update+0x412>
    2de4:	c8 ca       	rjmp	.-2672   	; 0x2376 <PatchCommand08+0x6>
    2de6:	cc ce       	rjmp	.-616    	; 0x2b80 <waves+0x80>
    2de8:	d0 d2       	rcall	.+1440   	; 0x338a <waves+0x88a>
    2dea:	d4 d6       	rcall	.+3496   	; 0x3b94 <update+0x43a>
    2dec:	d8 da       	rcall	.-2640   	; 0x239e <PatchCommand11+0x2>
    2dee:	dc de       	rcall	.-584    	; 0x2ba8 <waves+0xa8>
    2df0:	e0 e2       	ldi	r30, 0x20	; 32
    2df2:	e4 e6       	ldi	r30, 0x64	; 100
    2df4:	e8 ea       	ldi	r30, 0xA8	; 168
    2df6:	ec ee       	ldi	r30, 0xEC	; 236
    2df8:	f0 f2       	brcs	.-68     	; 0x2db6 <waves+0x2b6>
    2dfa:	f4 f6       	brge	.-68     	; 0x2db8 <waves+0x2b8>
    2dfc:	f8 fa       	.word	0xfaf8	; ????
    2dfe:	fc fe       	.word	0xfefc	; ????
    2e00:	7f 7f       	andi	r23, 0xFF	; 255
    2e02:	7f 7f       	andi	r23, 0xFF	; 255
    2e04:	7f 7f       	andi	r23, 0xFF	; 255
    2e06:	7f 7f       	andi	r23, 0xFF	; 255
    2e08:	7f 7f       	andi	r23, 0xFF	; 255
    2e0a:	7f 7f       	andi	r23, 0xFF	; 255
    2e0c:	7f 7f       	andi	r23, 0xFF	; 255
    2e0e:	7f 7f       	andi	r23, 0xFF	; 255
    2e10:	7f 7f       	andi	r23, 0xFF	; 255
    2e12:	7f 7f       	andi	r23, 0xFF	; 255
    2e14:	7f 7f       	andi	r23, 0xFF	; 255
    2e16:	7f 7f       	andi	r23, 0xFF	; 255
    2e18:	7f 7f       	andi	r23, 0xFF	; 255
    2e1a:	7f 7f       	andi	r23, 0xFF	; 255
    2e1c:	7f 7f       	andi	r23, 0xFF	; 255
    2e1e:	7f 7f       	andi	r23, 0xFF	; 255
    2e20:	7f 7f       	andi	r23, 0xFF	; 255
    2e22:	7f 7f       	andi	r23, 0xFF	; 255
    2e24:	7f 7f       	andi	r23, 0xFF	; 255
    2e26:	7f 7f       	andi	r23, 0xFF	; 255
    2e28:	7f 7f       	andi	r23, 0xFF	; 255
    2e2a:	7f 7f       	andi	r23, 0xFF	; 255
    2e2c:	7f 7f       	andi	r23, 0xFF	; 255
    2e2e:	7f 7f       	andi	r23, 0xFF	; 255
    2e30:	7f 7f       	andi	r23, 0xFF	; 255
    2e32:	7f 7f       	andi	r23, 0xFF	; 255
    2e34:	7f 7f       	andi	r23, 0xFF	; 255
    2e36:	7f 7f       	andi	r23, 0xFF	; 255
    2e38:	7f 7f       	andi	r23, 0xFF	; 255
    2e3a:	7f 7f       	andi	r23, 0xFF	; 255
    2e3c:	7f 7f       	andi	r23, 0xFF	; 255
    2e3e:	7f 7f       	andi	r23, 0xFF	; 255
    2e40:	80 80       	ld	r8, Z
    2e42:	80 80       	ld	r8, Z
    2e44:	80 80       	ld	r8, Z
    2e46:	80 80       	ld	r8, Z
    2e48:	80 80       	ld	r8, Z
    2e4a:	80 80       	ld	r8, Z
    2e4c:	80 80       	ld	r8, Z
    2e4e:	80 80       	ld	r8, Z
    2e50:	80 80       	ld	r8, Z
    2e52:	80 80       	ld	r8, Z
    2e54:	80 80       	ld	r8, Z
    2e56:	80 80       	ld	r8, Z
    2e58:	80 80       	ld	r8, Z
    2e5a:	80 80       	ld	r8, Z
    2e5c:	80 80       	ld	r8, Z
    2e5e:	80 80       	ld	r8, Z
    2e60:	80 80       	ld	r8, Z
    2e62:	80 80       	ld	r8, Z
    2e64:	80 80       	ld	r8, Z
    2e66:	80 80       	ld	r8, Z
    2e68:	80 80       	ld	r8, Z
    2e6a:	80 80       	ld	r8, Z
    2e6c:	80 80       	ld	r8, Z
    2e6e:	80 80       	ld	r8, Z
    2e70:	80 80       	ld	r8, Z
    2e72:	80 80       	ld	r8, Z
    2e74:	80 80       	ld	r8, Z
    2e76:	80 80       	ld	r8, Z
    2e78:	80 80       	ld	r8, Z
    2e7a:	80 80       	ld	r8, Z
    2e7c:	80 80       	ld	r8, Z
    2e7e:	80 80       	ld	r8, Z
    2e80:	80 80       	ld	r8, Z
    2e82:	80 80       	ld	r8, Z
    2e84:	80 80       	ld	r8, Z
    2e86:	80 80       	ld	r8, Z
    2e88:	80 80       	ld	r8, Z
    2e8a:	80 80       	ld	r8, Z
    2e8c:	80 80       	ld	r8, Z
    2e8e:	80 80       	ld	r8, Z
    2e90:	80 80       	ld	r8, Z
    2e92:	80 80       	ld	r8, Z
    2e94:	80 80       	ld	r8, Z
    2e96:	80 80       	ld	r8, Z
    2e98:	80 80       	ld	r8, Z
    2e9a:	80 80       	ld	r8, Z
    2e9c:	80 80       	ld	r8, Z
    2e9e:	80 80       	ld	r8, Z
    2ea0:	80 80       	ld	r8, Z
    2ea2:	80 80       	ld	r8, Z
    2ea4:	80 80       	ld	r8, Z
    2ea6:	80 80       	ld	r8, Z
    2ea8:	80 80       	ld	r8, Z
    2eaa:	80 80       	ld	r8, Z
    2eac:	80 80       	ld	r8, Z
    2eae:	80 80       	ld	r8, Z
    2eb0:	80 80       	ld	r8, Z
    2eb2:	80 80       	ld	r8, Z
    2eb4:	80 80       	ld	r8, Z
    2eb6:	80 80       	ld	r8, Z
    2eb8:	80 80       	ld	r8, Z
    2eba:	80 80       	ld	r8, Z
    2ebc:	80 80       	ld	r8, Z
    2ebe:	80 80       	ld	r8, Z
    2ec0:	80 80       	ld	r8, Z
    2ec2:	80 80       	ld	r8, Z
    2ec4:	80 80       	ld	r8, Z
    2ec6:	80 80       	ld	r8, Z
    2ec8:	80 80       	ld	r8, Z
    2eca:	80 80       	ld	r8, Z
    2ecc:	80 80       	ld	r8, Z
    2ece:	80 80       	ld	r8, Z
    2ed0:	80 80       	ld	r8, Z
    2ed2:	80 80       	ld	r8, Z
    2ed4:	80 80       	ld	r8, Z
    2ed6:	80 80       	ld	r8, Z
    2ed8:	80 80       	ld	r8, Z
    2eda:	80 80       	ld	r8, Z
    2edc:	80 80       	ld	r8, Z
    2ede:	80 80       	ld	r8, Z
    2ee0:	80 80       	ld	r8, Z
    2ee2:	80 80       	ld	r8, Z
    2ee4:	80 80       	ld	r8, Z
    2ee6:	80 80       	ld	r8, Z
    2ee8:	80 80       	ld	r8, Z
    2eea:	80 80       	ld	r8, Z
    2eec:	80 80       	ld	r8, Z
    2eee:	80 80       	ld	r8, Z
    2ef0:	80 80       	ld	r8, Z
    2ef2:	80 80       	ld	r8, Z
    2ef4:	80 80       	ld	r8, Z
    2ef6:	80 80       	ld	r8, Z
    2ef8:	80 80       	ld	r8, Z
    2efa:	80 80       	ld	r8, Z
    2efc:	80 80       	ld	r8, Z
    2efe:	80 80       	ld	r8, Z
    2f00:	7f 7f       	andi	r23, 0xFF	; 255
    2f02:	7f 7f       	andi	r23, 0xFF	; 255
    2f04:	7f 7f       	andi	r23, 0xFF	; 255
    2f06:	7f 7f       	andi	r23, 0xFF	; 255
    2f08:	7f 7f       	andi	r23, 0xFF	; 255
    2f0a:	7f 7f       	andi	r23, 0xFF	; 255
    2f0c:	7f 7f       	andi	r23, 0xFF	; 255
    2f0e:	7f 7f       	andi	r23, 0xFF	; 255
    2f10:	7f 7f       	andi	r23, 0xFF	; 255
    2f12:	7f 7f       	andi	r23, 0xFF	; 255
    2f14:	7f 7f       	andi	r23, 0xFF	; 255
    2f16:	7f 7f       	andi	r23, 0xFF	; 255
    2f18:	7f 7f       	andi	r23, 0xFF	; 255
    2f1a:	7f 7f       	andi	r23, 0xFF	; 255
    2f1c:	7f 7f       	andi	r23, 0xFF	; 255
    2f1e:	7f 7f       	andi	r23, 0xFF	; 255
    2f20:	7f 7f       	andi	r23, 0xFF	; 255
    2f22:	7f 7f       	andi	r23, 0xFF	; 255
    2f24:	7f 7f       	andi	r23, 0xFF	; 255
    2f26:	7f 7f       	andi	r23, 0xFF	; 255
    2f28:	7f 7f       	andi	r23, 0xFF	; 255
    2f2a:	7f 7f       	andi	r23, 0xFF	; 255
    2f2c:	7f 7f       	andi	r23, 0xFF	; 255
    2f2e:	7f 7f       	andi	r23, 0xFF	; 255
    2f30:	7f 7f       	andi	r23, 0xFF	; 255
    2f32:	7f 7f       	andi	r23, 0xFF	; 255
    2f34:	7f 7f       	andi	r23, 0xFF	; 255
    2f36:	7f 7f       	andi	r23, 0xFF	; 255
    2f38:	7f 7f       	andi	r23, 0xFF	; 255
    2f3a:	7f 7f       	andi	r23, 0xFF	; 255
    2f3c:	7f 7f       	andi	r23, 0xFF	; 255
    2f3e:	7f 7f       	andi	r23, 0xFF	; 255
    2f40:	7f 7f       	andi	r23, 0xFF	; 255
    2f42:	7f 7f       	andi	r23, 0xFF	; 255
    2f44:	7f 7f       	andi	r23, 0xFF	; 255
    2f46:	7f 7f       	andi	r23, 0xFF	; 255
    2f48:	7f 7f       	andi	r23, 0xFF	; 255
    2f4a:	7f 7f       	andi	r23, 0xFF	; 255
    2f4c:	7f 7f       	andi	r23, 0xFF	; 255
    2f4e:	7f 7f       	andi	r23, 0xFF	; 255
    2f50:	7f 7f       	andi	r23, 0xFF	; 255
    2f52:	7f 7f       	andi	r23, 0xFF	; 255
    2f54:	7f 7f       	andi	r23, 0xFF	; 255
    2f56:	7f 7f       	andi	r23, 0xFF	; 255
    2f58:	7f 7f       	andi	r23, 0xFF	; 255
    2f5a:	7f 7f       	andi	r23, 0xFF	; 255
    2f5c:	7f 7f       	andi	r23, 0xFF	; 255
    2f5e:	7f 7f       	andi	r23, 0xFF	; 255
    2f60:	7f 7f       	andi	r23, 0xFF	; 255
    2f62:	7f 7f       	andi	r23, 0xFF	; 255
    2f64:	7f 7f       	andi	r23, 0xFF	; 255
    2f66:	7f 7f       	andi	r23, 0xFF	; 255
    2f68:	7f 7f       	andi	r23, 0xFF	; 255
    2f6a:	7f 7f       	andi	r23, 0xFF	; 255
    2f6c:	7f 7f       	andi	r23, 0xFF	; 255
    2f6e:	7f 7f       	andi	r23, 0xFF	; 255
    2f70:	7f 7f       	andi	r23, 0xFF	; 255
    2f72:	7f 7f       	andi	r23, 0xFF	; 255
    2f74:	7f 7f       	andi	r23, 0xFF	; 255
    2f76:	7f 7f       	andi	r23, 0xFF	; 255
    2f78:	7f 7f       	andi	r23, 0xFF	; 255
    2f7a:	7f 7f       	andi	r23, 0xFF	; 255
    2f7c:	7f 7f       	andi	r23, 0xFF	; 255
    2f7e:	7f 7f       	andi	r23, 0xFF	; 255
    2f80:	80 80       	ld	r8, Z
    2f82:	80 80       	ld	r8, Z
    2f84:	80 80       	ld	r8, Z
    2f86:	80 80       	ld	r8, Z
    2f88:	80 80       	ld	r8, Z
    2f8a:	80 80       	ld	r8, Z
    2f8c:	80 80       	ld	r8, Z
    2f8e:	80 80       	ld	r8, Z
    2f90:	80 80       	ld	r8, Z
    2f92:	80 80       	ld	r8, Z
    2f94:	80 80       	ld	r8, Z
    2f96:	80 80       	ld	r8, Z
    2f98:	80 80       	ld	r8, Z
    2f9a:	80 80       	ld	r8, Z
    2f9c:	80 80       	ld	r8, Z
    2f9e:	80 80       	ld	r8, Z
    2fa0:	80 80       	ld	r8, Z
    2fa2:	80 80       	ld	r8, Z
    2fa4:	80 80       	ld	r8, Z
    2fa6:	80 80       	ld	r8, Z
    2fa8:	80 80       	ld	r8, Z
    2faa:	80 80       	ld	r8, Z
    2fac:	80 80       	ld	r8, Z
    2fae:	80 80       	ld	r8, Z
    2fb0:	80 80       	ld	r8, Z
    2fb2:	80 80       	ld	r8, Z
    2fb4:	80 80       	ld	r8, Z
    2fb6:	80 80       	ld	r8, Z
    2fb8:	80 80       	ld	r8, Z
    2fba:	80 80       	ld	r8, Z
    2fbc:	80 80       	ld	r8, Z
    2fbe:	80 80       	ld	r8, Z
    2fc0:	80 80       	ld	r8, Z
    2fc2:	80 80       	ld	r8, Z
    2fc4:	80 80       	ld	r8, Z
    2fc6:	80 80       	ld	r8, Z
    2fc8:	80 80       	ld	r8, Z
    2fca:	80 80       	ld	r8, Z
    2fcc:	80 80       	ld	r8, Z
    2fce:	80 80       	ld	r8, Z
    2fd0:	80 80       	ld	r8, Z
    2fd2:	80 80       	ld	r8, Z
    2fd4:	80 80       	ld	r8, Z
    2fd6:	80 80       	ld	r8, Z
    2fd8:	80 80       	ld	r8, Z
    2fda:	80 80       	ld	r8, Z
    2fdc:	80 80       	ld	r8, Z
    2fde:	80 80       	ld	r8, Z
    2fe0:	80 80       	ld	r8, Z
    2fe2:	80 80       	ld	r8, Z
    2fe4:	80 80       	ld	r8, Z
    2fe6:	80 80       	ld	r8, Z
    2fe8:	80 80       	ld	r8, Z
    2fea:	80 80       	ld	r8, Z
    2fec:	80 80       	ld	r8, Z
    2fee:	80 80       	ld	r8, Z
    2ff0:	80 80       	ld	r8, Z
    2ff2:	80 80       	ld	r8, Z
    2ff4:	80 80       	ld	r8, Z
    2ff6:	80 80       	ld	r8, Z
    2ff8:	80 80       	ld	r8, Z
    2ffa:	80 80       	ld	r8, Z
    2ffc:	80 80       	ld	r8, Z
    2ffe:	80 80       	ld	r8, Z
    3000:	7f 7f       	andi	r23, 0xFF	; 255
    3002:	7f 7f       	andi	r23, 0xFF	; 255
    3004:	7f 7f       	andi	r23, 0xFF	; 255
    3006:	7f 7f       	andi	r23, 0xFF	; 255
    3008:	7f 7f       	andi	r23, 0xFF	; 255
    300a:	7f 7f       	andi	r23, 0xFF	; 255
    300c:	7f 7f       	andi	r23, 0xFF	; 255
    300e:	7f 7f       	andi	r23, 0xFF	; 255
    3010:	7f 7f       	andi	r23, 0xFF	; 255
    3012:	7f 7f       	andi	r23, 0xFF	; 255
    3014:	7f 7f       	andi	r23, 0xFF	; 255
    3016:	7f 7f       	andi	r23, 0xFF	; 255
    3018:	7f 7f       	andi	r23, 0xFF	; 255
    301a:	7f 7f       	andi	r23, 0xFF	; 255
    301c:	7f 7f       	andi	r23, 0xFF	; 255
    301e:	7f 7f       	andi	r23, 0xFF	; 255
    3020:	7f 7f       	andi	r23, 0xFF	; 255
    3022:	7f 7f       	andi	r23, 0xFF	; 255
    3024:	7f 7f       	andi	r23, 0xFF	; 255
    3026:	7f 7f       	andi	r23, 0xFF	; 255
    3028:	7f 7f       	andi	r23, 0xFF	; 255
    302a:	7f 7f       	andi	r23, 0xFF	; 255
    302c:	7f 7f       	andi	r23, 0xFF	; 255
    302e:	7f 7f       	andi	r23, 0xFF	; 255
    3030:	7f 7f       	andi	r23, 0xFF	; 255
    3032:	7f 7f       	andi	r23, 0xFF	; 255
    3034:	7f 7f       	andi	r23, 0xFF	; 255
    3036:	7f 7f       	andi	r23, 0xFF	; 255
    3038:	7f 7f       	andi	r23, 0xFF	; 255
    303a:	7f 7f       	andi	r23, 0xFF	; 255
    303c:	7f 7f       	andi	r23, 0xFF	; 255
    303e:	7f 7f       	andi	r23, 0xFF	; 255
    3040:	7f 7f       	andi	r23, 0xFF	; 255
    3042:	7f 7f       	andi	r23, 0xFF	; 255
    3044:	7f 7f       	andi	r23, 0xFF	; 255
    3046:	7f 7f       	andi	r23, 0xFF	; 255
    3048:	7f 7f       	andi	r23, 0xFF	; 255
    304a:	7f 7f       	andi	r23, 0xFF	; 255
    304c:	7f 7f       	andi	r23, 0xFF	; 255
    304e:	7f 7f       	andi	r23, 0xFF	; 255
    3050:	7f 7f       	andi	r23, 0xFF	; 255
    3052:	7f 7f       	andi	r23, 0xFF	; 255
    3054:	7f 7f       	andi	r23, 0xFF	; 255
    3056:	7f 7f       	andi	r23, 0xFF	; 255
    3058:	7f 7f       	andi	r23, 0xFF	; 255
    305a:	7f 7f       	andi	r23, 0xFF	; 255
    305c:	7f 7f       	andi	r23, 0xFF	; 255
    305e:	7f 7f       	andi	r23, 0xFF	; 255
    3060:	7f 7f       	andi	r23, 0xFF	; 255
    3062:	7f 7f       	andi	r23, 0xFF	; 255
    3064:	7f 7f       	andi	r23, 0xFF	; 255
    3066:	7f 7f       	andi	r23, 0xFF	; 255
    3068:	7f 7f       	andi	r23, 0xFF	; 255
    306a:	7f 7f       	andi	r23, 0xFF	; 255
    306c:	7f 7f       	andi	r23, 0xFF	; 255
    306e:	7f 7f       	andi	r23, 0xFF	; 255
    3070:	7f 7f       	andi	r23, 0xFF	; 255
    3072:	7f 7f       	andi	r23, 0xFF	; 255
    3074:	7f 7f       	andi	r23, 0xFF	; 255
    3076:	7f 7f       	andi	r23, 0xFF	; 255
    3078:	7f 7f       	andi	r23, 0xFF	; 255
    307a:	7f 7f       	andi	r23, 0xFF	; 255
    307c:	7f 7f       	andi	r23, 0xFF	; 255
    307e:	7f 7f       	andi	r23, 0xFF	; 255
    3080:	7f 7f       	andi	r23, 0xFF	; 255
    3082:	7f 7f       	andi	r23, 0xFF	; 255
    3084:	7f 7f       	andi	r23, 0xFF	; 255
    3086:	7f 7f       	andi	r23, 0xFF	; 255
    3088:	7f 7f       	andi	r23, 0xFF	; 255
    308a:	7f 7f       	andi	r23, 0xFF	; 255
    308c:	7f 7f       	andi	r23, 0xFF	; 255
    308e:	7f 7f       	andi	r23, 0xFF	; 255
    3090:	7f 7f       	andi	r23, 0xFF	; 255
    3092:	7f 7f       	andi	r23, 0xFF	; 255
    3094:	7f 7f       	andi	r23, 0xFF	; 255
    3096:	7f 7f       	andi	r23, 0xFF	; 255
    3098:	7f 7f       	andi	r23, 0xFF	; 255
    309a:	7f 7f       	andi	r23, 0xFF	; 255
    309c:	7f 7f       	andi	r23, 0xFF	; 255
    309e:	7f 7f       	andi	r23, 0xFF	; 255
    30a0:	7f 7f       	andi	r23, 0xFF	; 255
    30a2:	7f 7f       	andi	r23, 0xFF	; 255
    30a4:	7f 7f       	andi	r23, 0xFF	; 255
    30a6:	7f 7f       	andi	r23, 0xFF	; 255
    30a8:	7f 7f       	andi	r23, 0xFF	; 255
    30aa:	7f 7f       	andi	r23, 0xFF	; 255
    30ac:	7f 7f       	andi	r23, 0xFF	; 255
    30ae:	7f 7f       	andi	r23, 0xFF	; 255
    30b0:	7f 7f       	andi	r23, 0xFF	; 255
    30b2:	7f 7f       	andi	r23, 0xFF	; 255
    30b4:	7f 7f       	andi	r23, 0xFF	; 255
    30b6:	7f 7f       	andi	r23, 0xFF	; 255
    30b8:	7f 7f       	andi	r23, 0xFF	; 255
    30ba:	7f 7f       	andi	r23, 0xFF	; 255
    30bc:	7f 7f       	andi	r23, 0xFF	; 255
    30be:	7f 7f       	andi	r23, 0xFF	; 255
    30c0:	80 80       	ld	r8, Z
    30c2:	80 80       	ld	r8, Z
    30c4:	80 80       	ld	r8, Z
    30c6:	80 80       	ld	r8, Z
    30c8:	80 80       	ld	r8, Z
    30ca:	80 80       	ld	r8, Z
    30cc:	80 80       	ld	r8, Z
    30ce:	80 80       	ld	r8, Z
    30d0:	80 80       	ld	r8, Z
    30d2:	80 80       	ld	r8, Z
    30d4:	80 80       	ld	r8, Z
    30d6:	80 80       	ld	r8, Z
    30d8:	80 80       	ld	r8, Z
    30da:	80 80       	ld	r8, Z
    30dc:	80 80       	ld	r8, Z
    30de:	80 80       	ld	r8, Z
    30e0:	80 80       	ld	r8, Z
    30e2:	80 80       	ld	r8, Z
    30e4:	80 80       	ld	r8, Z
    30e6:	80 80       	ld	r8, Z
    30e8:	80 80       	ld	r8, Z
    30ea:	80 80       	ld	r8, Z
    30ec:	80 80       	ld	r8, Z
    30ee:	80 80       	ld	r8, Z
    30f0:	80 80       	ld	r8, Z
    30f2:	80 80       	ld	r8, Z
    30f4:	80 80       	ld	r8, Z
    30f6:	80 80       	ld	r8, Z
    30f8:	80 80       	ld	r8, Z
    30fa:	80 80       	ld	r8, Z
    30fc:	80 80       	ld	r8, Z
    30fe:	80 80       	ld	r8, Z
    3100:	03 09       	sbc	r16, r3
    3102:	13 1e       	adc	r1, r19
    3104:	28 31       	cpi	r18, 0x18	; 24
    3106:	3a 40       	sbci	r19, 0x0A	; 10
    3108:	46 4c       	sbci	r20, 0xC6	; 198
    310a:	50 54       	subi	r21, 0x40	; 64
    310c:	58 5b       	subi	r21, 0xB8	; 184
    310e:	5e 61       	ori	r21, 0x1E	; 30
    3110:	63 65       	ori	r22, 0x53	; 83
    3112:	67 69       	ori	r22, 0x97	; 151
    3114:	6b 6c       	ori	r22, 0xCB	; 203
    3116:	6e 6f       	ori	r22, 0xFE	; 254
    3118:	70 71       	andi	r23, 0x10	; 16
    311a:	72 73       	andi	r23, 0x32	; 50
    311c:	74 75       	andi	r23, 0x54	; 84
    311e:	76 77       	andi	r23, 0x76	; 118
    3120:	77 78       	andi	r23, 0x87	; 135
    3122:	79 79       	andi	r23, 0x99	; 153
    3124:	7a 7a       	andi	r23, 0xAA	; 170
    3126:	7b 7b       	andi	r23, 0xBB	; 187
    3128:	7c 7c       	andi	r23, 0xCC	; 204
    312a:	7c 7d       	andi	r23, 0xDC	; 220
    312c:	7d 7d       	andi	r23, 0xDD	; 221
    312e:	7e 7e       	andi	r23, 0xEE	; 238
    3130:	7e 7e       	andi	r23, 0xEE	; 238
    3132:	7f 7f       	andi	r23, 0xFF	; 255
    3134:	7f 7f       	andi	r23, 0xFF	; 255
    3136:	7f 7f       	andi	r23, 0xFF	; 255
    3138:	7f 7f       	andi	r23, 0xFF	; 255
    313a:	7f 7f       	andi	r23, 0xFF	; 255
    313c:	7f 7f       	andi	r23, 0xFF	; 255
    313e:	7f 7f       	andi	r23, 0xFF	; 255
    3140:	7f 7f       	andi	r23, 0xFF	; 255
    3142:	7f 7f       	andi	r23, 0xFF	; 255
    3144:	7f 7f       	andi	r23, 0xFF	; 255
    3146:	7f 7f       	andi	r23, 0xFF	; 255
    3148:	7f 7f       	andi	r23, 0xFF	; 255
    314a:	7f 7f       	andi	r23, 0xFF	; 255
    314c:	7f 7e       	andi	r23, 0xEF	; 239
    314e:	7e 7e       	andi	r23, 0xEE	; 238
    3150:	7e 7d       	andi	r23, 0xDE	; 222
    3152:	7d 7d       	andi	r23, 0xDD	; 221
    3154:	7c 7c       	andi	r23, 0xCC	; 204
    3156:	7c 7b       	andi	r23, 0xBC	; 188
    3158:	7b 7a       	andi	r23, 0xAB	; 171
    315a:	7a 79       	andi	r23, 0x9A	; 154
    315c:	79 78       	andi	r23, 0x89	; 137
    315e:	77 77       	andi	r23, 0x77	; 119
    3160:	76 75       	andi	r23, 0x56	; 86
    3162:	74 73       	andi	r23, 0x34	; 52
    3164:	72 71       	andi	r23, 0x12	; 18
    3166:	70 6f       	ori	r23, 0xF0	; 240
    3168:	6e 6c       	ori	r22, 0xCE	; 206
    316a:	6b 69       	ori	r22, 0x9B	; 155
    316c:	67 65       	ori	r22, 0x57	; 87
    316e:	63 61       	ori	r22, 0x13	; 19
    3170:	5e 5b       	subi	r21, 0xBE	; 190
    3172:	58 54       	subi	r21, 0x48	; 72
    3174:	50 4c       	sbci	r21, 0xC0	; 192
    3176:	46 40       	sbci	r20, 0x06	; 6
    3178:	3a 31       	cpi	r19, 0x1A	; 26
    317a:	28 1e       	adc	r2, r24
    317c:	13 09       	sbc	r17, r3
    317e:	03 00       	.word	0x0003	; ????
    3180:	c6 cc       	rjmp	.-1652   	; 0x2b0e <waves+0xe>
    3182:	d5 db       	rcall	.-2134   	; 0x292e <TriggerNote+0x22>
    3184:	df e3       	ldi	r29, 0x3F	; 63
    3186:	e5 e7       	ldi	r30, 0x75	; 117
    3188:	e9 ea       	ldi	r30, 0xA9	; 169
    318a:	eb ec       	ldi	r30, 0xCB	; 203
    318c:	ed ee       	ldi	r30, 0xED	; 237
    318e:	ef ef       	ldi	r30, 0xFF	; 255
    3190:	f0 f0       	brcs	.+60     	; 0x31ce <waves+0x6ce>
    3192:	f0 f1       	brcs	.+124    	; 0x3210 <waves+0x710>
    3194:	f1 f1       	breq	.+124    	; 0x3212 <waves+0x712>
    3196:	f1 f2       	breq	.-68     	; 0x3154 <waves+0x654>
    3198:	f2 f2       	brmi	.-68     	; 0x3156 <waves+0x656>
    319a:	f2 f2       	brmi	.-68     	; 0x3158 <waves+0x658>
    319c:	f2 f2       	brmi	.-68     	; 0x315a <waves+0x65a>
    319e:	f2 f3       	brmi	.-4      	; 0x319c <waves+0x69c>
    31a0:	f3 f3       	brvs	.-4      	; 0x319e <waves+0x69e>
    31a2:	f3 f3       	brvs	.-4      	; 0x31a0 <waves+0x6a0>
    31a4:	f3 f3       	brvs	.-4      	; 0x31a2 <waves+0x6a2>
    31a6:	f3 f3       	brvs	.-4      	; 0x31a4 <waves+0x6a4>
    31a8:	f3 f3       	brvs	.-4      	; 0x31a6 <waves+0x6a6>
    31aa:	f3 f3       	brvs	.-4      	; 0x31a8 <waves+0x6a8>
    31ac:	f3 f3       	brvs	.-4      	; 0x31aa <waves+0x6aa>
    31ae:	f3 f3       	brvs	.-4      	; 0x31ac <waves+0x6ac>
    31b0:	f3 f3       	brvs	.-4      	; 0x31ae <waves+0x6ae>
    31b2:	f3 f3       	brvs	.-4      	; 0x31b0 <waves+0x6b0>
    31b4:	f3 f3       	brvs	.-4      	; 0x31b2 <waves+0x6b2>
    31b6:	f3 f3       	brvs	.-4      	; 0x31b4 <waves+0x6b4>
    31b8:	f3 f3       	brvs	.-4      	; 0x31b6 <waves+0x6b6>
    31ba:	f3 f3       	brvs	.-4      	; 0x31b8 <waves+0x6b8>
    31bc:	f3 f3       	brvs	.-4      	; 0x31ba <waves+0x6ba>
    31be:	f3 f3       	brvs	.-4      	; 0x31bc <waves+0x6bc>
    31c0:	f3 f3       	brvs	.-4      	; 0x31be <waves+0x6be>
    31c2:	f3 f3       	brvs	.-4      	; 0x31c0 <waves+0x6c0>
    31c4:	f3 f3       	brvs	.-4      	; 0x31c2 <waves+0x6c2>
    31c6:	f3 f3       	brvs	.-4      	; 0x31c4 <waves+0x6c4>
    31c8:	f3 f3       	brvs	.-4      	; 0x31c6 <waves+0x6c6>
    31ca:	f3 f3       	brvs	.-4      	; 0x31c8 <waves+0x6c8>
    31cc:	f3 f3       	brvs	.-4      	; 0x31ca <waves+0x6ca>
    31ce:	f3 f3       	brvs	.-4      	; 0x31cc <waves+0x6cc>
    31d0:	f3 f3       	brvs	.-4      	; 0x31ce <waves+0x6ce>
    31d2:	f3 f3       	brvs	.-4      	; 0x31d0 <waves+0x6d0>
    31d4:	f3 f3       	brvs	.-4      	; 0x31d2 <waves+0x6d2>
    31d6:	f3 f3       	brvs	.-4      	; 0x31d4 <waves+0x6d4>
    31d8:	f3 f3       	brvs	.-4      	; 0x31d6 <waves+0x6d6>
    31da:	f3 f3       	brvs	.-4      	; 0x31d8 <waves+0x6d8>
    31dc:	f3 f3       	brvs	.-4      	; 0x31da <waves+0x6da>
    31de:	f3 f3       	brvs	.-4      	; 0x31dc <waves+0x6dc>
    31e0:	f2 f2       	brmi	.-68     	; 0x319e <waves+0x69e>
    31e2:	f2 f2       	brmi	.-68     	; 0x31a0 <waves+0x6a0>
    31e4:	f2 f2       	brmi	.-68     	; 0x31a2 <waves+0x6a2>
    31e6:	f2 f2       	brmi	.-68     	; 0x31a4 <waves+0x6a4>
    31e8:	f1 f1       	breq	.+124    	; 0x3266 <waves+0x766>
    31ea:	f1 f1       	breq	.+124    	; 0x3268 <waves+0x768>
    31ec:	f0 f0       	brcs	.+60     	; 0x322a <waves+0x72a>
    31ee:	f0 ef       	ldi	r31, 0xF0	; 240
    31f0:	ef ee       	ldi	r30, 0xEF	; 239
    31f2:	ed ec       	ldi	r30, 0xCD	; 205
    31f4:	eb ea       	ldi	r30, 0xAB	; 171
    31f6:	e9 e7       	ldi	r30, 0x79	; 121
    31f8:	e5 e3       	ldi	r30, 0x35	; 53
    31fa:	df db       	rcall	.-2114   	; 0x29ba <SetMixerWave>
    31fc:	d5 cc       	rjmp	.-1622   	; 0x2ba8 <waves+0xa8>
    31fe:	c6 00       	.word	0x00c6	; ????
    3200:	00 28       	or	r0, r0
    3202:	3d 42       	sbci	r19, 0x2D	; 45
    3204:	30 2d       	mov	r19, r0
    3206:	2c 2b       	or	r18, r28
    3208:	2c 2d       	mov	r18, r12
    320a:	2e 2f       	mov	r18, r30
    320c:	30 32       	cpi	r19, 0x20	; 32
    320e:	33 35       	cpi	r19, 0x53	; 83
    3210:	37 39       	cpi	r19, 0x97	; 151
    3212:	3b 3d       	cpi	r19, 0xDB	; 219
    3214:	3f 41       	sbci	r19, 0x1F	; 31
    3216:	43 45       	sbci	r20, 0x53	; 83
    3218:	48 4a       	sbci	r20, 0xA8	; 168
    321a:	4c 4e       	sbci	r20, 0xEC	; 236
    321c:	50 53       	subi	r21, 0x30	; 48
    321e:	55 57       	subi	r21, 0x75	; 117
    3220:	59 5b       	subi	r21, 0xB9	; 185
    3222:	5d 5f       	subi	r21, 0xFD	; 253
    3224:	61 63       	ori	r22, 0x31	; 49
    3226:	65 67       	ori	r22, 0x75	; 117
    3228:	69 6b       	ori	r22, 0xB9	; 185
    322a:	6c 6e       	ori	r22, 0xEC	; 236
    322c:	70 71       	andi	r23, 0x10	; 16
    322e:	73 74       	andi	r23, 0x43	; 67
    3230:	75 77       	andi	r23, 0x75	; 117
    3232:	78 79       	andi	r23, 0x98	; 152
    3234:	7a 7b       	andi	r23, 0xBA	; 186
    3236:	7c 7d       	andi	r23, 0xDC	; 220
    3238:	7d 7e       	andi	r23, 0xED	; 237
    323a:	7e 7f       	andi	r23, 0xFE	; 254
    323c:	7f 7f       	andi	r23, 0xFF	; 255
    323e:	7f 7f       	andi	r23, 0xFF	; 255
    3240:	7f 7f       	andi	r23, 0xFF	; 255
    3242:	7f 7f       	andi	r23, 0xFF	; 255
    3244:	7f 7f       	andi	r23, 0xFF	; 255
    3246:	7e 7e       	andi	r23, 0xEE	; 238
    3248:	7d 7d       	andi	r23, 0xDD	; 221
    324a:	7c 7b       	andi	r23, 0xBC	; 188
    324c:	7a 79       	andi	r23, 0x9A	; 154
    324e:	78 77       	andi	r23, 0x78	; 120
    3250:	75 74       	andi	r23, 0x45	; 69
    3252:	73 71       	andi	r23, 0x13	; 19
    3254:	70 6e       	ori	r23, 0xE0	; 224
    3256:	6c 6b       	ori	r22, 0xBC	; 188
    3258:	69 67       	ori	r22, 0x79	; 121
    325a:	65 63       	ori	r22, 0x35	; 53
    325c:	61 5f       	subi	r22, 0xF1	; 241
    325e:	5d 5b       	subi	r21, 0xBD	; 189
    3260:	59 57       	subi	r21, 0x79	; 121
    3262:	55 53       	subi	r21, 0x35	; 53
    3264:	50 4e       	sbci	r21, 0xE0	; 224
    3266:	4c 4a       	sbci	r20, 0xAC	; 172
    3268:	48 45       	sbci	r20, 0x58	; 88
    326a:	43 41       	sbci	r20, 0x13	; 19
    326c:	3f 3d       	cpi	r19, 0xDF	; 223
    326e:	3b 39       	cpi	r19, 0x9B	; 155
    3270:	37 35       	cpi	r19, 0x57	; 87
    3272:	33 32       	cpi	r19, 0x23	; 35
    3274:	30 2f       	mov	r19, r16
    3276:	2e 2d       	mov	r18, r14
    3278:	2c 2b       	or	r18, r28
    327a:	2c 2d       	mov	r18, r12
    327c:	30 42       	sbci	r19, 0x20	; 32
    327e:	3d 28       	or	r3, r13
    3280:	00 e9       	ldi	r16, 0x90	; 144
    3282:	e5 fe       	sbrs	r14, 5
    3284:	d4 d7       	rcall	.+4008   	; 0x422e <__data_load_end+0x10a>
    3286:	d7 d7       	rcall	.+4014   	; 0x4236 <__data_load_end+0x112>
    3288:	d6 d4       	rcall	.+2476   	; 0x3c36 <draw+0x26>
    328a:	d2 d0       	rcall	.+420    	; 0x3430 <waves+0x930>
    328c:	ce cc       	rjmp	.-1636   	; 0x2c2a <waves+0x12a>
    328e:	ca c8       	rjmp	.-3692   	; 0x2424 <PatchCommand14+0x6>
    3290:	c6 c3       	rjmp	.+1932   	; 0x3a1e <update+0x2c4>
    3292:	c1 bf       	out	0x31, r28	; 49
    3294:	bd ba       	out	0x1d, r11	; 29
    3296:	b8 b6       	in	r11, 0x38	; 56
    3298:	b4 b1       	in	r27, 0x04	; 4
    329a:	af ad       	ldd	r26, Y+63	; 0x3f
    329c:	ab a9       	ldd	r26, Y+51	; 0x33
    329e:	a7 a5       	ldd	r26, Z+47	; 0x2f
    32a0:	a3 a1       	ldd	r26, Z+35	; 0x23
    32a2:	9f 9e       	mul	r9, r31
    32a4:	9c 9a       	sbi	0x13, 4	; 19
    32a6:	99 97       	sbiw	r26, 0x29	; 41
    32a8:	95 94       	asr	r9
    32aa:	93 91       	.word	0x9193	; ????
    32ac:	90 8f       	std	Z+24, r25	; 0x18
    32ae:	8d 8c       	ldd	r8, Y+29	; 0x1d
    32b0:	8b 8a       	std	Y+19, r8	; 0x13
    32b2:	89 88       	ldd	r8, Y+17	; 0x11
    32b4:	88 87       	std	Y+8, r24	; 0x08
    32b6:	86 85       	ldd	r24, Z+14	; 0x0e
    32b8:	85 84       	ldd	r8, Z+13	; 0x0d
    32ba:	84 84       	ldd	r8, Z+12	; 0x0c
    32bc:	83 83       	std	Z+3, r24	; 0x03
    32be:	83 83       	std	Z+3, r24	; 0x03
    32c0:	83 83       	std	Z+3, r24	; 0x03
    32c2:	83 83       	std	Z+3, r24	; 0x03
    32c4:	83 84       	ldd	r8, Z+11	; 0x0b
    32c6:	84 84       	ldd	r8, Z+12	; 0x0c
    32c8:	85 85       	ldd	r24, Z+13	; 0x0d
    32ca:	86 87       	std	Z+14, r24	; 0x0e
    32cc:	88 88       	ldd	r8, Y+16	; 0x10
    32ce:	89 8a       	std	Y+17, r8	; 0x11
    32d0:	8b 8c       	ldd	r8, Y+27	; 0x1b
    32d2:	8d 8f       	std	Y+29, r24	; 0x1d
    32d4:	90 91 93 94 	lds	r25, 0x9493	; 0x809493 <__bss_end+0x8acb>
    32d8:	95 97       	sbiw	r26, 0x25	; 37
    32da:	99 9a       	sbi	0x13, 1	; 19
    32dc:	9c 9e       	mul	r9, r28
    32de:	9f a1       	ldd	r25, Y+39	; 0x27
    32e0:	a3 a5       	ldd	r26, Z+43	; 0x2b
    32e2:	a7 a9       	ldd	r26, Z+55	; 0x37
    32e4:	ab ad       	ldd	r26, Y+59	; 0x3b
    32e6:	af b1       	in	r26, 0x0f	; 15
    32e8:	b4 b6       	in	r11, 0x34	; 52
    32ea:	b8 ba       	out	0x18, r11	; 24
    32ec:	bd bf       	out	0x3d, r27	; 61
    32ee:	c1 c3       	rjmp	.+1922   	; 0x3a72 <update+0x318>
    32f0:	c6 c8       	rjmp	.-3700   	; 0x247e <ProcessMusic+0xc>
    32f2:	ca cc       	rjmp	.-1644   	; 0x2c88 <waves+0x188>
    32f4:	ce d0       	rcall	.+412    	; 0x3492 <waves+0x992>
    32f6:	d2 d4       	rcall	.+2468   	; 0x3c9c <draw+0x8c>
    32f8:	d6 d7       	rcall	.+4012   	; 0x42a6 <__data_load_end+0x182>
    32fa:	d7 d7       	rcall	.+4014   	; 0x42aa <__data_load_end+0x186>
    32fc:	d4 fe       	sbrs	r13, 4
    32fe:	e5 e9       	ldi	r30, 0x95	; 149
    3300:	f9 f8       	.word	0xf8f9	; ????
    3302:	f9 f5       	brne	.+126    	; 0x3382 <waves+0x882>
    3304:	eb e1       	ldi	r30, 0x1B	; 27
    3306:	dd de       	rcall	.-582    	; 0x30c2 <waves+0x5c2>
    3308:	e0 e2       	ldi	r30, 0x20	; 32
    330a:	e4 e5       	ldi	r30, 0x54	; 84
    330c:	e6 e5       	ldi	r30, 0x56	; 86
    330e:	e4 e2       	ldi	r30, 0x24	; 36
    3310:	de d9       	rcall	.-3140   	; 0x26ce <ProcessMusic+0x25c>
    3312:	d2 ca       	rjmp	.-2652   	; 0x28b8 <TriggerCommon+0x48>
    3314:	c1 b7       	in	r28, 0x31	; 49
    3316:	ac a2       	std	Y+36, r10	; 0x24
    3318:	99 91       	ld	r25, Y+
    331a:	8a 86       	std	Y+10, r8	; 0x0a
    331c:	83 81       	ldd	r24, Z+3	; 0x03
    331e:	80 80       	ld	r8, Z
    3320:	81 82       	std	Z+1, r8	; 0x01
    3322:	83 85       	ldd	r24, Z+11	; 0x0b
    3324:	86 88       	ldd	r8, Z+22	; 0x16
    3326:	8a 8c       	ldd	r8, Y+26	; 0x1a
    3328:	8d 8f       	std	Y+29, r24	; 0x1d
    332a:	90 92 93 95 	sts	0x9593, r9	; 0x809593 <__bss_end+0x8bcb>
    332e:	96 97       	sbiw	r26, 0x26	; 38
    3330:	98 99       	sbic	0x13, 0	; 19
    3332:	9a 9b       	sbis	0x13, 2	; 19
    3334:	9b 9c       	mul	r9, r11
    3336:	9d 9d       	mul	r25, r13
    3338:	9d 9e       	mul	r9, r29
    333a:	9e 9e       	mul	r9, r30
    333c:	9f 9f       	mul	r25, r31
    333e:	9f 9f       	mul	r25, r31
    3340:	9f 9f       	mul	r25, r31
    3342:	9f 9e       	mul	r9, r31
    3344:	9e 9e       	mul	r9, r30
    3346:	9d 9d       	mul	r25, r13
    3348:	9d 9c       	mul	r9, r13
    334a:	9b 9b       	sbis	0x13, 3	; 19
    334c:	9a 99       	sbic	0x13, 2	; 19
    334e:	98 97       	sbiw	r26, 0x28	; 40
    3350:	96 95       	lsr	r25
    3352:	93 92       	.word	0x9293	; ????
    3354:	90 8f       	std	Z+24, r25	; 0x18
    3356:	8d 8c       	ldd	r8, Y+29	; 0x1d
    3358:	8a 88       	ldd	r8, Y+18	; 0x12
    335a:	86 85       	ldd	r24, Z+14	; 0x0e
    335c:	83 82       	std	Z+3, r8	; 0x03
    335e:	81 80       	ldd	r8, Z+1	; 0x01
    3360:	80 81       	ld	r24, Z
    3362:	83 86       	std	Z+11, r8	; 0x0b
    3364:	8a 91       	ld	r24, -Y
    3366:	99 a2       	std	Y+33, r9	; 0x21
    3368:	ac b7       	in	r26, 0x3c	; 60
    336a:	c1 ca       	rjmp	.-2686   	; 0x28ee <TriggerCommon+0x7e>
    336c:	d2 d9       	rcall	.-3164   	; 0x2712 <ProcessMusic+0x2a0>
    336e:	de e2       	ldi	r29, 0x2E	; 46
    3370:	e4 e5       	ldi	r30, 0x54	; 84
    3372:	e6 e5       	ldi	r30, 0x56	; 86
    3374:	e4 e2       	ldi	r30, 0x24	; 36
    3376:	e0 de       	rcall	.-576    	; 0x3138 <waves+0x638>
    3378:	dd e1       	ldi	r29, 0x1D	; 29
    337a:	eb f5       	brvc	.+122    	; 0x33f6 <waves+0x8f6>
    337c:	f9 f8       	.word	0xf8f9	; ????
    337e:	f9 00       	.word	0x00f9	; ????
    3380:	07 08       	sbc	r0, r7
    3382:	07 0b       	sbc	r16, r23
    3384:	15 1f       	adc	r17, r21
    3386:	23 22       	and	r2, r19
    3388:	20 1e       	adc	r2, r16
    338a:	1c 1b       	sub	r17, r28
    338c:	1a 1b       	sub	r17, r26
    338e:	1c 1e       	adc	r1, r28
    3390:	22 27       	eor	r18, r18
    3392:	2e 36       	cpi	r18, 0x6E	; 110
    3394:	3f 49       	sbci	r19, 0x9F	; 159
    3396:	54 5e       	subi	r21, 0xE4	; 228
    3398:	67 6f       	ori	r22, 0xF7	; 247
    339a:	76 7a       	andi	r23, 0xA6	; 166
    339c:	7e 7f       	andi	r23, 0xFE	; 254
    339e:	7f 7f       	andi	r23, 0xFF	; 255
    33a0:	7f 7e       	andi	r23, 0xEF	; 239
    33a2:	7d 7b       	andi	r23, 0xBD	; 189
    33a4:	7a 78       	andi	r23, 0x8A	; 138
    33a6:	76 74       	andi	r23, 0x46	; 70
    33a8:	73 71       	andi	r23, 0x13	; 19
    33aa:	70 6e       	ori	r23, 0xE0	; 224
    33ac:	6d 6b       	ori	r22, 0xBD	; 189
    33ae:	6a 69       	ori	r22, 0x9A	; 154
    33b0:	68 67       	ori	r22, 0x78	; 120
    33b2:	66 65       	ori	r22, 0x56	; 86
    33b4:	65 64       	ori	r22, 0x45	; 69
    33b6:	64 63       	ori	r22, 0x34	; 52
    33b8:	63 62       	ori	r22, 0x23	; 35
    33ba:	62 62       	ori	r22, 0x22	; 34
    33bc:	61 61       	ori	r22, 0x11	; 17
    33be:	61 61       	ori	r22, 0x11	; 17
    33c0:	61 61       	ori	r22, 0x11	; 17
    33c2:	61 62       	ori	r22, 0x21	; 33
    33c4:	62 62       	ori	r22, 0x22	; 34
    33c6:	63 63       	ori	r22, 0x33	; 51
    33c8:	63 64       	ori	r22, 0x43	; 67
    33ca:	65 65       	ori	r22, 0x55	; 85
    33cc:	66 67       	ori	r22, 0x76	; 118
    33ce:	68 69       	ori	r22, 0x98	; 152
    33d0:	6a 6b       	ori	r22, 0xBA	; 186
    33d2:	6d 6e       	ori	r22, 0xED	; 237
    33d4:	70 71       	andi	r23, 0x10	; 16
    33d6:	73 74       	andi	r23, 0x43	; 67
    33d8:	76 78       	andi	r23, 0x86	; 134
    33da:	7a 7b       	andi	r23, 0xBA	; 186
    33dc:	7d 7e       	andi	r23, 0xED	; 237
    33de:	7f 7f       	andi	r23, 0xFF	; 255
    33e0:	7f 7f       	andi	r23, 0xFF	; 255
    33e2:	7e 7a       	andi	r23, 0xAE	; 174
    33e4:	76 6f       	ori	r23, 0xF6	; 246
    33e6:	67 5e       	subi	r22, 0xE7	; 231
    33e8:	54 49       	sbci	r21, 0x94	; 148
    33ea:	3f 36       	cpi	r19, 0x6F	; 111
    33ec:	2e 27       	eor	r18, r30
    33ee:	22 1e       	adc	r2, r18
    33f0:	1c 1b       	sub	r17, r28
    33f2:	1a 1b       	sub	r17, r26
    33f4:	1c 1e       	adc	r1, r28
    33f6:	20 22       	and	r2, r16
    33f8:	23 1f       	adc	r18, r19
    33fa:	15 0b       	sbc	r17, r21
    33fc:	07 08       	sbc	r0, r7
    33fe:	07 00       	.word	0x0007	; ????
    3400:	1f 31       	cpi	r17, 0x1F	; 31
    3402:	3d 44       	sbci	r19, 0x4D	; 77
    3404:	4e 53       	subi	r20, 0x3E	; 62
    3406:	54 56       	subi	r21, 0x64	; 100
    3408:	5a 5f       	subi	r21, 0xFA	; 250
    340a:	64 69       	ori	r22, 0x94	; 148
    340c:	6e 74       	andi	r22, 0x4E	; 78
    340e:	76 79       	andi	r23, 0x96	; 150
    3410:	7c 7f       	andi	r23, 0xFC	; 252
    3412:	7f 7f       	andi	r23, 0xFF	; 255
    3414:	7f 7f       	andi	r23, 0xFF	; 255
    3416:	7f 7f       	andi	r23, 0xFF	; 255
    3418:	7f 7f       	andi	r23, 0xFF	; 255
    341a:	7f 7f       	andi	r23, 0xFF	; 255
    341c:	7f 7f       	andi	r23, 0xFF	; 255
    341e:	7f 7f       	andi	r23, 0xFF	; 255
    3420:	7f 7f       	andi	r23, 0xFF	; 255
    3422:	7f 7f       	andi	r23, 0xFF	; 255
    3424:	7f 7f       	andi	r23, 0xFF	; 255
    3426:	7f 7f       	andi	r23, 0xFF	; 255
    3428:	7f 7f       	andi	r23, 0xFF	; 255
    342a:	7f 7f       	andi	r23, 0xFF	; 255
    342c:	7f 7f       	andi	r23, 0xFF	; 255
    342e:	7f 7f       	andi	r23, 0xFF	; 255
    3430:	7f 7f       	andi	r23, 0xFF	; 255
    3432:	7f 7f       	andi	r23, 0xFF	; 255
    3434:	7f 7f       	andi	r23, 0xFF	; 255
    3436:	7f 7f       	andi	r23, 0xFF	; 255
    3438:	7f 7f       	andi	r23, 0xFF	; 255
    343a:	7f 7f       	andi	r23, 0xFF	; 255
    343c:	7f 7f       	andi	r23, 0xFF	; 255
    343e:	7f 7f       	andi	r23, 0xFF	; 255
    3440:	7f 7f       	andi	r23, 0xFF	; 255
    3442:	7f 7f       	andi	r23, 0xFF	; 255
    3444:	7f 7f       	andi	r23, 0xFF	; 255
    3446:	7f 7f       	andi	r23, 0xFF	; 255
    3448:	7f 7f       	andi	r23, 0xFF	; 255
    344a:	7f 7f       	andi	r23, 0xFF	; 255
    344c:	7f 7f       	andi	r23, 0xFF	; 255
    344e:	7f 7f       	andi	r23, 0xFF	; 255
    3450:	7f 7f       	andi	r23, 0xFF	; 255
    3452:	7f 7f       	andi	r23, 0xFF	; 255
    3454:	7f 7f       	andi	r23, 0xFF	; 255
    3456:	7f 7f       	andi	r23, 0xFF	; 255
    3458:	7f 7f       	andi	r23, 0xFF	; 255
    345a:	7f 7f       	andi	r23, 0xFF	; 255
    345c:	7f 7f       	andi	r23, 0xFF	; 255
    345e:	7f 7f       	andi	r23, 0xFF	; 255
    3460:	7f 7f       	andi	r23, 0xFF	; 255
    3462:	7f 7f       	andi	r23, 0xFF	; 255
    3464:	7f 7f       	andi	r23, 0xFF	; 255
    3466:	7f 7f       	andi	r23, 0xFF	; 255
    3468:	7f 7f       	andi	r23, 0xFF	; 255
    346a:	7f 7f       	andi	r23, 0xFF	; 255
    346c:	7f 7f       	andi	r23, 0xFF	; 255
    346e:	7f 7f       	andi	r23, 0xFF	; 255
    3470:	7f 7f       	andi	r23, 0xFF	; 255
    3472:	7f 7f       	andi	r23, 0xFF	; 255
    3474:	7f 7f       	andi	r23, 0xFF	; 255
    3476:	7f 7f       	andi	r23, 0xFF	; 255
    3478:	7f 7f       	andi	r23, 0xFF	; 255
    347a:	7f 7c       	andi	r23, 0xCF	; 207
    347c:	78 71       	andi	r23, 0x18	; 24
    347e:	68 4c       	sbci	r22, 0xC8	; 200
    3480:	2c 1c       	adc	r2, r12
    3482:	12 0c       	add	r1, r2
    3484:	0a 0b       	sbc	r16, r26
    3486:	0a 05       	cpc	r16, r10
    3488:	fd f3       	brhs	.-2      	; 0x3488 <waves+0x988>
    348a:	e9 df       	rcall	.-46     	; 0x345e <waves+0x95e>
    348c:	d4 ca       	rjmp	.-2648   	; 0x2a36 <steptable+0x42>
    348e:	c0 b7       	in	r28, 0x30	; 48
    3490:	ae a6       	std	Y+46, r10	; 0x2e
    3492:	9e 97       	sbiw	r26, 0x2e	; 46
    3494:	91 8b       	std	Z+17, r25	; 0x11
    3496:	86 85       	ldd	r24, Z+14	; 0x0e
    3498:	82 80       	ldd	r8, Z+2	; 0x02
    349a:	80 80       	ld	r8, Z
    349c:	80 80       	ld	r8, Z
    349e:	80 80       	ld	r8, Z
    34a0:	80 80       	ld	r8, Z
    34a2:	80 80       	ld	r8, Z
    34a4:	80 80       	ld	r8, Z
    34a6:	80 80       	ld	r8, Z
    34a8:	80 80       	ld	r8, Z
    34aa:	80 80       	ld	r8, Z
    34ac:	80 80       	ld	r8, Z
    34ae:	80 80       	ld	r8, Z
    34b0:	80 80       	ld	r8, Z
    34b2:	80 80       	ld	r8, Z
    34b4:	80 80       	ld	r8, Z
    34b6:	80 80       	ld	r8, Z
    34b8:	80 80       	ld	r8, Z
    34ba:	80 80       	ld	r8, Z
    34bc:	80 80       	ld	r8, Z
    34be:	80 80       	ld	r8, Z
    34c0:	80 80       	ld	r8, Z
    34c2:	80 80       	ld	r8, Z
    34c4:	80 80       	ld	r8, Z
    34c6:	80 80       	ld	r8, Z
    34c8:	80 80       	ld	r8, Z
    34ca:	80 80       	ld	r8, Z
    34cc:	80 80       	ld	r8, Z
    34ce:	80 80       	ld	r8, Z
    34d0:	80 80       	ld	r8, Z
    34d2:	80 80       	ld	r8, Z
    34d4:	80 80       	ld	r8, Z
    34d6:	80 80       	ld	r8, Z
    34d8:	80 80       	ld	r8, Z
    34da:	80 80       	ld	r8, Z
    34dc:	80 80       	ld	r8, Z
    34de:	80 80       	ld	r8, Z
    34e0:	80 80       	ld	r8, Z
    34e2:	80 80       	ld	r8, Z
    34e4:	80 80       	ld	r8, Z
    34e6:	80 80       	ld	r8, Z
    34e8:	80 80       	ld	r8, Z
    34ea:	80 80       	ld	r8, Z
    34ec:	80 80       	ld	r8, Z
    34ee:	80 80       	ld	r8, Z
    34f0:	80 80       	ld	r8, Z
    34f2:	80 80       	ld	r8, Z
    34f4:	80 87       	std	Z+8, r24	; 0x08
    34f6:	91 9d       	mul	r25, r1
    34f8:	ac c4       	rjmp	.+2392   	; 0x3e52 <MoveHero+0x60>
    34fa:	cb d4       	rcall	.+2454   	; 0x3e92 <drawRectangle+0x30>
    34fc:	dd f2       	brhs	.-74     	; 0x34b4 <waves+0x9b4>
    34fe:	fa fa       	.word	0xfafa	; ????

00003500 <DisplayLogo>:
    3500:	08 95       	ret

00003502 <InitializeVideoMode>:
		return;
	}
	
	fadeStep=FADER_STEPS;
	fadeDir=-1;
	doFade(speed,blocking);
    3502:	08 95       	ret

00003504 <VideoModeVsync>:
    3504:	0c 94 fa 1a 	jmp	0x35f4	; 0x35f4 <ProcessFading>

00003508 <PrintInt>:
    3508:	cf 92       	push	r12
    350a:	df 92       	push	r13
    350c:	ef 92       	push	r14
    350e:	ff 92       	push	r15
    3510:	0f 93       	push	r16
    3512:	1f 93       	push	r17
    3514:	cf 93       	push	r28
    3516:	df 93       	push	r29
    3518:	c8 2e       	mov	r12, r24
    351a:	d6 2f       	mov	r29, r22
    351c:	8a 01       	movw	r16, r20
    351e:	d2 2e       	mov	r13, r18
    3520:	c0 e0       	ldi	r28, 0x00	; 0
    3522:	8a e0       	ldi	r24, 0x0A	; 10
    3524:	e8 2e       	mov	r14, r24
    3526:	f1 2c       	mov	r15, r1
    3528:	2c 2d       	mov	r18, r12
    352a:	2c 1b       	sub	r18, r28
    352c:	01 15       	cp	r16, r1
    352e:	11 05       	cpc	r17, r1
    3530:	11 f4       	brne	.+4      	; 0x3536 <PrintInt+0x2e>
    3532:	c1 11       	cpse	r28, r1
    3534:	07 c0       	rjmp	.+14     	; 0x3544 <PrintInt+0x3c>
    3536:	c8 01       	movw	r24, r16
    3538:	b7 01       	movw	r22, r14
    353a:	0e 94 9b 1f 	call	0x3f36	; 0x3f36 <__udivmodhi4>
    353e:	40 e1       	ldi	r20, 0x10	; 16
    3540:	48 0f       	add	r20, r24
    3542:	05 c0       	rjmp	.+10     	; 0x354e <PrintInt+0x46>
    3544:	dd 20       	and	r13, r13
    3546:	11 f0       	breq	.+4      	; 0x354c <PrintInt+0x44>
    3548:	40 e1       	ldi	r20, 0x10	; 16
    354a:	01 c0       	rjmp	.+2      	; 0x354e <PrintInt+0x46>
    354c:	40 e0       	ldi	r20, 0x00	; 0
    354e:	6d 2f       	mov	r22, r29
    3550:	82 2f       	mov	r24, r18
    3552:	0e 94 bc 10 	call	0x2178	; 0x2178 <SetFont>
    3556:	c8 01       	movw	r24, r16
    3558:	b7 01       	movw	r22, r14
    355a:	0e 94 9b 1f 	call	0x3f36	; 0x3f36 <__udivmodhi4>
    355e:	8b 01       	movw	r16, r22
    3560:	cf 5f       	subi	r28, 0xFF	; 255
    3562:	c5 30       	cpi	r28, 0x05	; 5
    3564:	09 f7       	brne	.-62     	; 0x3528 <PrintInt+0x20>
    3566:	df 91       	pop	r29
    3568:	cf 91       	pop	r28
    356a:	1f 91       	pop	r17
    356c:	0f 91       	pop	r16
    356e:	ff 90       	pop	r15
    3570:	ef 90       	pop	r14
    3572:	df 90       	pop	r13
    3574:	cf 90       	pop	r12
    3576:	08 95       	ret

00003578 <Print>:
    3578:	df 92       	push	r13
    357a:	ef 92       	push	r14
    357c:	ff 92       	push	r15
    357e:	0f 93       	push	r16
    3580:	1f 93       	push	r17
    3582:	cf 93       	push	r28
    3584:	df 93       	push	r29
    3586:	7c 01       	movw	r14, r24
    3588:	d6 2e       	mov	r13, r22
    358a:	8a 01       	movw	r16, r20
    358c:	ec 01       	movw	r28, r24
    358e:	fe 01       	movw	r30, r28
    3590:	ee 19       	sub	r30, r14
    3592:	ff 09       	sbc	r31, r15
    3594:	e0 0f       	add	r30, r16
    3596:	f1 1f       	adc	r31, r17
    3598:	e4 91       	lpm	r30, Z
    359a:	ee 23       	and	r30, r30
    359c:	49 f0       	breq	.+18     	; 0x35b0 <Print+0x38>
    359e:	ef 77       	andi	r30, 0x7F	; 127
    35a0:	40 ee       	ldi	r20, 0xE0	; 224
    35a2:	4e 0f       	add	r20, r30
    35a4:	6d 2d       	mov	r22, r13
    35a6:	8c 2f       	mov	r24, r28
    35a8:	0e 94 bc 10 	call	0x2178	; 0x2178 <SetFont>
    35ac:	21 96       	adiw	r28, 0x01	; 1
    35ae:	ef cf       	rjmp	.-34     	; 0x358e <Print+0x16>
    35b0:	df 91       	pop	r29
    35b2:	cf 91       	pop	r28
    35b4:	1f 91       	pop	r17
    35b6:	0f 91       	pop	r16
    35b8:	ff 90       	pop	r15
    35ba:	ef 90       	pop	r14
    35bc:	df 90       	pop	r13
    35be:	08 95       	ret

000035c0 <PrintChar>:
    35c0:	40 52       	subi	r20, 0x20	; 32
    35c2:	0c 94 bc 10 	jmp	0x2178	; 0x2178 <SetFont>

000035c6 <WaitVsync>:
    35c6:	0f 93       	push	r16
    35c8:	1f 93       	push	r17
    35ca:	cf 93       	push	r28
    35cc:	df 93       	push	r29
    35ce:	8c 01       	movw	r16, r24
    35d0:	c0 e0       	ldi	r28, 0x00	; 0
    35d2:	d0 e0       	ldi	r29, 0x00	; 0
    35d4:	c0 17       	cp	r28, r16
    35d6:	d1 07       	cpc	r29, r17
    35d8:	44 f4       	brge	.+16     	; 0x35ea <WaitVsync+0x24>
    35da:	0e 94 d9 10 	call	0x21b2	; 0x21b2 <GetVsyncFlag>
    35de:	88 23       	and	r24, r24
    35e0:	e1 f3       	breq	.-8      	; 0x35da <WaitVsync+0x14>
    35e2:	0e 94 dd 10 	call	0x21ba	; 0x21ba <ClearVsyncFlag>
    35e6:	21 96       	adiw	r28, 0x01	; 1
    35e8:	f5 cf       	rjmp	.-22     	; 0x35d4 <WaitVsync+0xe>
    35ea:	df 91       	pop	r29
    35ec:	cf 91       	pop	r28
    35ee:	1f 91       	pop	r17
    35f0:	0f 91       	pop	r16
    35f2:	08 95       	ret

000035f4 <ProcessFading>:
}


//called by the kernel at each field end
void ProcessFading(){
	if(fadeActive==true){
    35f4:	80 91 c5 09 	lds	r24, 0x09C5	; 0x8009c5 <fadeActive>
    35f8:	88 23       	and	r24, r24
    35fa:	01 f1       	breq	.+64     	; 0x363c <ProcessFading+0x48>
		if(currFadeFrame==0){
    35fc:	80 91 c6 09 	lds	r24, 0x09C6	; 0x8009c6 <currFadeFrame>
    3600:	81 11       	cpse	r24, r1
    3602:	19 c0       	rjmp	.+50     	; 0x3636 <ProcessFading+0x42>
			currFadeFrame=fadeSpeed;
    3604:	80 91 c3 09 	lds	r24, 0x09C3	; 0x8009c3 <fadeSpeed>
    3608:	80 93 c6 09 	sts	0x09C6, r24	; 0x8009c6 <currFadeFrame>
			DDRC = pgm_read_byte(&(fader[fadeStep-1]));
    360c:	e0 91 c7 09 	lds	r30, 0x09C7	; 0x8009c7 <fadeStep>
    3610:	f0 e0       	ldi	r31, 0x00	; 0
    3612:	e1 52       	subi	r30, 0x21	; 33
    3614:	ff 4f       	sbci	r31, 0xFF	; 255
    3616:	e4 91       	lpm	r30, Z
    3618:	e7 b9       	out	0x07, r30	; 7
			fadeStep+=fadeDir;
    361a:	90 91 c7 09 	lds	r25, 0x09C7	; 0x8009c7 <fadeStep>
    361e:	80 91 c4 09 	lds	r24, 0x09C4	; 0x8009c4 <fadeDir>
    3622:	89 0f       	add	r24, r25
    3624:	80 93 c7 09 	sts	0x09C7, r24	; 0x8009c7 <fadeStep>
			if(fadeStep==0 || fadeStep==(FADER_STEPS+1)){
    3628:	88 23       	and	r24, r24
    362a:	11 f0       	breq	.+4      	; 0x3630 <ProcessFading+0x3c>
    362c:	8d 30       	cpi	r24, 0x0D	; 13
    362e:	31 f4       	brne	.+12     	; 0x363c <ProcessFading+0x48>
				fadeActive=false;
    3630:	10 92 c5 09 	sts	0x09C5, r1	; 0x8009c5 <fadeActive>
    3634:	08 95       	ret
			}
		}else{
			currFadeFrame--;
    3636:	81 50       	subi	r24, 0x01	; 1
    3638:	80 93 c6 09 	sts	0x09C6, r24	; 0x8009c6 <currFadeFrame>
    363c:	08 95       	ret

0000363e <getHealth>:
; Get Health
;****************************
.global getHealth
.section .text.getHealth
getHealth:
	ADD R24,R22
    363e:	86 0f       	add	r24, r22
	CLR	R25
    3640:	99 27       	eor	r25, r25
	RET
    3642:	08 95       	ret

00003644 <getScore>:
; Update the Score
;****************************
.global getScore
.section .text.getScore
getScore:
	ADD R24,R22
    3644:	86 0f       	add	r24, r22
	CLR	R25
    3646:	99 27       	eor	r25, r25
	RET
    3648:	08 95       	ret

0000364a <getStormTrooperCount>:
; Update stormtrooper count
;****************************
.global getStormTrooperCount
.section .text.getStormTrooperCount
getStormTrooperCount:
	ADD R24,R22
    364a:	86 0f       	add	r24, r22
	CLR	R25
    364c:	99 27       	eor	r25, r25
	RET
    364e:	08 95       	ret

00003650 <getFruitCount>:
; Update fruit count
;****************************
.global getFruitCount
.section .text.getFruitCount
getFruitCount:
	ADD R24,R22
    3650:	86 0f       	add	r24, r22
	CLR	R25
    3652:	99 27       	eor	r25, r25
	RET
    3654:	08 95       	ret

00003656 <main>:
}

int rnd(int max) {
	int result = rand() % max;
	return result;
}
    3656:	8c ee       	ldi	r24, 0xEC	; 236
    3658:	90 e0       	ldi	r25, 0x00	; 0
    365a:	0e 94 d4 10 	call	0x21a8	; 0x21a8 <SetFontTable>
    365e:	0e 94 56 1b 	call	0x36ac	; 0x36ac <init>
    3662:	81 e0       	ldi	r24, 0x01	; 1
    3664:	90 e0       	ldi	r25, 0x00	; 0
    3666:	0e 94 e3 1a 	call	0x35c6	; 0x35c6 <WaitVsync>
    366a:	80 e0       	ldi	r24, 0x00	; 0
    366c:	0e 94 e3 10 	call	0x21c6	; 0x21c6 <ReadJoypad>
    3670:	90 93 4f 09 	sts	0x094F, r25	; 0x80094f <buttonHeld+0x1>
    3674:	80 93 4e 09 	sts	0x094E, r24	; 0x80094e <buttonHeld>
    3678:	20 91 54 09 	lds	r18, 0x0954	; 0x800954 <buttonPrevious>
    367c:	30 91 55 09 	lds	r19, 0x0955	; 0x800955 <buttonPrevious+0x1>
    3680:	a9 01       	movw	r20, r18
    3682:	40 95       	com	r20
    3684:	50 95       	com	r21
    3686:	48 23       	and	r20, r24
    3688:	59 23       	and	r21, r25
    368a:	50 93 51 09 	sts	0x0951, r21	; 0x800951 <buttonPressed+0x1>
    368e:	40 93 50 09 	sts	0x0950, r20	; 0x800950 <buttonPressed>
    3692:	80 95       	com	r24
    3694:	90 95       	com	r25
    3696:	82 23       	and	r24, r18
    3698:	93 23       	and	r25, r19
    369a:	90 93 53 09 	sts	0x0953, r25	; 0x800953 <buttonReleased+0x1>
    369e:	80 93 52 09 	sts	0x0952, r24	; 0x800952 <buttonReleased>
    36a2:	0e 94 ad 1b 	call	0x375a	; 0x375a <update>
    36a6:	0e 94 08 1e 	call	0x3c10	; 0x3c10 <draw>
    36aa:	db cf       	rjmp	.-74     	; 0x3662 <main+0xc>

000036ac <init>:

void init() {
    36ac:	0f 93       	push	r16
    36ae:	1f 93       	push	r17
    36b0:	cf 93       	push	r28
    36b2:	df 93       	push	r29
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    36b4:	0e 94 31 20 	call	0x4062	; 0x4062 <rand>
	return result;
}

void init() {
	heroX = rnd(SCREEN_TILES_H);
    36b8:	08 e2       	ldi	r16, 0x28	; 40
    36ba:	10 e0       	ldi	r17, 0x00	; 0
    36bc:	b8 01       	movw	r22, r16
    36be:	0e 94 af 1f 	call	0x3f5e	; 0x3f5e <__divmodhi4>
    36c2:	90 93 33 09 	sts	0x0933, r25	; 0x800933 <heroX+0x1>
    36c6:	80 93 32 09 	sts	0x0932, r24	; 0x800932 <heroX>
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    36ca:	0e 94 31 20 	call	0x4062	; 0x4062 <rand>
	return result;
}

void init() {
	heroX = rnd(SCREEN_TILES_H);
	heroY = rnd(SCREEN_TILES_V);
    36ce:	c2 e1       	ldi	r28, 0x12	; 18
    36d0:	d0 e0       	ldi	r29, 0x00	; 0
    36d2:	be 01       	movw	r22, r28
    36d4:	0e 94 af 1f 	call	0x3f5e	; 0x3f5e <__divmodhi4>
    36d8:	90 93 35 09 	sts	0x0935, r25	; 0x800935 <heroY+0x1>
    36dc:	80 93 34 09 	sts	0x0934, r24	; 0x800934 <heroY>
	enemyY = 0;
    36e0:	10 92 39 09 	sts	0x0939, r1	; 0x800939 <enemyY+0x1>
    36e4:	10 92 38 09 	sts	0x0938, r1	; 0x800938 <enemyY>
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    36e8:	0e 94 31 20 	call	0x4062	; 0x4062 <rand>

void init() {
	heroX = rnd(SCREEN_TILES_H);
	heroY = rnd(SCREEN_TILES_V);
	enemyY = 0;
	enemyX = rnd(SCREEN_TILES_V);
    36ec:	be 01       	movw	r22, r28
    36ee:	0e 94 af 1f 	call	0x3f5e	; 0x3f5e <__divmodhi4>
    36f2:	90 93 37 09 	sts	0x0937, r25	; 0x800937 <enemyX+0x1>
    36f6:	80 93 36 09 	sts	0x0936, r24	; 0x800936 <enemyX>
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    36fa:	0e 94 31 20 	call	0x4062	; 0x4062 <rand>
	heroX = rnd(SCREEN_TILES_H);
	heroY = rnd(SCREEN_TILES_V);
	enemyY = 0;
	enemyX = rnd(SCREEN_TILES_V);

	followerY = rnd(SCREEN_TILES_V);
    36fe:	be 01       	movw	r22, r28
    3700:	0e 94 af 1f 	call	0x3f5e	; 0x3f5e <__divmodhi4>
    3704:	90 93 41 09 	sts	0x0941, r25	; 0x800941 <followerY+0x1>
    3708:	80 93 40 09 	sts	0x0940, r24	; 0x800940 <followerY>
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    370c:	0e 94 31 20 	call	0x4062	; 0x4062 <rand>
	heroY = rnd(SCREEN_TILES_V);
	enemyY = 0;
	enemyX = rnd(SCREEN_TILES_V);

	followerY = rnd(SCREEN_TILES_V);
	followerX = rnd(SCREEN_TILES_H);
    3710:	b8 01       	movw	r22, r16
    3712:	0e 94 af 1f 	call	0x3f5e	; 0x3f5e <__divmodhi4>
    3716:	90 93 3f 09 	sts	0x093F, r25	; 0x80093f <followerX+0x1>
    371a:	80 93 3e 09 	sts	0x093E, r24	; 0x80093e <followerX>

	patrolX = 0;
    371e:	10 92 3b 09 	sts	0x093B, r1	; 0x80093b <patrolX+0x1>
    3722:	10 92 3a 09 	sts	0x093A, r1	; 0x80093a <patrolX>
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    3726:	0e 94 31 20 	call	0x4062	; 0x4062 <rand>

	followerY = rnd(SCREEN_TILES_V);
	followerX = rnd(SCREEN_TILES_H);

	patrolX = 0;
	patrolY = rnd(SCREEN_TILES_V);
    372a:	be 01       	movw	r22, r28
    372c:	0e 94 af 1f 	call	0x3f5e	; 0x3f5e <__divmodhi4>
    3730:	90 93 3d 09 	sts	0x093D, r25	; 0x80093d <patrolY+0x1>
    3734:	80 93 3c 09 	sts	0x093C, r24	; 0x80093c <patrolY>

	medicX = 15;
    3738:	8f e0       	ldi	r24, 0x0F	; 15
    373a:	90 e0       	ldi	r25, 0x00	; 0
    373c:	90 93 43 09 	sts	0x0943, r25	; 0x800943 <medicX+0x1>
    3740:	80 93 42 09 	sts	0x0942, r24	; 0x800942 <medicX>
	medicY = 10;
    3744:	8a e0       	ldi	r24, 0x0A	; 10
    3746:	90 e0       	ldi	r25, 0x00	; 0
    3748:	90 93 45 09 	sts	0x0945, r25	; 0x800945 <medicY+0x1>
    374c:	80 93 44 09 	sts	0x0944, r24	; 0x800944 <medicY>
	
}
    3750:	df 91       	pop	r29
    3752:	cf 91       	pop	r28
    3754:	1f 91       	pop	r17
    3756:	0f 91       	pop	r16
    3758:	08 95       	ret

0000375a <update>:

void update() {
    375a:	af 92       	push	r10
    375c:	bf 92       	push	r11
    375e:	cf 92       	push	r12
    3760:	df 92       	push	r13
    3762:	ef 92       	push	r14
    3764:	ff 92       	push	r15
    3766:	0f 93       	push	r16
    3768:	1f 93       	push	r17
    376a:	cf 93       	push	r28
    376c:	df 93       	push	r29

	if(health > 0)
    376e:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <health>
    3772:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <health+0x1>
    3776:	18 16       	cp	r1, r24
    3778:	19 06       	cpc	r1, r25
    377a:	0c f0       	brlt	.+2      	; 0x377e <update+0x24>
    377c:	3e c2       	rjmp	.+1148   	; 0x3bfa <update+0x4a0>
	{
		switch(buttonPressed){
    377e:	80 91 50 09 	lds	r24, 0x0950	; 0x800950 <buttonPressed>
    3782:	90 91 51 09 	lds	r25, 0x0951	; 0x800951 <buttonPressed+0x1>
    3786:	80 32       	cpi	r24, 0x20	; 32
    3788:	91 05       	cpc	r25, r1
    378a:	d1 f0       	breq	.+52     	; 0x37c0 <update+0x66>
    378c:	4c f4       	brge	.+18     	; 0x37a0 <update+0x46>
    378e:	82 30       	cpi	r24, 0x02	; 2
    3790:	91 05       	cpc	r25, r1
    3792:	19 f1       	breq	.+70     	; 0x37da <update+0x80>
    3794:	80 31       	cpi	r24, 0x10	; 16
    3796:	91 05       	cpc	r25, r1
    3798:	c1 f0       	breq	.+48     	; 0x37ca <update+0x70>
    379a:	01 97       	sbiw	r24, 0x01	; 1
    379c:	21 f5       	brne	.+72     	; 0x37e6 <update+0x8c>
    379e:	10 c0       	rjmp	.+32     	; 0x37c0 <update+0x66>
    37a0:	80 38       	cpi	r24, 0x80	; 128
    37a2:	91 05       	cpc	r25, r1
    37a4:	d1 f0       	breq	.+52     	; 0x37da <update+0x80>
    37a6:	24 f4       	brge	.+8      	; 0x37b0 <update+0x56>
    37a8:	80 34       	cpi	r24, 0x40	; 64
    37aa:	91 05       	cpc	r25, r1
    37ac:	89 f0       	breq	.+34     	; 0x37d0 <update+0x76>
    37ae:	1b c0       	rjmp	.+54     	; 0x37e6 <update+0x8c>
    37b0:	81 15       	cp	r24, r1
    37b2:	21 e0       	ldi	r18, 0x01	; 1
    37b4:	92 07       	cpc	r25, r18
    37b6:	49 f0       	breq	.+18     	; 0x37ca <update+0x70>
    37b8:	81 15       	cp	r24, r1
    37ba:	92 40       	sbci	r25, 0x02	; 2
    37bc:	49 f0       	breq	.+18     	; 0x37d0 <update+0x76>
    37be:	13 c0       	rjmp	.+38     	; 0x37e6 <update+0x8c>
			case BTN_UP:{
				MoveHero(0, -1);
				break;
			}
			case BTN_DOWN:{
				MoveHero(0, 1);
    37c0:	61 e0       	ldi	r22, 0x01	; 1
    37c2:	70 e0       	ldi	r23, 0x00	; 0
    37c4:	80 e0       	ldi	r24, 0x00	; 0
    37c6:	90 e0       	ldi	r25, 0x00	; 0
    37c8:	0c c0       	rjmp	.+24     	; 0x37e2 <update+0x88>
			case BTN_RIGHT:{
				MoveHero(1, 0);
				break;
			}
			case BTN_A:{
				MoveHero(0, -1);
    37ca:	6f ef       	ldi	r22, 0xFF	; 255
    37cc:	7f ef       	ldi	r23, 0xFF	; 255
    37ce:	fa cf       	rjmp	.-12     	; 0x37c4 <update+0x6a>
			case BTN_B:{
				MoveHero(0, 1);
				break;
			}
			case BTN_X:{
				MoveHero(-1, 0);
    37d0:	60 e0       	ldi	r22, 0x00	; 0
    37d2:	70 e0       	ldi	r23, 0x00	; 0
    37d4:	8f ef       	ldi	r24, 0xFF	; 255
    37d6:	9f ef       	ldi	r25, 0xFF	; 255
    37d8:	04 c0       	rjmp	.+8      	; 0x37e2 <update+0x88>
				break;
			}
			case BTN_Y:{
				MoveHero(1, 0);
    37da:	60 e0       	ldi	r22, 0x00	; 0
    37dc:	70 e0       	ldi	r23, 0x00	; 0
    37de:	81 e0       	ldi	r24, 0x01	; 1
    37e0:	90 e0       	ldi	r25, 0x00	; 0
    37e2:	0e 94 f9 1e 	call	0x3df2	; 0x3df2 <MoveHero>
			default:
				break;
		}


		buttonPrevious = buttonHeld;
    37e6:	80 91 4e 09 	lds	r24, 0x094E	; 0x80094e <buttonHeld>
    37ea:	90 91 4f 09 	lds	r25, 0x094F	; 0x80094f <buttonHeld+0x1>
    37ee:	90 93 55 09 	sts	0x0955, r25	; 0x800955 <buttonPrevious+0x1>
    37f2:	80 93 54 09 	sts	0x0954, r24	; 0x800954 <buttonPrevious>
		buttonPrevious = buttonHeld;

		followerThinkTime++;
    37f6:	20 91 46 09 	lds	r18, 0x0946	; 0x800946 <followerThinkTime>
    37fa:	30 91 47 09 	lds	r19, 0x0947	; 0x800947 <followerThinkTime+0x1>
    37fe:	2f 5f       	subi	r18, 0xFF	; 255
    3800:	3f 4f       	sbci	r19, 0xFF	; 255
    3802:	30 93 47 09 	sts	0x0947, r19	; 0x800947 <followerThinkTime+0x1>
    3806:	20 93 46 09 	sts	0x0946, r18	; 0x800946 <followerThinkTime>
		if (followerThinkTime > followerThinkInterval) {
    380a:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <followerThinkInterval>
    380e:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <followerThinkInterval+0x1>
    3812:	82 17       	cp	r24, r18
    3814:	93 07       	cpc	r25, r19
    3816:	0c f0       	brlt	.+2      	; 0x381a <update+0xc0>
    3818:	40 c0       	rjmp	.+128    	; 0x389a <update+0x140>
			if (followerX < heroX)
    381a:	20 91 3e 09 	lds	r18, 0x093E	; 0x80093e <followerX>
    381e:	30 91 3f 09 	lds	r19, 0x093F	; 0x80093f <followerX+0x1>
    3822:	40 91 32 09 	lds	r20, 0x0932	; 0x800932 <heroX>
    3826:	50 91 33 09 	lds	r21, 0x0933	; 0x800933 <heroX+0x1>
    382a:	24 17       	cp	r18, r20
    382c:	35 07       	cpc	r19, r21
    382e:	34 f4       	brge	.+12     	; 0x383c <update+0xe2>
				followerX++;
    3830:	2f 5f       	subi	r18, 0xFF	; 255
    3832:	3f 4f       	sbci	r19, 0xFF	; 255
    3834:	30 93 3f 09 	sts	0x093F, r19	; 0x80093f <followerX+0x1>
    3838:	20 93 3e 09 	sts	0x093E, r18	; 0x80093e <followerX>
			if (followerX > heroX)
    383c:	20 91 3e 09 	lds	r18, 0x093E	; 0x80093e <followerX>
    3840:	30 91 3f 09 	lds	r19, 0x093F	; 0x80093f <followerX+0x1>
    3844:	42 17       	cp	r20, r18
    3846:	53 07       	cpc	r21, r19
    3848:	34 f4       	brge	.+12     	; 0x3856 <update+0xfc>
				followerX--;
    384a:	21 50       	subi	r18, 0x01	; 1
    384c:	31 09       	sbc	r19, r1
    384e:	30 93 3f 09 	sts	0x093F, r19	; 0x80093f <followerX+0x1>
    3852:	20 93 3e 09 	sts	0x093E, r18	; 0x80093e <followerX>
			if (followerY < heroY)
    3856:	20 91 40 09 	lds	r18, 0x0940	; 0x800940 <followerY>
    385a:	30 91 41 09 	lds	r19, 0x0941	; 0x800941 <followerY+0x1>
    385e:	40 91 34 09 	lds	r20, 0x0934	; 0x800934 <heroY>
    3862:	50 91 35 09 	lds	r21, 0x0935	; 0x800935 <heroY+0x1>
    3866:	24 17       	cp	r18, r20
    3868:	35 07       	cpc	r19, r21
    386a:	34 f4       	brge	.+12     	; 0x3878 <update+0x11e>
				followerY++;
    386c:	2f 5f       	subi	r18, 0xFF	; 255
    386e:	3f 4f       	sbci	r19, 0xFF	; 255
    3870:	30 93 41 09 	sts	0x0941, r19	; 0x800941 <followerY+0x1>
    3874:	20 93 40 09 	sts	0x0940, r18	; 0x800940 <followerY>
			if (followerY > heroY)
    3878:	20 91 40 09 	lds	r18, 0x0940	; 0x800940 <followerY>
    387c:	30 91 41 09 	lds	r19, 0x0941	; 0x800941 <followerY+0x1>
    3880:	42 17       	cp	r20, r18
    3882:	53 07       	cpc	r21, r19
    3884:	34 f4       	brge	.+12     	; 0x3892 <update+0x138>
				followerY--;
    3886:	21 50       	subi	r18, 0x01	; 1
    3888:	31 09       	sbc	r19, r1
    388a:	30 93 41 09 	sts	0x0941, r19	; 0x800941 <followerY+0x1>
    388e:	20 93 40 09 	sts	0x0940, r18	; 0x800940 <followerY>
			followerThinkTime = 0;
    3892:	10 92 47 09 	sts	0x0947, r1	; 0x800947 <followerThinkTime+0x1>
    3896:	10 92 46 09 	sts	0x0946, r1	; 0x800946 <followerThinkTime>
		}
		if (score > 3 && followerThinkInterval > 0) {
    389a:	20 91 48 09 	lds	r18, 0x0948	; 0x800948 <score>
    389e:	30 91 49 09 	lds	r19, 0x0949	; 0x800949 <score+0x1>
    38a2:	24 30       	cpi	r18, 0x04	; 4
    38a4:	31 05       	cpc	r19, r1
    38a6:	2c f0       	brlt	.+10     	; 0x38b2 <update+0x158>
    38a8:	18 16       	cp	r1, r24
    38aa:	19 06       	cpc	r1, r25
    38ac:	6c f4       	brge	.+26     	; 0x38c8 <update+0x16e>
			followerThinkInterval--;
    38ae:	01 97       	sbiw	r24, 0x01	; 1
    38b0:	07 c0       	rjmp	.+14     	; 0x38c0 <update+0x166>
		}

		if (score == 0 && followerThinkInterval <= 0){
    38b2:	23 2b       	or	r18, r19
    38b4:	49 f4       	brne	.+18     	; 0x38c8 <update+0x16e>
    38b6:	18 16       	cp	r1, r24
    38b8:	19 06       	cpc	r1, r25
    38ba:	34 f0       	brlt	.+12     	; 0x38c8 <update+0x16e>
			followerThinkInterval = FOLLOWER_TIME_INTERVAL;
    38bc:	8c e2       	ldi	r24, 0x2C	; 44
    38be:	91 e0       	ldi	r25, 0x01	; 1
    38c0:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <followerThinkInterval+0x1>
    38c4:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <followerThinkInterval>
		}

		//write code to move the enemy down screen
		enemyY++;
    38c8:	80 91 38 09 	lds	r24, 0x0938	; 0x800938 <enemyY>
    38cc:	90 91 39 09 	lds	r25, 0x0939	; 0x800939 <enemyY+0x1>
    38d0:	01 96       	adiw	r24, 0x01	; 1
    38d2:	90 93 39 09 	sts	0x0939, r25	; 0x800939 <enemyY+0x1>
    38d6:	80 93 38 09 	sts	0x0938, r24	; 0x800938 <enemyY>
		patrolX++;
    38da:	20 91 3a 09 	lds	r18, 0x093A	; 0x80093a <patrolX>
    38de:	30 91 3b 09 	lds	r19, 0x093B	; 0x80093b <patrolX+0x1>
    38e2:	2f 5f       	subi	r18, 0xFF	; 255
    38e4:	3f 4f       	sbci	r19, 0xFF	; 255
    38e6:	30 93 3b 09 	sts	0x093B, r19	; 0x80093b <patrolX+0x1>
    38ea:	20 93 3a 09 	sts	0x093A, r18	; 0x80093a <patrolX>

		// check if the enemy has reached the bottom of the screen
		if (enemyY >= SCREEN_TILES_V - enemyHeight) {
    38ee:	40 91 06 01 	lds	r20, 0x0106	; 0x800106 <enemyHeight>
    38f2:	50 91 07 01 	lds	r21, 0x0107	; 0x800107 <enemyHeight+0x1>
    38f6:	22 e1       	ldi	r18, 0x12	; 18
    38f8:	30 e0       	ldi	r19, 0x00	; 0
    38fa:	24 1b       	sub	r18, r20
    38fc:	35 0b       	sbc	r19, r21
    38fe:	82 17       	cp	r24, r18
    3900:	93 07       	cpc	r25, r19
    3902:	ac f0       	brlt	.+42     	; 0x392e <update+0x1d4>
			// reset enemy here..
			// to top of screen and a random y
			enemyX = rnd(SCREEN_TILES_H - enemyWidth);
    3904:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <enemyWidth>
    3908:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <enemyWidth+0x1>
    390c:	c8 e2       	ldi	r28, 0x28	; 40
    390e:	d0 e0       	ldi	r29, 0x00	; 0
    3910:	c8 1b       	sub	r28, r24
    3912:	d9 0b       	sbc	r29, r25
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    3914:	0e 94 31 20 	call	0x4062	; 0x4062 <rand>

		// check if the enemy has reached the bottom of the screen
		if (enemyY >= SCREEN_TILES_V - enemyHeight) {
			// reset enemy here..
			// to top of screen and a random y
			enemyX = rnd(SCREEN_TILES_H - enemyWidth);
    3918:	be 01       	movw	r22, r28
    391a:	0e 94 af 1f 	call	0x3f5e	; 0x3f5e <__divmodhi4>
    391e:	90 93 37 09 	sts	0x0937, r25	; 0x800937 <enemyX+0x1>
    3922:	80 93 36 09 	sts	0x0936, r24	; 0x800936 <enemyX>
			enemyY = 0;
    3926:	10 92 39 09 	sts	0x0939, r1	; 0x800939 <enemyY+0x1>
    392a:	10 92 38 09 	sts	0x0938, r1	; 0x800938 <enemyY>
		}
		//check if patrol has reached end side of the scnreen
		if (patrolX >= SCREEN_TILES_H - patrolWidth) {
    392e:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <patrolWidth>
    3932:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <patrolWidth+0x1>
    3936:	88 e2       	ldi	r24, 0x28	; 40
    3938:	90 e0       	ldi	r25, 0x00	; 0
    393a:	82 1b       	sub	r24, r18
    393c:	93 0b       	sbc	r25, r19
    393e:	20 91 3a 09 	lds	r18, 0x093A	; 0x80093a <patrolX>
    3942:	30 91 3b 09 	lds	r19, 0x093B	; 0x80093b <patrolX+0x1>
    3946:	28 17       	cp	r18, r24
    3948:	39 07       	cpc	r19, r25
    394a:	ac f0       	brlt	.+42     	; 0x3976 <update+0x21c>
			// reset enemy here..
			// to top of screen and a random y
			patrolY = rnd(13 - patrolHeight);
    394c:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <patrolHeight>
    3950:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <patrolHeight+0x1>
    3954:	cd e0       	ldi	r28, 0x0D	; 13
    3956:	d0 e0       	ldi	r29, 0x00	; 0
    3958:	c8 1b       	sub	r28, r24
    395a:	d9 0b       	sbc	r29, r25
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    395c:	0e 94 31 20 	call	0x4062	; 0x4062 <rand>
		}
		//check if patrol has reached end side of the scnreen
		if (patrolX >= SCREEN_TILES_H - patrolWidth) {
			// reset enemy here..
			// to top of screen and a random y
			patrolY = rnd(13 - patrolHeight);
    3960:	be 01       	movw	r22, r28
    3962:	0e 94 af 1f 	call	0x3f5e	; 0x3f5e <__divmodhi4>
    3966:	90 93 3d 09 	sts	0x093D, r25	; 0x80093d <patrolY+0x1>
    396a:	80 93 3c 09 	sts	0x093C, r24	; 0x80093c <patrolY>
			patrolX = 0;
    396e:	10 92 3b 09 	sts	0x093B, r1	; 0x80093b <patrolX+0x1>
    3972:	10 92 3a 09 	sts	0x093A, r1	; 0x80093a <patrolX>
		}
		if (checkCollision(heroX, heroY, heroWidth, heroHeight, patrolX, patrolY,
    3976:	a0 90 0a 01 	lds	r10, 0x010A	; 0x80010a <patrolHeight>
    397a:	b0 90 0b 01 	lds	r11, 0x010B	; 0x80010b <patrolHeight+0x1>
    397e:	c0 90 08 01 	lds	r12, 0x0108	; 0x800108 <patrolWidth>
    3982:	d0 90 09 01 	lds	r13, 0x0109	; 0x800109 <patrolWidth+0x1>
    3986:	e0 90 3c 09 	lds	r14, 0x093C	; 0x80093c <patrolY>
    398a:	f0 90 3d 09 	lds	r15, 0x093D	; 0x80093d <patrolY+0x1>
    398e:	00 91 3a 09 	lds	r16, 0x093A	; 0x80093a <patrolX>
    3992:	10 91 3b 09 	lds	r17, 0x093B	; 0x80093b <patrolX+0x1>
    3996:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <heroHeight>
    399a:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <heroHeight+0x1>
    399e:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__data_start>
    39a2:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__data_start+0x1>
    39a6:	60 91 34 09 	lds	r22, 0x0934	; 0x800934 <heroY>
    39aa:	70 91 35 09 	lds	r23, 0x0935	; 0x800935 <heroY+0x1>
    39ae:	80 91 32 09 	lds	r24, 0x0932	; 0x800932 <heroX>
    39b2:	90 91 33 09 	lds	r25, 0x0933	; 0x800933 <heroX+0x1>
    39b6:	0e 94 d2 1e 	call	0x3da4	; 0x3da4 <checkCollision>
    39ba:	88 23       	and	r24, r24
    39bc:	69 f1       	breq	.+90     	; 0x3a18 <update+0x2be>
				patrolWidth, patrolHeight) == true) {
			// write code to add score and reset enemy
			health = getHealth(health, -1);
    39be:	6f ef       	ldi	r22, 0xFF	; 255
    39c0:	7f ef       	ldi	r23, 0xFF	; 255
    39c2:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <health>
    39c6:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <health+0x1>
    39ca:	0e 94 1f 1b 	call	0x363e	; 0x363e <getHealth>
    39ce:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <health+0x1>
    39d2:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <health>
			hitByTrooper = getStormTrooperCount(hitByTrooper,1);
    39d6:	61 e0       	ldi	r22, 0x01	; 1
    39d8:	70 e0       	ldi	r23, 0x00	; 0
    39da:	80 91 4a 09 	lds	r24, 0x094A	; 0x80094a <hitByTrooper>
    39de:	90 91 4b 09 	lds	r25, 0x094B	; 0x80094b <hitByTrooper+0x1>
    39e2:	0e 94 25 1b 	call	0x364a	; 0x364a <getStormTrooperCount>
    39e6:	90 93 4b 09 	sts	0x094B, r25	; 0x80094b <hitByTrooper+0x1>
    39ea:	80 93 4a 09 	sts	0x094A, r24	; 0x80094a <hitByTrooper>
			patrolY = rnd(SCREEN_TILES_V - patrolHeight);;
    39ee:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <patrolHeight>
    39f2:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <patrolHeight+0x1>
    39f6:	c2 e1       	ldi	r28, 0x12	; 18
    39f8:	d0 e0       	ldi	r29, 0x00	; 0
    39fa:	c8 1b       	sub	r28, r24
    39fc:	d9 0b       	sbc	r29, r25
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    39fe:	0e 94 31 20 	call	0x4062	; 0x4062 <rand>
		if (checkCollision(heroX, heroY, heroWidth, heroHeight, patrolX, patrolY,
				patrolWidth, patrolHeight) == true) {
			// write code to add score and reset enemy
			health = getHealth(health, -1);
			hitByTrooper = getStormTrooperCount(hitByTrooper,1);
			patrolY = rnd(SCREEN_TILES_V - patrolHeight);;
    3a02:	be 01       	movw	r22, r28
    3a04:	0e 94 af 1f 	call	0x3f5e	; 0x3f5e <__divmodhi4>
    3a08:	90 93 3d 09 	sts	0x093D, r25	; 0x80093d <patrolY+0x1>
    3a0c:	80 93 3c 09 	sts	0x093C, r24	; 0x80093c <patrolY>
			patrolX = 0;
    3a10:	10 92 3b 09 	sts	0x093B, r1	; 0x80093b <patrolX+0x1>
    3a14:	10 92 3a 09 	sts	0x093A, r1	; 0x80093a <patrolX>

		}



		if (checkCollision(heroX, heroY, heroWidth, heroHeight, enemyX, enemyY,
    3a18:	a0 90 06 01 	lds	r10, 0x0106	; 0x800106 <enemyHeight>
    3a1c:	b0 90 07 01 	lds	r11, 0x0107	; 0x800107 <enemyHeight+0x1>
    3a20:	c0 90 04 01 	lds	r12, 0x0104	; 0x800104 <enemyWidth>
    3a24:	d0 90 05 01 	lds	r13, 0x0105	; 0x800105 <enemyWidth+0x1>
    3a28:	e0 90 38 09 	lds	r14, 0x0938	; 0x800938 <enemyY>
    3a2c:	f0 90 39 09 	lds	r15, 0x0939	; 0x800939 <enemyY+0x1>
    3a30:	00 91 36 09 	lds	r16, 0x0936	; 0x800936 <enemyX>
    3a34:	10 91 37 09 	lds	r17, 0x0937	; 0x800937 <enemyX+0x1>
    3a38:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <heroHeight>
    3a3c:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <heroHeight+0x1>
    3a40:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__data_start>
    3a44:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__data_start+0x1>
    3a48:	60 91 34 09 	lds	r22, 0x0934	; 0x800934 <heroY>
    3a4c:	70 91 35 09 	lds	r23, 0x0935	; 0x800935 <heroY+0x1>
    3a50:	80 91 32 09 	lds	r24, 0x0932	; 0x800932 <heroX>
    3a54:	90 91 33 09 	lds	r25, 0x0933	; 0x800933 <heroX+0x1>
    3a58:	0e 94 d2 1e 	call	0x3da4	; 0x3da4 <checkCollision>
    3a5c:	88 23       	and	r24, r24
    3a5e:	09 f1       	breq	.+66     	; 0x3aa2 <update+0x348>
				enemyWidth, enemyHeight) == true) {
			// write code to add score and reset enemy
			score = getScore(score, 1);
    3a60:	61 e0       	ldi	r22, 0x01	; 1
    3a62:	70 e0       	ldi	r23, 0x00	; 0
    3a64:	80 91 48 09 	lds	r24, 0x0948	; 0x800948 <score>
    3a68:	90 91 49 09 	lds	r25, 0x0949	; 0x800949 <score+0x1>
    3a6c:	0e 94 22 1b 	call	0x3644	; 0x3644 <getScore>
    3a70:	90 93 49 09 	sts	0x0949, r25	; 0x800949 <score+0x1>
    3a74:	80 93 48 09 	sts	0x0948, r24	; 0x800948 <score>
			enemyX = rnd(SCREEN_TILES_H - enemyWidth);
    3a78:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <enemyWidth>
    3a7c:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <enemyWidth+0x1>
    3a80:	c8 e2       	ldi	r28, 0x28	; 40
    3a82:	d0 e0       	ldi	r29, 0x00	; 0
    3a84:	c8 1b       	sub	r28, r24
    3a86:	d9 0b       	sbc	r29, r25
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    3a88:	0e 94 31 20 	call	0x4062	; 0x4062 <rand>

		if (checkCollision(heroX, heroY, heroWidth, heroHeight, enemyX, enemyY,
				enemyWidth, enemyHeight) == true) {
			// write code to add score and reset enemy
			score = getScore(score, 1);
			enemyX = rnd(SCREEN_TILES_H - enemyWidth);
    3a8c:	be 01       	movw	r22, r28
    3a8e:	0e 94 af 1f 	call	0x3f5e	; 0x3f5e <__divmodhi4>
    3a92:	90 93 37 09 	sts	0x0937, r25	; 0x800937 <enemyX+0x1>
    3a96:	80 93 36 09 	sts	0x0936, r24	; 0x800936 <enemyX>
			enemyY = 0;
    3a9a:	10 92 39 09 	sts	0x0939, r1	; 0x800939 <enemyY+0x1>
    3a9e:	10 92 38 09 	sts	0x0938, r1	; 0x800938 <enemyY>
		}
		// collision with fruit medic
		if (checkCollision(heroX, heroY, heroWidth, heroHeight, medicX, medicY,
    3aa2:	a0 90 12 01 	lds	r10, 0x0112	; 0x800112 <medicHeight>
    3aa6:	b0 90 13 01 	lds	r11, 0x0113	; 0x800113 <medicHeight+0x1>
    3aaa:	c0 90 10 01 	lds	r12, 0x0110	; 0x800110 <medicWidth>
    3aae:	d0 90 11 01 	lds	r13, 0x0111	; 0x800111 <medicWidth+0x1>
    3ab2:	e0 90 44 09 	lds	r14, 0x0944	; 0x800944 <medicY>
    3ab6:	f0 90 45 09 	lds	r15, 0x0945	; 0x800945 <medicY+0x1>
    3aba:	00 91 42 09 	lds	r16, 0x0942	; 0x800942 <medicX>
    3abe:	10 91 43 09 	lds	r17, 0x0943	; 0x800943 <medicX+0x1>
    3ac2:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <heroHeight>
    3ac6:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <heroHeight+0x1>
    3aca:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__data_start>
    3ace:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__data_start+0x1>
    3ad2:	60 91 34 09 	lds	r22, 0x0934	; 0x800934 <heroY>
    3ad6:	70 91 35 09 	lds	r23, 0x0935	; 0x800935 <heroY+0x1>
    3ada:	80 91 32 09 	lds	r24, 0x0932	; 0x800932 <heroX>
    3ade:	90 91 33 09 	lds	r25, 0x0933	; 0x800933 <heroX+0x1>
    3ae2:	0e 94 d2 1e 	call	0x3da4	; 0x3da4 <checkCollision>
    3ae6:	88 23       	and	r24, r24
    3ae8:	61 f1       	breq	.+88     	; 0x3b42 <update+0x3e8>
				medicWidth, medicHeight) == true) {
			// write code to add score and reset enemy
			fruitsCollected = getFruitCount(fruitsCollected,1);
    3aea:	61 e0       	ldi	r22, 0x01	; 1
    3aec:	70 e0       	ldi	r23, 0x00	; 0
    3aee:	80 91 4c 09 	lds	r24, 0x094C	; 0x80094c <fruitsCollected>
    3af2:	90 91 4d 09 	lds	r25, 0x094D	; 0x80094d <fruitsCollected+0x1>
    3af6:	0e 94 28 1b 	call	0x3650	; 0x3650 <getFruitCount>
    3afa:	90 93 4d 09 	sts	0x094D, r25	; 0x80094d <fruitsCollected+0x1>
    3afe:	80 93 4c 09 	sts	0x094C, r24	; 0x80094c <fruitsCollected>
			health = getHealth(health, 1);
    3b02:	61 e0       	ldi	r22, 0x01	; 1
    3b04:	70 e0       	ldi	r23, 0x00	; 0
    3b06:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <health>
    3b0a:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <health+0x1>
    3b0e:	0e 94 1f 1b 	call	0x363e	; 0x363e <getHealth>
    3b12:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <health+0x1>
    3b16:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <health>
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    3b1a:	0e 94 31 20 	call	0x4062	; 0x4062 <rand>
				medicWidth, medicHeight) == true) {
			// write code to add score and reset enemy
			fruitsCollected = getFruitCount(fruitsCollected,1);
			health = getHealth(health, 1);

			medicY = rnd(SCREEN_TILES_V);
    3b1e:	62 e1       	ldi	r22, 0x12	; 18
    3b20:	70 e0       	ldi	r23, 0x00	; 0
    3b22:	0e 94 af 1f 	call	0x3f5e	; 0x3f5e <__divmodhi4>
    3b26:	90 93 45 09 	sts	0x0945, r25	; 0x800945 <medicY+0x1>
    3b2a:	80 93 44 09 	sts	0x0944, r24	; 0x800944 <medicY>
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    3b2e:	0e 94 31 20 	call	0x4062	; 0x4062 <rand>
			// write code to add score and reset enemy
			fruitsCollected = getFruitCount(fruitsCollected,1);
			health = getHealth(health, 1);

			medicY = rnd(SCREEN_TILES_V);
			medicX = rnd(SCREEN_TILES_H);
    3b32:	68 e2       	ldi	r22, 0x28	; 40
    3b34:	70 e0       	ldi	r23, 0x00	; 0
    3b36:	0e 94 af 1f 	call	0x3f5e	; 0x3f5e <__divmodhi4>
    3b3a:	90 93 43 09 	sts	0x0943, r25	; 0x800943 <medicX+0x1>
    3b3e:	80 93 42 09 	sts	0x0942, r24	; 0x800942 <medicX>

		}


		if (checkCollision(heroX, heroY, heroWidth, heroHeight, followerX,
    3b42:	a0 90 0e 01 	lds	r10, 0x010E	; 0x80010e <followerHeight>
    3b46:	b0 90 0f 01 	lds	r11, 0x010F	; 0x80010f <followerHeight+0x1>
    3b4a:	c0 90 0c 01 	lds	r12, 0x010C	; 0x80010c <followerWidth>
    3b4e:	d0 90 0d 01 	lds	r13, 0x010D	; 0x80010d <followerWidth+0x1>
    3b52:	e0 90 40 09 	lds	r14, 0x0940	; 0x800940 <followerY>
    3b56:	f0 90 41 09 	lds	r15, 0x0941	; 0x800941 <followerY+0x1>
    3b5a:	00 91 3e 09 	lds	r16, 0x093E	; 0x80093e <followerX>
    3b5e:	10 91 3f 09 	lds	r17, 0x093F	; 0x80093f <followerX+0x1>
    3b62:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <heroHeight>
    3b66:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <heroHeight+0x1>
    3b6a:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__data_start>
    3b6e:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__data_start+0x1>
    3b72:	60 91 34 09 	lds	r22, 0x0934	; 0x800934 <heroY>
    3b76:	70 91 35 09 	lds	r23, 0x0935	; 0x800935 <heroY+0x1>
    3b7a:	80 91 32 09 	lds	r24, 0x0932	; 0x800932 <heroX>
    3b7e:	90 91 33 09 	lds	r25, 0x0933	; 0x800933 <heroX+0x1>
    3b82:	0e 94 d2 1e 	call	0x3da4	; 0x3da4 <checkCollision>
    3b86:	88 23       	and	r24, r24
    3b88:	c1 f1       	breq	.+112    	; 0x3bfa <update+0x4a0>
				followerY, followerWidth, followerHeight) == true) {
			// write code to add score and reset enemy
			score = getScore(score, -1);
    3b8a:	6f ef       	ldi	r22, 0xFF	; 255
    3b8c:	7f ef       	ldi	r23, 0xFF	; 255
    3b8e:	80 91 48 09 	lds	r24, 0x0948	; 0x800948 <score>
    3b92:	90 91 49 09 	lds	r25, 0x0949	; 0x800949 <score+0x1>
    3b96:	0e 94 22 1b 	call	0x3644	; 0x3644 <getScore>
    3b9a:	90 93 49 09 	sts	0x0949, r25	; 0x800949 <score+0x1>
    3b9e:	80 93 48 09 	sts	0x0948, r24	; 0x800948 <score>
			health = getHealth(health, -1);
    3ba2:	6f ef       	ldi	r22, 0xFF	; 255
    3ba4:	7f ef       	ldi	r23, 0xFF	; 255
    3ba6:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <health>
    3baa:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <health+0x1>
    3bae:	0e 94 1f 1b 	call	0x363e	; 0x363e <getHealth>
    3bb2:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <health+0x1>
    3bb6:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <health>
			if(score <= 0 )
    3bba:	80 91 48 09 	lds	r24, 0x0948	; 0x800948 <score>
    3bbe:	90 91 49 09 	lds	r25, 0x0949	; 0x800949 <score+0x1>
    3bc2:	18 16       	cp	r1, r24
    3bc4:	19 06       	cpc	r1, r25
    3bc6:	24 f0       	brlt	.+8      	; 0x3bd0 <update+0x476>
			{
				score = 0;
    3bc8:	10 92 49 09 	sts	0x0949, r1	; 0x800949 <score+0x1>
    3bcc:	10 92 48 09 	sts	0x0948, r1	; 0x800948 <score>
			}
			followerX = rnd(SCREEN_TILES_H - followerWidth);
    3bd0:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <followerWidth>
    3bd4:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <followerWidth+0x1>
    3bd8:	c8 e2       	ldi	r28, 0x28	; 40
    3bda:	d0 e0       	ldi	r29, 0x00	; 0
    3bdc:	c8 1b       	sub	r28, r24
    3bde:	d9 0b       	sbc	r29, r25
		draw();
	}
}

int rnd(int max) {
	int result = rand() % max;
    3be0:	0e 94 31 20 	call	0x4062	; 0x4062 <rand>
			health = getHealth(health, -1);
			if(score <= 0 )
			{
				score = 0;
			}
			followerX = rnd(SCREEN_TILES_H - followerWidth);
    3be4:	be 01       	movw	r22, r28
    3be6:	0e 94 af 1f 	call	0x3f5e	; 0x3f5e <__divmodhi4>
    3bea:	90 93 3f 09 	sts	0x093F, r25	; 0x80093f <followerX+0x1>
    3bee:	80 93 3e 09 	sts	0x093E, r24	; 0x80093e <followerX>
			followerY = 0;
    3bf2:	10 92 41 09 	sts	0x0941, r1	; 0x800941 <followerY+0x1>
    3bf6:	10 92 40 09 	sts	0x0940, r1	; 0x800940 <followerY>
		}
	}
}
    3bfa:	df 91       	pop	r29
    3bfc:	cf 91       	pop	r28
    3bfe:	1f 91       	pop	r17
    3c00:	0f 91       	pop	r16
    3c02:	ff 90       	pop	r15
    3c04:	ef 90       	pop	r14
    3c06:	df 90       	pop	r13
    3c08:	cf 90       	pop	r12
    3c0a:	bf 90       	pop	r11
    3c0c:	af 90       	pop	r10
    3c0e:	08 95       	ret

00003c10 <draw>:

void draw() {
    3c10:	0f 93       	push	r16
	if(health >0)
    3c12:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <health>
    3c16:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <health+0x1>
    3c1a:	18 16       	cp	r1, r24
    3c1c:	19 06       	cpc	r1, r25
    3c1e:	0c f0       	brlt	.+2      	; 0x3c22 <draw+0x12>
    3c20:	ad c0       	rjmp	.+346    	; 0x3d7c <draw+0x16c>
	{
	//Clear the screen (fills Vram with tile zero)
	ClearVram();
    3c22:	0e 94 ae 10 	call	0x215c	; 0x215c <ClearVram>
	Print(1, 0, PSTR("Score"));
    3c26:	44 ea       	ldi	r20, 0xA4	; 164
    3c28:	5b e1       	ldi	r21, 0x1B	; 27
    3c2a:	60 e0       	ldi	r22, 0x00	; 0
    3c2c:	70 e0       	ldi	r23, 0x00	; 0
    3c2e:	81 e0       	ldi	r24, 0x01	; 1
    3c30:	90 e0       	ldi	r25, 0x00	; 0
    3c32:	0e 94 bc 1a 	call	0x3578	; 0x3578 <Print>
	PrintInt(10, 0, score, false);
    3c36:	40 91 48 09 	lds	r20, 0x0948	; 0x800948 <score>
    3c3a:	50 91 49 09 	lds	r21, 0x0949	; 0x800949 <score+0x1>
    3c3e:	20 e0       	ldi	r18, 0x00	; 0
    3c40:	60 e0       	ldi	r22, 0x00	; 0
    3c42:	70 e0       	ldi	r23, 0x00	; 0
    3c44:	8a e0       	ldi	r24, 0x0A	; 10
    3c46:	90 e0       	ldi	r25, 0x00	; 0
    3c48:	0e 94 84 1a 	call	0x3508	; 0x3508 <PrintInt>
	Print(15, 0, PSTR("Health"));
    3c4c:	4a ea       	ldi	r20, 0xAA	; 170
    3c4e:	5b e1       	ldi	r21, 0x1B	; 27
    3c50:	60 e0       	ldi	r22, 0x00	; 0
    3c52:	70 e0       	ldi	r23, 0x00	; 0
    3c54:	8f e0       	ldi	r24, 0x0F	; 15
    3c56:	90 e0       	ldi	r25, 0x00	; 0
    3c58:	0e 94 bc 1a 	call	0x3578	; 0x3578 <Print>
	PrintInt(26,0,health, false);
    3c5c:	40 91 16 01 	lds	r20, 0x0116	; 0x800116 <health>
    3c60:	50 91 17 01 	lds	r21, 0x0117	; 0x800117 <health+0x1>
    3c64:	20 e0       	ldi	r18, 0x00	; 0
    3c66:	60 e0       	ldi	r22, 0x00	; 0
    3c68:	70 e0       	ldi	r23, 0x00	; 0
    3c6a:	8a e1       	ldi	r24, 0x1A	; 26
    3c6c:	90 e0       	ldi	r25, 0x00	; 0
    3c6e:	0e 94 84 1a 	call	0x3508	; 0x3508 <PrintInt>
	Print(1, 17, PSTR("Hit by Stormtrooper"));
    3c72:	41 eb       	ldi	r20, 0xB1	; 177
    3c74:	5b e1       	ldi	r21, 0x1B	; 27
    3c76:	61 e1       	ldi	r22, 0x11	; 17
    3c78:	70 e0       	ldi	r23, 0x00	; 0
    3c7a:	81 e0       	ldi	r24, 0x01	; 1
    3c7c:	90 e0       	ldi	r25, 0x00	; 0
    3c7e:	0e 94 bc 1a 	call	0x3578	; 0x3578 <Print>
	PrintInt(24,17,hitByTrooper, false);
    3c82:	40 91 4a 09 	lds	r20, 0x094A	; 0x80094a <hitByTrooper>
    3c86:	50 91 4b 09 	lds	r21, 0x094B	; 0x80094b <hitByTrooper+0x1>
    3c8a:	20 e0       	ldi	r18, 0x00	; 0
    3c8c:	61 e1       	ldi	r22, 0x11	; 17
    3c8e:	70 e0       	ldi	r23, 0x00	; 0
    3c90:	88 e1       	ldi	r24, 0x18	; 24
    3c92:	90 e0       	ldi	r25, 0x00	; 0
    3c94:	0e 94 84 1a 	call	0x3508	; 0x3508 <PrintInt>
	Print(26, 17, PSTR("Fruits"));
    3c98:	45 ec       	ldi	r20, 0xC5	; 197
    3c9a:	5b e1       	ldi	r21, 0x1B	; 27
    3c9c:	61 e1       	ldi	r22, 0x11	; 17
    3c9e:	70 e0       	ldi	r23, 0x00	; 0
    3ca0:	8a e1       	ldi	r24, 0x1A	; 26
    3ca2:	90 e0       	ldi	r25, 0x00	; 0
    3ca4:	0e 94 bc 1a 	call	0x3578	; 0x3578 <Print>
	PrintInt(36,17,fruitsCollected, false);
    3ca8:	40 91 4c 09 	lds	r20, 0x094C	; 0x80094c <fruitsCollected>
    3cac:	50 91 4d 09 	lds	r21, 0x094D	; 0x80094d <fruitsCollected+0x1>
    3cb0:	20 e0       	ldi	r18, 0x00	; 0
    3cb2:	61 e1       	ldi	r22, 0x11	; 17
    3cb4:	70 e0       	ldi	r23, 0x00	; 0
    3cb6:	84 e2       	ldi	r24, 0x24	; 36
    3cb8:	90 e0       	ldi	r25, 0x00	; 0
    3cba:	0e 94 84 1a 	call	0x3508	; 0x3508 <PrintInt>

	drawRectangle(heroX, heroY, heroWidth, heroHeight, '0');
    3cbe:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <heroHeight>
    3cc2:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <heroHeight+0x1>
    3cc6:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__data_start>
    3cca:	50 91 01 01 	lds	r21, 0x0101	; 0x800101 <__data_start+0x1>
    3cce:	60 91 34 09 	lds	r22, 0x0934	; 0x800934 <heroY>
    3cd2:	70 91 35 09 	lds	r23, 0x0935	; 0x800935 <heroY+0x1>
    3cd6:	00 e3       	ldi	r16, 0x30	; 48
    3cd8:	80 91 32 09 	lds	r24, 0x0932	; 0x800932 <heroX>
    3cdc:	90 91 33 09 	lds	r25, 0x0933	; 0x800933 <heroX+0x1>
    3ce0:	0e 94 31 1f 	call	0x3e62	; 0x3e62 <drawRectangle>
	drawRectangle(enemyX, enemyY, enemyWidth, enemyHeight, '$');
    3ce4:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <enemyHeight>
    3ce8:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <enemyHeight+0x1>
    3cec:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <enemyWidth>
    3cf0:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <enemyWidth+0x1>
    3cf4:	60 91 38 09 	lds	r22, 0x0938	; 0x800938 <enemyY>
    3cf8:	70 91 39 09 	lds	r23, 0x0939	; 0x800939 <enemyY+0x1>
    3cfc:	04 e2       	ldi	r16, 0x24	; 36
    3cfe:	80 91 36 09 	lds	r24, 0x0936	; 0x800936 <enemyX>
    3d02:	90 91 37 09 	lds	r25, 0x0937	; 0x800937 <enemyX+0x1>
    3d06:	0e 94 31 1f 	call	0x3e62	; 0x3e62 <drawRectangle>
	drawRectangle(followerX, followerY, followerWidth, followerHeight, 'X');
    3d0a:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <followerHeight>
    3d0e:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <followerHeight+0x1>
    3d12:	40 91 0c 01 	lds	r20, 0x010C	; 0x80010c <followerWidth>
    3d16:	50 91 0d 01 	lds	r21, 0x010D	; 0x80010d <followerWidth+0x1>
    3d1a:	60 91 40 09 	lds	r22, 0x0940	; 0x800940 <followerY>
    3d1e:	70 91 41 09 	lds	r23, 0x0941	; 0x800941 <followerY+0x1>
    3d22:	08 e5       	ldi	r16, 0x58	; 88
    3d24:	80 91 3e 09 	lds	r24, 0x093E	; 0x80093e <followerX>
    3d28:	90 91 3f 09 	lds	r25, 0x093F	; 0x80093f <followerX+0x1>
    3d2c:	0e 94 31 1f 	call	0x3e62	; 0x3e62 <drawRectangle>
	drawRectangle(patrolX,patrolY,patrolWidth,patrolHeight,'-');
    3d30:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <patrolHeight>
    3d34:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <patrolHeight+0x1>
    3d38:	40 91 08 01 	lds	r20, 0x0108	; 0x800108 <patrolWidth>
    3d3c:	50 91 09 01 	lds	r21, 0x0109	; 0x800109 <patrolWidth+0x1>
    3d40:	60 91 3c 09 	lds	r22, 0x093C	; 0x80093c <patrolY>
    3d44:	70 91 3d 09 	lds	r23, 0x093D	; 0x80093d <patrolY+0x1>
    3d48:	0d e2       	ldi	r16, 0x2D	; 45
    3d4a:	80 91 3a 09 	lds	r24, 0x093A	; 0x80093a <patrolX>
    3d4e:	90 91 3b 09 	lds	r25, 0x093B	; 0x80093b <patrolX+0x1>
    3d52:	0e 94 31 1f 	call	0x3e62	; 0x3e62 <drawRectangle>
	drawRectangle(medicX,medicY,medicWidth,medicHeight,'U');
    3d56:	20 91 12 01 	lds	r18, 0x0112	; 0x800112 <medicHeight>
    3d5a:	30 91 13 01 	lds	r19, 0x0113	; 0x800113 <medicHeight+0x1>
    3d5e:	40 91 10 01 	lds	r20, 0x0110	; 0x800110 <medicWidth>
    3d62:	50 91 11 01 	lds	r21, 0x0111	; 0x800111 <medicWidth+0x1>
    3d66:	60 91 44 09 	lds	r22, 0x0944	; 0x800944 <medicY>
    3d6a:	70 91 45 09 	lds	r23, 0x0945	; 0x800945 <medicY+0x1>
    3d6e:	05 e5       	ldi	r16, 0x55	; 85
    3d70:	80 91 42 09 	lds	r24, 0x0942	; 0x800942 <medicX>
    3d74:	90 91 43 09 	lds	r25, 0x0943	; 0x800943 <medicX+0x1>
    3d78:	0e 94 31 1f 	call	0x3e62	; 0x3e62 <drawRectangle>

	}

	if(health <=0)
    3d7c:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <health>
    3d80:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <health+0x1>
    3d84:	18 16       	cp	r1, r24
    3d86:	19 06       	cpc	r1, r25
    3d88:	5c f0       	brlt	.+22     	; 0x3da0 <draw+0x190>
	{
		ClearVram();
    3d8a:	0e 94 ae 10 	call	0x215c	; 0x215c <ClearVram>
		Print(14, 9, PSTR("YOU LOST HAHA"));
    3d8e:	4c ec       	ldi	r20, 0xCC	; 204
    3d90:	5b e1       	ldi	r21, 0x1B	; 27
    3d92:	69 e0       	ldi	r22, 0x09	; 9
    3d94:	70 e0       	ldi	r23, 0x00	; 0
    3d96:	8e e0       	ldi	r24, 0x0E	; 14
    3d98:	90 e0       	ldi	r25, 0x00	; 0

	}
}
    3d9a:	0f 91       	pop	r16
	}

	if(health <=0)
	{
		ClearVram();
		Print(14, 9, PSTR("YOU LOST HAHA"));
    3d9c:	0c 94 bc 1a 	jmp	0x3578	; 0x3578 <Print>

	}
}
    3da0:	0f 91       	pop	r16
    3da2:	08 95       	ret

00003da4 <checkCollision>:

bool checkCollision(int x1, int y1, int width1, int height1, int x2, int y2,
		int width2, int height2) {
    3da4:	af 92       	push	r10
    3da6:	bf 92       	push	r11
    3da8:	cf 92       	push	r12
    3daa:	df 92       	push	r13
    3dac:	ef 92       	push	r14
    3dae:	ff 92       	push	r15
    3db0:	0f 93       	push	r16
    3db2:	1f 93       	push	r17
	// write the code to return true if collided.
	if (x1 + width1 < x2 || y1 + height1 < y2 || x1 > x2 + width2
    3db4:	48 0f       	add	r20, r24
    3db6:	59 1f       	adc	r21, r25
    3db8:	40 17       	cp	r20, r16
    3dba:	51 07       	cpc	r21, r17
    3dbc:	84 f0       	brlt	.+32     	; 0x3dde <checkCollision+0x3a>
    3dbe:	26 0f       	add	r18, r22
    3dc0:	37 1f       	adc	r19, r23
    3dc2:	2e 15       	cp	r18, r14
    3dc4:	3f 05       	cpc	r19, r15
    3dc6:	5c f0       	brlt	.+22     	; 0x3dde <checkCollision+0x3a>
    3dc8:	c0 0e       	add	r12, r16
    3dca:	d1 1e       	adc	r13, r17
    3dcc:	c8 16       	cp	r12, r24
    3dce:	d9 06       	cpc	r13, r25
    3dd0:	34 f0       	brlt	.+12     	; 0x3dde <checkCollision+0x3a>
			|| y1 > y2 + height2) {
    3dd2:	ae 0c       	add	r10, r14
    3dd4:	bf 1c       	adc	r11, r15
    3dd6:	81 e0       	ldi	r24, 0x01	; 1
    3dd8:	a6 16       	cp	r10, r22
    3dda:	b7 06       	cpc	r11, r23
    3ddc:	0c f4       	brge	.+2      	; 0x3de0 <checkCollision+0x3c>
		return false;
    3dde:	80 e0       	ldi	r24, 0x00	; 0
	} else {
		return true;
	}
}
    3de0:	1f 91       	pop	r17
    3de2:	0f 91       	pop	r16
    3de4:	ff 90       	pop	r15
    3de6:	ef 90       	pop	r14
    3de8:	df 90       	pop	r13
    3dea:	cf 90       	pop	r12
    3dec:	bf 90       	pop	r11
    3dee:	af 90       	pop	r10
    3df0:	08 95       	ret

00003df2 <MoveHero>:

void MoveHero(int x, int y) {
    3df2:	0f 93       	push	r16
    3df4:	1f 93       	push	r17
    3df6:	cf 93       	push	r28
    3df8:	df 93       	push	r29
	// write code to move hero
	heroX = heroX + x;
    3dfa:	00 91 32 09 	lds	r16, 0x0932	; 0x800932 <heroX>
    3dfe:	10 91 33 09 	lds	r17, 0x0933	; 0x800933 <heroX+0x1>
    3e02:	98 01       	movw	r18, r16
    3e04:	28 0f       	add	r18, r24
    3e06:	39 1f       	adc	r19, r25
    3e08:	30 93 33 09 	sts	0x0933, r19	; 0x800933 <heroX+0x1>
    3e0c:	20 93 32 09 	sts	0x0932, r18	; 0x800932 <heroX>
	heroY = heroY + y;
    3e10:	c0 91 34 09 	lds	r28, 0x0934	; 0x800934 <heroY>
    3e14:	d0 91 35 09 	lds	r29, 0x0935	; 0x800935 <heroY+0x1>
    3e18:	fe 01       	movw	r30, r28
    3e1a:	e6 0f       	add	r30, r22
    3e1c:	f7 1f       	adc	r31, r23
    3e1e:	f0 93 35 09 	sts	0x0935, r31	; 0x800935 <heroY+0x1>
    3e22:	e0 93 34 09 	sts	0x0934, r30	; 0x800934 <heroY>

	// write code to check if the hero is inside the window
	if (heroX < 0 || heroX + (TILE_WIDTH / heroWidth) >= SCREEN_TILES_H || heroY < 0
    3e26:	37 fd       	sbrc	r19, 7
    3e28:	0f c0       	rjmp	.+30     	; 0x3e48 <MoveHero+0x56>
    3e2a:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__data_start>
    3e2e:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__data_start+0x1>
    3e32:	86 e0       	ldi	r24, 0x06	; 6
    3e34:	90 e0       	ldi	r25, 0x00	; 0
    3e36:	0e 94 af 1f 	call	0x3f5e	; 0x3f5e <__divmodhi4>
    3e3a:	26 0f       	add	r18, r22
    3e3c:	37 1f       	adc	r19, r23
    3e3e:	28 32       	cpi	r18, 0x28	; 40
    3e40:	31 05       	cpc	r19, r1
    3e42:	14 f4       	brge	.+4      	; 0x3e48 <MoveHero+0x56>
			|| heroY >= 16 ) {
    3e44:	70 97       	sbiw	r30, 0x10	; 16
    3e46:	40 f0       	brcs	.+16     	; 0x3e58 <MoveHero+0x66>
		heroX = heroX - x;
    3e48:	10 93 33 09 	sts	0x0933, r17	; 0x800933 <heroX+0x1>
    3e4c:	00 93 32 09 	sts	0x0932, r16	; 0x800932 <heroX>
		heroY = heroY - y;
    3e50:	d0 93 35 09 	sts	0x0935, r29	; 0x800935 <heroY+0x1>
    3e54:	c0 93 34 09 	sts	0x0934, r28	; 0x800934 <heroY>
	}
}
    3e58:	df 91       	pop	r29
    3e5a:	cf 91       	pop	r28
    3e5c:	1f 91       	pop	r17
    3e5e:	0f 91       	pop	r16
    3e60:	08 95       	ret

00003e62 <drawRectangle>:

void drawRectangle(int x, int y, int width, int height, char c) {
    3e62:	5f 92       	push	r5
    3e64:	6f 92       	push	r6
    3e66:	7f 92       	push	r7
    3e68:	8f 92       	push	r8
    3e6a:	9f 92       	push	r9
    3e6c:	af 92       	push	r10
    3e6e:	bf 92       	push	r11
    3e70:	cf 92       	push	r12
    3e72:	df 92       	push	r13
    3e74:	ef 92       	push	r14
    3e76:	ff 92       	push	r15
    3e78:	0f 93       	push	r16
    3e7a:	1f 93       	push	r17
    3e7c:	cf 93       	push	r28
    3e7e:	df 93       	push	r29
	if (x < SCREEN_TILES_H && y < SCREEN_TILES_V) {
    3e80:	88 32       	cpi	r24, 0x28	; 40
    3e82:	91 05       	cpc	r25, r1
    3e84:	0c f0       	brlt	.+2      	; 0x3e88 <drawRectangle+0x26>
    3e86:	47 c0       	rjmp	.+142    	; 0x3f16 <drawRectangle+0xb4>
    3e88:	62 31       	cpi	r22, 0x12	; 18
    3e8a:	71 05       	cpc	r23, r1
    3e8c:	0c f0       	brlt	.+2      	; 0x3e90 <drawRectangle+0x2e>
    3e8e:	43 c0       	rjmp	.+134    	; 0x3f16 <drawRectangle+0xb4>
    3e90:	50 2e       	mov	r5, r16
    3e92:	49 01       	movw	r8, r18
    3e94:	ea 01       	movw	r28, r20
    3e96:	7b 01       	movw	r14, r22
    3e98:	8c 01       	movw	r16, r24
    3e9a:	3c 01       	movw	r6, r24

		for (int i = 0; i < width; i++) {
			if (x + i < SCREEN_TILES_H && y < SCREEN_TILES_V) {
				PrintChar(x + i, y, c);
			}
			if (y + height - 1 < SCREEN_TILES_V) {
    3e9c:	6b 01       	movw	r12, r22
    3e9e:	c2 0e       	add	r12, r18
    3ea0:	d3 1e       	adc	r13, r19
				PrintChar(x + i, y + height - 1, c);
    3ea2:	56 01       	movw	r10, r12
    3ea4:	81 e0       	ldi	r24, 0x01	; 1
    3ea6:	a8 1a       	sub	r10, r24
    3ea8:	b1 08       	sbc	r11, r1
}

void drawRectangle(int x, int y, int width, int height, char c) {
	if (x < SCREEN_TILES_H && y < SCREEN_TILES_V) {

		for (int i = 0; i < width; i++) {
    3eaa:	c3 01       	movw	r24, r6
    3eac:	80 1b       	sub	r24, r16
    3eae:	91 0b       	sbc	r25, r17
    3eb0:	8c 17       	cp	r24, r28
    3eb2:	9d 07       	cpc	r25, r29
    3eb4:	b4 f4       	brge	.+44     	; 0x3ee2 <drawRectangle+0x80>
			if (x + i < SCREEN_TILES_H && y < SCREEN_TILES_V) {
    3eb6:	88 e2       	ldi	r24, 0x28	; 40
    3eb8:	68 16       	cp	r6, r24
    3eba:	71 04       	cpc	r7, r1
    3ebc:	2c f4       	brge	.+10     	; 0x3ec8 <drawRectangle+0x66>
				PrintChar(x + i, y, c);
    3ebe:	45 2d       	mov	r20, r5
    3ec0:	b7 01       	movw	r22, r14
    3ec2:	c3 01       	movw	r24, r6
    3ec4:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <PrintChar>
			}
			if (y + height - 1 < SCREEN_TILES_V) {
    3ec8:	83 e1       	ldi	r24, 0x13	; 19
    3eca:	c8 16       	cp	r12, r24
    3ecc:	d1 04       	cpc	r13, r1
    3ece:	2c f4       	brge	.+10     	; 0x3eda <drawRectangle+0x78>
				PrintChar(x + i, y + height - 1, c);
    3ed0:	45 2d       	mov	r20, r5
    3ed2:	b5 01       	movw	r22, r10
    3ed4:	c3 01       	movw	r24, r6
    3ed6:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <PrintChar>
    3eda:	8f ef       	ldi	r24, 0xFF	; 255
    3edc:	68 1a       	sub	r6, r24
    3ede:	78 0a       	sbc	r7, r24
    3ee0:	e4 cf       	rjmp	.-56     	; 0x3eaa <drawRectangle+0x48>
}

void drawRectangle(int x, int y, int width, int height, char c) {
	if (x < SCREEN_TILES_H && y < SCREEN_TILES_V) {

		for (int i = 0; i < width; i++) {
    3ee2:	cc 24       	eor	r12, r12
    3ee4:	c3 94       	inc	r12
    3ee6:	d1 2c       	mov	r13, r1
				PrintChar(x + i, y + height - 1, c);
			}
		}
		for (int i = 1; i < height; i++) {
			PrintChar(x, y + i, c);
			PrintChar(x + width - 1, y + i, c);
    3ee8:	c0 0f       	add	r28, r16
    3eea:	d1 1f       	adc	r29, r17
    3eec:	21 97       	sbiw	r28, 0x01	; 1
			}
			if (y + height - 1 < SCREEN_TILES_V) {
				PrintChar(x + i, y + height - 1, c);
			}
		}
		for (int i = 1; i < height; i++) {
    3eee:	c8 14       	cp	r12, r8
    3ef0:	d9 04       	cpc	r13, r9
    3ef2:	8c f4       	brge	.+34     	; 0x3f16 <drawRectangle+0xb4>
    3ef4:	57 01       	movw	r10, r14
    3ef6:	ac 0c       	add	r10, r12
    3ef8:	bd 1c       	adc	r11, r13
			PrintChar(x, y + i, c);
    3efa:	45 2d       	mov	r20, r5
    3efc:	b5 01       	movw	r22, r10
    3efe:	c8 01       	movw	r24, r16
    3f00:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <PrintChar>
			PrintChar(x + width - 1, y + i, c);
    3f04:	45 2d       	mov	r20, r5
    3f06:	b5 01       	movw	r22, r10
    3f08:	ce 01       	movw	r24, r28
    3f0a:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <PrintChar>
			}
			if (y + height - 1 < SCREEN_TILES_V) {
				PrintChar(x + i, y + height - 1, c);
			}
		}
		for (int i = 1; i < height; i++) {
    3f0e:	8f ef       	ldi	r24, 0xFF	; 255
    3f10:	c8 1a       	sub	r12, r24
    3f12:	d8 0a       	sbc	r13, r24
    3f14:	ec cf       	rjmp	.-40     	; 0x3eee <drawRectangle+0x8c>
			PrintChar(x, y + i, c);
			PrintChar(x + width - 1, y + i, c);
		}
	}
}
    3f16:	df 91       	pop	r29
    3f18:	cf 91       	pop	r28
    3f1a:	1f 91       	pop	r17
    3f1c:	0f 91       	pop	r16
    3f1e:	ff 90       	pop	r15
    3f20:	ef 90       	pop	r14
    3f22:	df 90       	pop	r13
    3f24:	cf 90       	pop	r12
    3f26:	bf 90       	pop	r11
    3f28:	af 90       	pop	r10
    3f2a:	9f 90       	pop	r9
    3f2c:	8f 90       	pop	r8
    3f2e:	7f 90       	pop	r7
    3f30:	6f 90       	pop	r6
    3f32:	5f 90       	pop	r5
    3f34:	08 95       	ret

00003f36 <__udivmodhi4>:
    3f36:	aa 1b       	sub	r26, r26
    3f38:	bb 1b       	sub	r27, r27
    3f3a:	51 e1       	ldi	r21, 0x11	; 17
    3f3c:	07 c0       	rjmp	.+14     	; 0x3f4c <__udivmodhi4_ep>

00003f3e <__udivmodhi4_loop>:
    3f3e:	aa 1f       	adc	r26, r26
    3f40:	bb 1f       	adc	r27, r27
    3f42:	a6 17       	cp	r26, r22
    3f44:	b7 07       	cpc	r27, r23
    3f46:	10 f0       	brcs	.+4      	; 0x3f4c <__udivmodhi4_ep>
    3f48:	a6 1b       	sub	r26, r22
    3f4a:	b7 0b       	sbc	r27, r23

00003f4c <__udivmodhi4_ep>:
    3f4c:	88 1f       	adc	r24, r24
    3f4e:	99 1f       	adc	r25, r25
    3f50:	5a 95       	dec	r21
    3f52:	a9 f7       	brne	.-22     	; 0x3f3e <__udivmodhi4_loop>
    3f54:	80 95       	com	r24
    3f56:	90 95       	com	r25
    3f58:	bc 01       	movw	r22, r24
    3f5a:	cd 01       	movw	r24, r26
    3f5c:	08 95       	ret

00003f5e <__divmodhi4>:
    3f5e:	97 fb       	bst	r25, 7
    3f60:	07 2e       	mov	r0, r23
    3f62:	16 f4       	brtc	.+4      	; 0x3f68 <__divmodhi4+0xa>
    3f64:	00 94       	com	r0
    3f66:	07 d0       	rcall	.+14     	; 0x3f76 <__divmodhi4_neg1>
    3f68:	77 fd       	sbrc	r23, 7
    3f6a:	09 d0       	rcall	.+18     	; 0x3f7e <__divmodhi4_neg2>
    3f6c:	0e 94 9b 1f 	call	0x3f36	; 0x3f36 <__udivmodhi4>
    3f70:	07 fc       	sbrc	r0, 7
    3f72:	05 d0       	rcall	.+10     	; 0x3f7e <__divmodhi4_neg2>
    3f74:	3e f4       	brtc	.+14     	; 0x3f84 <__divmodhi4_exit>

00003f76 <__divmodhi4_neg1>:
    3f76:	90 95       	com	r25
    3f78:	81 95       	neg	r24
    3f7a:	9f 4f       	sbci	r25, 0xFF	; 255
    3f7c:	08 95       	ret

00003f7e <__divmodhi4_neg2>:
    3f7e:	70 95       	com	r23
    3f80:	61 95       	neg	r22
    3f82:	7f 4f       	sbci	r23, 0xFF	; 255

00003f84 <__divmodhi4_exit>:
    3f84:	08 95       	ret

00003f86 <__udivmodsi4>:
    3f86:	a1 e2       	ldi	r26, 0x21	; 33
    3f88:	1a 2e       	mov	r1, r26
    3f8a:	aa 1b       	sub	r26, r26
    3f8c:	bb 1b       	sub	r27, r27
    3f8e:	fd 01       	movw	r30, r26
    3f90:	0d c0       	rjmp	.+26     	; 0x3fac <__udivmodsi4_ep>

00003f92 <__udivmodsi4_loop>:
    3f92:	aa 1f       	adc	r26, r26
    3f94:	bb 1f       	adc	r27, r27
    3f96:	ee 1f       	adc	r30, r30
    3f98:	ff 1f       	adc	r31, r31
    3f9a:	a2 17       	cp	r26, r18
    3f9c:	b3 07       	cpc	r27, r19
    3f9e:	e4 07       	cpc	r30, r20
    3fa0:	f5 07       	cpc	r31, r21
    3fa2:	20 f0       	brcs	.+8      	; 0x3fac <__udivmodsi4_ep>
    3fa4:	a2 1b       	sub	r26, r18
    3fa6:	b3 0b       	sbc	r27, r19
    3fa8:	e4 0b       	sbc	r30, r20
    3faa:	f5 0b       	sbc	r31, r21

00003fac <__udivmodsi4_ep>:
    3fac:	66 1f       	adc	r22, r22
    3fae:	77 1f       	adc	r23, r23
    3fb0:	88 1f       	adc	r24, r24
    3fb2:	99 1f       	adc	r25, r25
    3fb4:	1a 94       	dec	r1
    3fb6:	69 f7       	brne	.-38     	; 0x3f92 <__udivmodsi4_loop>
    3fb8:	60 95       	com	r22
    3fba:	70 95       	com	r23
    3fbc:	80 95       	com	r24
    3fbe:	90 95       	com	r25
    3fc0:	9b 01       	movw	r18, r22
    3fc2:	ac 01       	movw	r20, r24
    3fc4:	bd 01       	movw	r22, r26
    3fc6:	cf 01       	movw	r24, r30
    3fc8:	08 95       	ret

00003fca <do_rand>:
    3fca:	8f 92       	push	r8
    3fcc:	9f 92       	push	r9
    3fce:	af 92       	push	r10
    3fd0:	bf 92       	push	r11
    3fd2:	cf 92       	push	r12
    3fd4:	df 92       	push	r13
    3fd6:	ef 92       	push	r14
    3fd8:	ff 92       	push	r15
    3fda:	cf 93       	push	r28
    3fdc:	df 93       	push	r29
    3fde:	ec 01       	movw	r28, r24
    3fe0:	68 81       	ld	r22, Y
    3fe2:	79 81       	ldd	r23, Y+1	; 0x01
    3fe4:	8a 81       	ldd	r24, Y+2	; 0x02
    3fe6:	9b 81       	ldd	r25, Y+3	; 0x03
    3fe8:	61 15       	cp	r22, r1
    3fea:	71 05       	cpc	r23, r1
    3fec:	81 05       	cpc	r24, r1
    3fee:	91 05       	cpc	r25, r1
    3ff0:	21 f4       	brne	.+8      	; 0x3ffa <do_rand+0x30>
    3ff2:	64 e2       	ldi	r22, 0x24	; 36
    3ff4:	79 ed       	ldi	r23, 0xD9	; 217
    3ff6:	8b e5       	ldi	r24, 0x5B	; 91
    3ff8:	97 e0       	ldi	r25, 0x07	; 7
    3ffa:	2d e1       	ldi	r18, 0x1D	; 29
    3ffc:	33 ef       	ldi	r19, 0xF3	; 243
    3ffe:	41 e0       	ldi	r20, 0x01	; 1
    4000:	50 e0       	ldi	r21, 0x00	; 0
    4002:	0e 94 41 20 	call	0x4082	; 0x4082 <__divmodsi4>
    4006:	49 01       	movw	r8, r18
    4008:	5a 01       	movw	r10, r20
    400a:	9b 01       	movw	r18, r22
    400c:	ac 01       	movw	r20, r24
    400e:	a7 ea       	ldi	r26, 0xA7	; 167
    4010:	b1 e4       	ldi	r27, 0x41	; 65
    4012:	0e 94 60 20 	call	0x40c0	; 0x40c0 <__muluhisi3>
    4016:	6b 01       	movw	r12, r22
    4018:	7c 01       	movw	r14, r24
    401a:	ac ee       	ldi	r26, 0xEC	; 236
    401c:	b4 ef       	ldi	r27, 0xF4	; 244
    401e:	a5 01       	movw	r20, r10
    4020:	94 01       	movw	r18, r8
    4022:	0e 94 6e 20 	call	0x40dc	; 0x40dc <__mulohisi3>
    4026:	dc 01       	movw	r26, r24
    4028:	cb 01       	movw	r24, r22
    402a:	8c 0d       	add	r24, r12
    402c:	9d 1d       	adc	r25, r13
    402e:	ae 1d       	adc	r26, r14
    4030:	bf 1d       	adc	r27, r15
    4032:	b7 ff       	sbrs	r27, 7
    4034:	03 c0       	rjmp	.+6      	; 0x403c <do_rand+0x72>
    4036:	01 97       	sbiw	r24, 0x01	; 1
    4038:	a1 09       	sbc	r26, r1
    403a:	b0 48       	sbci	r27, 0x80	; 128
    403c:	88 83       	st	Y, r24
    403e:	99 83       	std	Y+1, r25	; 0x01
    4040:	aa 83       	std	Y+2, r26	; 0x02
    4042:	bb 83       	std	Y+3, r27	; 0x03
    4044:	9f 77       	andi	r25, 0x7F	; 127
    4046:	df 91       	pop	r29
    4048:	cf 91       	pop	r28
    404a:	ff 90       	pop	r15
    404c:	ef 90       	pop	r14
    404e:	df 90       	pop	r13
    4050:	cf 90       	pop	r12
    4052:	bf 90       	pop	r11
    4054:	af 90       	pop	r10
    4056:	9f 90       	pop	r9
    4058:	8f 90       	pop	r8
    405a:	08 95       	ret

0000405c <rand_r>:
    405c:	0e 94 e5 1f 	call	0x3fca	; 0x3fca <do_rand>
    4060:	08 95       	ret

00004062 <rand>:
    4062:	88 e1       	ldi	r24, 0x18	; 24
    4064:	91 e0       	ldi	r25, 0x01	; 1
    4066:	0e 94 e5 1f 	call	0x3fca	; 0x3fca <do_rand>
    406a:	08 95       	ret

0000406c <srand>:
    406c:	a0 e0       	ldi	r26, 0x00	; 0
    406e:	b0 e0       	ldi	r27, 0x00	; 0
    4070:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <next>
    4074:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <next+0x1>
    4078:	a0 93 1a 01 	sts	0x011A, r26	; 0x80011a <next+0x2>
    407c:	b0 93 1b 01 	sts	0x011B, r27	; 0x80011b <next+0x3>
    4080:	08 95       	ret

00004082 <__divmodsi4>:
    4082:	05 2e       	mov	r0, r21
    4084:	97 fb       	bst	r25, 7
    4086:	1e f4       	brtc	.+6      	; 0x408e <__divmodsi4+0xc>
    4088:	00 94       	com	r0
    408a:	0e 94 58 20 	call	0x40b0	; 0x40b0 <__negsi2>
    408e:	57 fd       	sbrc	r21, 7
    4090:	07 d0       	rcall	.+14     	; 0x40a0 <__divmodsi4_neg2>
    4092:	0e 94 c3 1f 	call	0x3f86	; 0x3f86 <__udivmodsi4>
    4096:	07 fc       	sbrc	r0, 7
    4098:	03 d0       	rcall	.+6      	; 0x40a0 <__divmodsi4_neg2>
    409a:	4e f4       	brtc	.+18     	; 0x40ae <__divmodsi4_exit>
    409c:	0c 94 58 20 	jmp	0x40b0	; 0x40b0 <__negsi2>

000040a0 <__divmodsi4_neg2>:
    40a0:	50 95       	com	r21
    40a2:	40 95       	com	r20
    40a4:	30 95       	com	r19
    40a6:	21 95       	neg	r18
    40a8:	3f 4f       	sbci	r19, 0xFF	; 255
    40aa:	4f 4f       	sbci	r20, 0xFF	; 255
    40ac:	5f 4f       	sbci	r21, 0xFF	; 255

000040ae <__divmodsi4_exit>:
    40ae:	08 95       	ret

000040b0 <__negsi2>:
    40b0:	90 95       	com	r25
    40b2:	80 95       	com	r24
    40b4:	70 95       	com	r23
    40b6:	61 95       	neg	r22
    40b8:	7f 4f       	sbci	r23, 0xFF	; 255
    40ba:	8f 4f       	sbci	r24, 0xFF	; 255
    40bc:	9f 4f       	sbci	r25, 0xFF	; 255
    40be:	08 95       	ret

000040c0 <__muluhisi3>:
    40c0:	0e 94 73 20 	call	0x40e6	; 0x40e6 <__umulhisi3>
    40c4:	a5 9f       	mul	r26, r21
    40c6:	90 0d       	add	r25, r0
    40c8:	b4 9f       	mul	r27, r20
    40ca:	90 0d       	add	r25, r0
    40cc:	a4 9f       	mul	r26, r20
    40ce:	80 0d       	add	r24, r0
    40d0:	91 1d       	adc	r25, r1
    40d2:	11 24       	eor	r1, r1
    40d4:	08 95       	ret

000040d6 <__mulshisi3>:
    40d6:	b7 ff       	sbrs	r27, 7
    40d8:	0c 94 60 20 	jmp	0x40c0	; 0x40c0 <__muluhisi3>

000040dc <__mulohisi3>:
    40dc:	0e 94 60 20 	call	0x40c0	; 0x40c0 <__muluhisi3>
    40e0:	82 1b       	sub	r24, r18
    40e2:	93 0b       	sbc	r25, r19
    40e4:	08 95       	ret

000040e6 <__umulhisi3>:
    40e6:	a2 9f       	mul	r26, r18
    40e8:	b0 01       	movw	r22, r0
    40ea:	b3 9f       	mul	r27, r19
    40ec:	c0 01       	movw	r24, r0
    40ee:	a3 9f       	mul	r26, r19
    40f0:	70 0d       	add	r23, r0
    40f2:	81 1d       	adc	r24, r1
    40f4:	11 24       	eor	r1, r1
    40f6:	91 1d       	adc	r25, r1
    40f8:	b2 9f       	mul	r27, r18
    40fa:	70 0d       	add	r23, r0
    40fc:	81 1d       	adc	r24, r1
    40fe:	11 24       	eor	r1, r1
    4100:	91 1d       	adc	r25, r1
    4102:	08 95       	ret

00004104 <_exit>:
    4104:	f8 94       	cli

00004106 <__stop_program>:
    4106:	ff cf       	rjmp	.-2      	; 0x4106 <__stop_program>
